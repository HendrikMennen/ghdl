\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename GHDL.info
@documentencoding UTF-8
@ifinfo
@*Generated by Sphinx 6.1.3.@*
@end ifinfo
@settitle GHDL Documentation
@defindex ge
@paragraphindent 0
@exampleindent 4
@finalout
@dircategory Miscellaneous
@direntry
* GHDL: (GHDL.info). VHDL simulator.
@end direntry

@c %**end of header

@copying
@quotation
GHDL 3.0.0, Mar 08, 2023

Tristan Gingold and contributors

Copyright @copyright{} 2002-2023, Tristan Gingold and contributors
@end quotation

@end copying

@titlepage
@title GHDL Documentation
@insertcopying
@end titlepage
@contents

@c %** start of user preamble

@c %** end of user preamble

@ifnottex
@node Top
@top GHDL Documentation
@insertcopying
@end ifnottex

@c %**start of body
@anchor{index doc}@anchor{45}
@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML


@menu
* About:: 
* Getting | Installing:: 
* Contributing:: 
* Copyrights | Licenses:: 
* Quick Start Guide:: 
* Invoking GHDL:: 
* Simulation (runtime): Simulation runtime. 
* Synthesis:: 
* Additional Command Reference:: 
* Implementation of VHDL:: 
* Implementation of VITAL:: 
* Directory structure:: 
* Building GHDL from Sources:: 
* pyGHDL:: 
* GHDL Waveform (GHW): GHDL Waveform GHW. 
* Debugging:: 
* Coding Style:: 
* Scripts:: 
* Overview:: 
* Front-end:: 
* AST:: 
* Run Time Information (RTI): Run Time Information RTI. 
* GNATdoc:: 
* Index: Index<2>. 
* Python Module Index: Python Module Index<2>. 
* [Next] 4.0: [Next] 4 0. 
* [2023-03-08] 3.0.0: [2023-03-08] 3 0 0. 
* [2022-02-28] 2.0: [2022-02-28] 2 0. 
* [2021-02-02] 1.0: [2021-02-02] 1 0. 
* [2021-01-31] 1.0.0rc1: [2021-01-31] 1 0 0rc1. 
* [2020-05-21] Nightly build assets:: 
* [2020-05-09] New repositories and a wiki:: 
* [2020-02-28] 0.37: [2020-02-28] 0 37. 
* [2019-03-03] 0.36: [2019-03-03] 0 36. 
* [2019-02-23] 0.36-rc1: [2019-02-23] 0 36-rc1. 
* [2018-11-29] 20181129:: 
* [2017-12-20] GitHub organization:: 
* [2017-12-14] 0.35: [2017-12-14] 0 35. 
* [2017-08-15] 0.34: [2017-08-15] 0 34. 
* [2015-10-23] 0.33: [2015-10-23] 0 33. 
* [2014-11-XX] 0.32: [2014-11-XX] 0 32. 
* [2014-01-XX] 0.31: [2014-01-XX] 0 31. 
* 0.30: 0 30. 
* [2010-01-09] 0.29: [2010-01-09] 0 29. 
* [2009-09-17] 0.28: [2009-09-17] 0 28. 
* [2008-07-01] 0.27: [2008-07-01] 0 27. 
* [2007-04-08] 0.26: [2007-04-08] 0 26. 
* [2006-08-11] 0.25: [2006-08-11] 0 25. 
* [2006-06-25] 0.24: [2006-06-25] 0 24. 
* [2006-05-16] 0.23: [2006-05-16] 0 23. 
* [2006-03-28] 0.22: [2006-03-28] 0 22. 
* [2005-12-18] 0.21: [2005-12-18] 0 21. 
* 0.20 [2005-10-15]: 0 20 [2005-10-15]. 
* [2005-08-17] 0.19: [2005-08-17] 0 19. 
* [2005-03-12] 0.18: [2005-03-12] 0 18. 
* [2005-02-26] 0.17: [2005-02-26] 0 17. 
* [2005-01-02] 0.16: [2005-01-02] 0 16. 
* [2004-10-13] 0.15: [2004-10-13] 0 15. 
* [2004-08-29] 0.14: [2004-08-29] 0 14. 
* [2004-06-26] 0.13: [2004-06-26] 0 13. 
* [2004-05-30] 0.12: [2004-05-30] 0 12. 
* [2004-04-24] 0.11.1: [2004-04-24] 0 11 1. 
* [2004-04-17] 0.11: [2004-04-17] 0 11. 
* [2004-02-28] 0.10: [2004-02-28] 0 10. 
* [2004-02-01] 0.9: [2004-02-01] 0 9. 
* [2003-11-05] 0.8: [2003-11-05] 0 8. 
* [2003-08-02] 0.7: [2003-08-02] 0 7. 
* [2003-06-09] 0.6: [2003-06-09] 0 6. 
* [2003-05-10] 0.5: [2003-05-10] 0 5. 
* [2003-04-07] 0.4.1: [2003-04-07] 0 4 1. 
* [2003-04-02] 0.4: [2003-04-02] 0 4. 
* Python Module Index:: 
* Index:: 

@detailmenu
 --- The Detailed Node Listing ---

About

* What is VHDL?:: 
* What is GHDL?:: 
* Who uses GHDL?:: 

Getting | Installing

* Package managers:: 
* Nightly packages:: 
* Precompile Vendor Primitives:: 

Precompile Vendor Primitives

* Supported Vendors Libraries:: 
* Supported Simulation and Verification Libraries:: 
* Script Configuration:: 
* Compiling in Bash:: 
* Compiling in PowerShell:: 
* Configuration Files:: 
* Additional Script Parameters:: 

Configuration Files

* For Bash; config.sh: For Bash config sh. 
* For PowerShell; config.psm1: For PowerShell config psm1. 

Additional Script Parameters

* For Bash Scripts;: For Bash Scripts. 
* For PowerShell Scripts;: For PowerShell Scripts. 

Contributing

* Reporting bugs:: 
* Requesting enhancements:: 
* Improving the documentation:: 
* Fork@comma{} modify and pull-request: Fork modify and pull-request. 
* Related interesting projects:: 

Copyrights | Licenses

* GNU GPLv2:: 
* CC-BY-SA:: 
* List of Contributors:: 

Quick Start Guide

* Simulation:: 
* Python Interfaces:: 

Simulation

* Hello world program:: 
* Heartbeat module:: 
* Full adder module and testbench:: 
* Working with non-trivial designs:: 

Python Interfaces

* Language Server:: 

Language Server

* ghdl-ls:: 

ghdl-ls

* optional arguments:: 

Invoking GHDL

* Design building commands:: 
* Design rebuilding commands:: 
* Options:: 
* Warnings:: 
* Diagnostics Control:: 
* Library commands:: 
* VPI/VHPI build commands:: 
* IEEE library pitfalls:: 

Design building commands

* Analysis [-a]:: 
* Elaboration [-e]:: 
* Run [-r]:: 
* Elaborate and run [--elab-run]:: 
* Check syntax [-s]:: 
* Analyze and elaborate [-c]:: 

Design rebuilding commands

* Import [-i]:: 
* Elab-order [--elab-order]:: 
* Make [-m]:: 
* Generate Makefile [--gen-makefile]:: 
* Generate dependency file command [--gen-depends]:: 

Simulation (runtime)

* Simulation options:: 
* Export waveforms:: 
* Export hierarchy and references:: 

Synthesis

* Synthesis [--synth]:: 
* Synthesis options:: 
* Yosys plugin:: 

Synthesis options

* Assertions@comma{} PSL and formal verification: Assertions PSL and formal verification. 

Yosys plugin

* Convert (V)HDL to other formats: Convert V HDL to other formats. 

Convert (V)HDL to other formats

* To Verilog:: 
* To EDIF:: 
* To SMT:: 
* To BTOR2:: 
* To FIRRTL:: 
* To VHDL:: 

Additional Command Reference

* Environment variables:: 
* Misc commands:: 
* File commands:: 
* GCC/LLVM only commands:: 
* Options: Options<2>. 
* Passing options to other programs:: 

Misc commands

* Help [-h]:: 
* Display config [--disp-config]:: 
* Display standard [--disp-standard]:: 
* Version [--version]:: 

File commands

* Format [fmt]:: 
* Pretty print [--pp-html]:: 
* Find [-f]:: 
* Chop [--chop]:: 
* Lines [--lines]:: 
* XML tree generation [--file-to-xml]:: 

GCC/LLVM only commands

* Bind [--bind]:: 
* Link [--link]:: 
* List link [--list-link]:: 

Implementation of VHDL

* VHDL standards:: 
* PSL support:: 
* Source representation:: 
* Library database:: 
* Top entity:: 
* Using vendor libraries:: 

PSL support

* PSL implementation:: 
* PSL usage:: 

PSL usage

* PSL annotations embedded in comments:: 
* PSL annotations (VHDL-2008 and later): PSL annotations VHDL-2008 and later. 
* PSL vunit files (VHDL-2008 and later@comma{} synthesis only): PSL vunit files VHDL-2008 and later synthesis only. 

Implementation of VITAL

* VITAL packages:: 
* VHDL restrictions for VITAL:: 
* Backannotation:: 
* Negative constraint calculation:: 

Building GHDL from Sources

* Sources:: 
* mcode backend:: 
* LLVM backend:: 
* GCC backend:: 
* TL;DR:: 

mcode backend

* GCC/GNAT; GNU/Linux or Windows (MinGW/MSYS2): GCC/GNAT GNU/Linux or Windows MinGW/MSYS2. 
* GNAT GPL; Windows: GNAT GPL Windows. 

LLVM backend

* GCC/GNAT; GNU/Linux or Windows (MinGW/MSYS2): GCC/GNAT GNU/Linux or Windows MinGW/MSYS2<2>. 

pyGHDL

* pyGHDL.cli: pyGHDL cli. 
* pyGHDL.dom: pyGHDL dom. 
* pyGHDL.libghdl: pyGHDL libghdl. 
* pyGHDL.lsp: pyGHDL lsp. 

pyGHDL.cli

* pyGHDL.cli.dom: pyGHDL cli dom. 
* pyGHDL.cli.lsp: pyGHDL cli lsp. 

pyGHDL.dom

* pyGHDL.dom.Aggregates: pyGHDL dom Aggregates. 
* pyGHDL.dom.Attribute: pyGHDL dom Attribute. 
* pyGHDL.dom.Concurrent: pyGHDL dom Concurrent. 
* pyGHDL.dom.DesignUnit: pyGHDL dom DesignUnit. 
* pyGHDL.dom.Expression: pyGHDL dom Expression. 
* pyGHDL.dom.InterfaceItem: pyGHDL dom InterfaceItem. 
* pyGHDL.dom.Literal: pyGHDL dom Literal. 
* pyGHDL.dom.Misc: pyGHDL dom Misc. 
* pyGHDL.dom.Names: pyGHDL dom Names. 
* pyGHDL.dom.NonStandard: pyGHDL dom NonStandard. 
* pyGHDL.dom.Object: pyGHDL dom Object. 
* pyGHDL.dom.PSL: pyGHDL dom PSL. 
* pyGHDL.dom.Range: pyGHDL dom Range. 
* pyGHDL.dom.Sequential: pyGHDL dom Sequential. 
* pyGHDL.dom.Subprogram: pyGHDL dom Subprogram. 
* pyGHDL.dom.Symbol: pyGHDL dom Symbol. 
* pyGHDL.dom.Type: pyGHDL dom Type. 
* pyGHDL.dom._Translate: pyGHDL dom _Translate. 
* pyGHDL.dom._Utils: pyGHDL dom _Utils. 
* pyGHDL.dom.formatting: pyGHDL dom formatting. 

pyGHDL.dom.formatting

* pyGHDL.dom.formatting.GraphML: pyGHDL dom formatting GraphML. 
* pyGHDL.dom.formatting.prettyprint: pyGHDL dom formatting prettyprint. 

pyGHDL.libghdl

* pyGHDL.libghdl._decorator: pyGHDL libghdl _decorator. 
* pyGHDL.libghdl._types: pyGHDL libghdl _types. 
* pyGHDL.libghdl.errorout: pyGHDL libghdl errorout. 
* pyGHDL.libghdl.errorout_console: pyGHDL libghdl errorout_console. 
* pyGHDL.libghdl.errorout_memory: pyGHDL libghdl errorout_memory. 
* pyGHDL.libghdl.file_comments: pyGHDL libghdl file_comments. 
* pyGHDL.libghdl.files_map: pyGHDL libghdl files_map. 
* pyGHDL.libghdl.files_map_editor: pyGHDL libghdl files_map_editor. 
* pyGHDL.libghdl.flags: pyGHDL libghdl flags. 
* pyGHDL.libghdl.libraries: pyGHDL libghdl libraries. 
* pyGHDL.libghdl.name_table: pyGHDL libghdl name_table. 
* pyGHDL.libghdl.std_names: pyGHDL libghdl std_names. 
* pyGHDL.libghdl.str_table: pyGHDL libghdl str_table. 
* pyGHDL.libghdl.utils: pyGHDL libghdl utils. 
* pyGHDL.libghdl.vhdl: pyGHDL libghdl vhdl. 

pyGHDL.libghdl.vhdl

* pyGHDL.libghdl.vhdl.canon: pyGHDL libghdl vhdl canon. 
* pyGHDL.libghdl.vhdl.elocations: pyGHDL libghdl vhdl elocations. 
* pyGHDL.libghdl.vhdl.flists: pyGHDL libghdl vhdl flists. 
* pyGHDL.libghdl.vhdl.formatters: pyGHDL libghdl vhdl formatters. 
* pyGHDL.libghdl.vhdl.ieee: pyGHDL libghdl vhdl ieee. 
* pyGHDL.libghdl.vhdl.lists: pyGHDL libghdl vhdl lists. 
* pyGHDL.libghdl.vhdl.nodes: pyGHDL libghdl vhdl nodes. 
* pyGHDL.libghdl.vhdl.nodes_meta: pyGHDL libghdl vhdl nodes_meta. 
* pyGHDL.libghdl.vhdl.nodes_utils: pyGHDL libghdl vhdl nodes_utils. 
* pyGHDL.libghdl.vhdl.parse: pyGHDL libghdl vhdl parse. 
* pyGHDL.libghdl.vhdl.prints: pyGHDL libghdl vhdl prints. 
* pyGHDL.libghdl.vhdl.scanner: pyGHDL libghdl vhdl scanner. 
* pyGHDL.libghdl.vhdl.sem: pyGHDL libghdl vhdl sem. 
* pyGHDL.libghdl.vhdl.sem_lib: pyGHDL libghdl vhdl sem_lib. 
* pyGHDL.libghdl.vhdl.std_package: pyGHDL libghdl vhdl std_package. 
* pyGHDL.libghdl.vhdl.tokens: pyGHDL libghdl vhdl tokens. 
* pyGHDL.libghdl.vhdl.utils: pyGHDL libghdl vhdl utils. 

pyGHDL.lsp

* pyGHDL.lsp.document: pyGHDL lsp document. 
* pyGHDL.lsp.lsp: pyGHDL lsp lsp. 
* pyGHDL.lsp.lsptools: pyGHDL lsp lsptools. 
* pyGHDL.lsp.references: pyGHDL lsp references. 
* pyGHDL.lsp.symbols: pyGHDL lsp symbols. 
* pyGHDL.lsp.version: pyGHDL lsp version. 
* pyGHDL.lsp.vhdl_ls: pyGHDL lsp vhdl_ls. 
* pyGHDL.lsp.workspace: pyGHDL lsp workspace. 

GHDL Waveform (GHW)

* libghw:: 
* ghwdump:: 

Debugging

* Simulation and runtime debugging options:: 

Simulation and runtime debugging options

* GNU Debugger (GDB): GNU Debugger GDB. 

Coding Style

* Ada:: 
* Shell:: 
* Guidelines to edit the documentation:: 
* Documentation configuration:: 

Guidelines to edit the documentation

* Guidelines to edit section ‘Building’:: 

Scripts

* pnodes:: 
* pnodespy:: 

pnodes

* positional arguments:: 
* optional arguments: optional arguments<2>. 

pnodespy

* positional arguments: positional arguments<2>. 
* optional arguments: optional arguments<3>. 

AST

* Introduction:: 
* The AST in GHDL:: 
* Why a meta-model ?:: 
* Dealing with ownership:: 
* Node Type:: 

Run Time Information (RTI)

* Useful Definitions:: 
* RTI Nodes / RTII Nodes:: 

RTI Nodes / RTII Nodes

* Architecture RTI (Ghdl_Rtin_Block): Architecture RTI Ghdl_Rtin_Block. 
* Entity RTI (Ghdl_Rtin_Block): Entity RTI Ghdl_Rtin_Block. 
* Other Blocks (Package/Process) (Ghdl_Rtin_Block): Other Blocks Package/Process Ghdl_Rtin_Block. 
* if_generate / case_generate (Ghdl_Rtin_Block): if_generate / case_generate Ghdl_Rtin_Block. 
* for_generate (Ghdl_Rtin_Generate): for_generate Ghdl_Rtin_Generate. 
* instance (Ghdl_Rtin_Instance): instance Ghdl_Rtin_Instance. 
* Port (Ghdl_Rtin_Object): Port Ghdl_Rtin_Object. 
* Array Kinds:: 
* Object_To_Base_Bound:: 
* Array_Type (Ghdl_Rtin_Type_Array): Array_Type Ghdl_Rtin_Type_Array. 
* Array Subtype (Ghdl_Rtin_Subtype_Array): Array Subtype Ghdl_Rtin_Subtype_Array. 
* Port / Signal / Generic / Constant / Variable (Ghdl_Rtin_Object): Port / Signal / Generic / Constant / Variable Ghdl_Rtin_Object. 
* Record Kinds:: 
* Record Type (Ghdl_Rtin_Type_Record): Record Type Ghdl_Rtin_Type_Record. 
* Record Type (Ghdl_Rtin_Type_Record): Record Type Ghdl_Rtin_Type_Record<2>. 
* Element Type (Ghdl_Rtin_Element): Element Type Ghdl_Rtin_Element. 
* Examples:: 

@end detailmenu
@end menu

@node About,Getting | Installing,Top,Top
@anchor{about doc}@anchor{46}@anchor{about about}@anchor{47}@anchor{about ghdl}@anchor{48}
@chapter About


@menu
* What is VHDL?:: 
* What is GHDL?:: 
* Who uses GHDL?:: 

@end menu

@node What is VHDL?,What is GHDL?,,About
@anchor{about intro-vhdl}@anchor{49}@anchor{about what-is-vhdl}@anchor{4a}
@section What is @cite{VHDL}?


VHDL@footnote{https://en.wikipedia.org/wiki/VHDL} is an acronym for `Verification and Hardware Description Language' (HDL@footnote{https://en.wikipedia.org/wiki/HDL}),
which is a computer language used to describe a logic circuit by function, data flow behavior, or structure.

@cartouche
@quotation Note 
Historically the ‘V’ in the language’s acronym came from the Very High Speed Integrated Circuit (VHSIC@footnote{https://en.wikipedia.org/wiki/VHSIC}),
which was the U.S. government program that funded the early work on the standard.
Changing the ‘V’ to mean `verification' reflects the language’s increasing usage for verification as well as design.
See VHDL 202X PAR@footnote{http://www.eda-twiki.org/twiki/pub/P1076/PrivateDocuments/Par1076_202X.pdf} via VHDL-202X@footnote{https://ieee-p1076.gitlab.io/VHDL-202X/index.html#vhdl202x}.
@end quotation
@end cartouche

Although VHDL was not designed for writing general purpose programs, VHDL `is' a programming language: any algorithm can
be written with it, it can interact with files, the environment, stdin and stdout, etc.
VHDL has features similar to those found in procedural languages such as
C@footnote{https://en.wikipedia.org/wiki/C_(programming_language)},
Python@footnote{https://en.wikipedia.org/wiki/Python_(programming_language)},
or Ada@footnote{https://en.wikipedia.org/wiki/Ada_(programming_language)}.
Indeed, VHDL derives most of its syntax and semantics from Ada. Knowing @cite{Ada} is an advantage for learning VHDL (it is
an advantage in general as well).

However, VHDL was not designed as a general purpose language but as an @cite{HDL}.
As the name implies, VHDL aims at modeling or documenting electronics systems.
Due to the nature of hardware components –which are always running–, VHDL is a highly concurrent language, built upon
an event-driven execution model.

Like a program written in any other language, a VHDL program can be executed.
Since VHDL is used to model designs, the term `simulation' is often used instead of @cite{execution}, with the same
meaning.
At the same time, like a design written in another @cite{HDL}, a set of VHDL sources can be transformed with a
`synthesis tool' into a netlist, that is, a detailed gate-level implementation.

The development of VHDL started in 1983 and the standard is named IEEE@footnote{https://www.ieee.org/} @cite{1076}.
Five revisions exist:
1987@footnote{http://ieeexplore.ieee.org/document/26487/},
1993@footnote{http://ieeexplore.ieee.org/document/392561/},
2002@footnote{http://ieeexplore.ieee.org/document/1003477/},
2008@footnote{http://ieeexplore.ieee.org/document/4772740/} and
2019@footnote{https://ieeexplore.ieee.org/document/8938196}.
The standardization is handled by the IEEE P1076 Working Group: VHDL Analysis and Standardization Group (VASG)@footnote{https://ieee-p1076.gitlab.io/index.html}.
Find on-going work towards `VHDL 202X' in gitlab.com/IEEE-P1076/VHDL-Issues@footnote{https://gitlab.com/IEEE-P1076/VHDL-Issues/-/issues}.

@node What is GHDL?,Who uses GHDL?,What is VHDL?,About
@anchor{about intro-ghdl}@anchor{4b}@anchor{about what-is-ghdl}@anchor{4c}
@section What is GHDL?



@float Figure

@image{GHDL-figures/internals,418.0pt,,,png}

@caption{Architecture overview of the GHDL toolkit (CLI, libghdl, pyGHDL and ghdl-yosys-plugin).}

@end float


@cite{GHDL} is a shorthand for @cite{G Hardware Design Language} (currently, @cite{G} has no meaning).
It is a VHDL analyzer, compiler, simulator and (experimental) synthesizer that can process (nearly) any VHDL design.

@cartouche
@quotation Note 
For almost 20 years, GHDL was `not' a synthesis tool: a netlist could not be created.
Hence, most of the content in this documentation corresponds to the usage of GHDL as a compiler/simulator.
See @ref{4d,,Synthesis} for further details regarding synthesis.
@end quotation
@end cartouche

Unlike some other simulators, GHDL is a compiler: it directly translates a VHDL file to machine code, without using an
intermediary language such as @cite{C} or @cite{C++}.
Therefore, the compiled code should be faster and the analysis time should be shorter than with a compiler using an
intermediary language.

GHDL can use multiple back-ends, i.e. code generators, (GCC@footnote{http://gcc.gnu.org/}, LLVM@footnote{http://llvm.org/} or
x86@footnote{https://en.wikipedia.org/wiki/X86-64}/i386@footnote{https://en.wikipedia.org/wiki/Intel_80386} only, a built-in one named `mcode') and runs on
GNU/Linux@footnote{https://en.wikipedia.org/wiki/Linux_distribution}, Windows@footnote{https://en.wikipedia.org/wiki/Microsoft_Windows} ™ and
macOS@footnote{https://en.wikipedia.org/wiki/MacOS} ™; on x86, x86_64, armv6/armv7/aarch32/aarch64, ppc64, etc.

The current version of GHDL does not contain any built-in graphical viewer: signal waves cannot be seen through GHDL.
However, the behavior of the designs can still be checked through test benches and verification frameworks.
Moreover, @ref{4e,,GHDL Waveform (GHW)}, VCD@footnote{https://en.wikipedia.org/wiki/Value_change_dump} or @cite{FST} files can be produced, which can be viewed with an
external waveform viewer@footnote{https://en.wikipedia.org/wiki/Waveform_viewer}, such as GtkWave@footnote{http://gtkwave.sourceforge.net/}.

GHDL aims at implementing VHDL as defined by IEEE 1076@footnote{http://ieeexplore.ieee.org/document/4772740/}.
It supports the
1987@footnote{http://ieeexplore.ieee.org/document/26487/},
1993@footnote{http://ieeexplore.ieee.org/document/392561/} and
2002@footnote{http://ieeexplore.ieee.org/document/1003477/} revisions and, partially,
2008@footnote{http://ieeexplore.ieee.org/document/4772740/} and
2019@footnote{https://ieeexplore.ieee.org/document/8938196/}.
Property Specification Language (PSL)@footnote{https://en.wikipedia.org/wiki/Property_Specification_Language} is also partially supported.

Several third party projects are supported:
Yosys@footnote{https://github.com/YosysHQ/yosys}
(through the ghdl-yosys-plugin@footnote{https://github.com/ghdl/ghdl-yosys-plugin})
cocotb@footnote{https://github.com/potentialventures/cocotb},
(through the VPI interface@footnote{https://en.wikipedia.org/wiki/Verilog_Procedural_Interface}),
VUnit@footnote{https://vunit.github.io/},
OSVVM@footnote{http://osvvm.org/},
The pyVHDLModel Documentation@footnote{https://vhdl.github.io/pyVHDLModel/index.html},
…

@node Who uses GHDL?,,What is GHDL?,About
@anchor{about intro-who}@anchor{4f}@anchor{about who-uses-ghdl}@anchor{50}
@section Who uses GHDL?



@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Getting | Installing,Contributing,About,Top
@anchor{getting doc}@anchor{51}@anchor{getting getting-installing}@anchor{52}@anchor{getting packages}@anchor{53}
@chapter Getting | Installing


@menu
* Package managers:: 
* Nightly packages:: 
* Precompile Vendor Primitives:: 

@end menu

@node Package managers,Nightly packages,,Getting | Installing
@anchor{getting package-managers}@anchor{54}
@section Package managers


Package managers of many popular distributions provide pre-built packages of GHDL. This is the case for @cite{apt}
(Debian/Ubuntu), @cite{dnf} (Fedora), @cite{pacman} (Arch Linux, MSYS2) or @cite{brew} (macOS). Since GHDL supports three different backends
and two library sets (`regular' or `GPL-compatible'), at least six packages with different features might be available in
each package manager.

As a rule of thumb, mcode backend is the fastest for analysis and synthesis. It also allows setting the base simulation time
for speeding up execution. Therefore, it is the recommended pick if available on your platform (x86/amd64, on Windows x86
only). On other platforms, or for using specific features for co-simulation or code coverage, LLVM or GCC need to be used.
See further differences between backends in @ref{55,,Building GHDL from Sources}.

@node Nightly packages,Precompile Vendor Primitives,Package managers,Getting | Installing
@anchor{getting nightly-packages}@anchor{56}@anchor{getting release-packages}@anchor{57}
@section Nightly packages


Assets from nightly GHDL builds are available at github.com/ghdl/ghdl/releases/nightly@footnote{https://github.com/ghdl/ghdl/releases/nightly}.
These are mostly meant to be used in Continuous Integration (CI) workflows. Precisely, setup-ghdl-ci@footnote{https://github.com/ghdl/setup-ghdl-ci}
allows to easily setup nightly assets in GitHub Actions workflows.

However, users on Windows (MSYS2) or Ubuntu might want to download the tarballs/zipfiles and extract/install them locally.

@node Precompile Vendor Primitives,,Nightly packages,Getting | Installing
@anchor{getting getting-precompvendor}@anchor{58}@anchor{getting precompile-vendor-primitives}@anchor{59}
@section Precompile Vendor Primitives


Vendors like Lattice, Intel (Altera) and Xilinx have their own simulation libraries,
especially for FPGA primitives, soft and hard macros. These libraries cannot
be shipped with GHDL, but GHDL offers prepared compile scripts to pre-compile
these vendor libraries, if the vendor tool is present in the environment. There
are also popular simulation and verification libraries like OSVVM @footnote{
OSVVM @indicateurl{http://github.com/OSVVM/OSVVM}
} or
UVVM @footnote{
UVVM @indicateurl{https://github.com/UVVM/UVVM_All}
}, which can be pre-compiled, too.

The compilation scripts are writen in the shell languages: `PowerShell' for
`Windows™' and `Bash' for `GNU/Linux', `MacOS' and `MSYS2'/`MinGW'. The
compile scripts can colorize the GHDL warning and error lines with the help
of @code{grc/grcat} @footnote{
Generic Colourizer @indicateurl{http://kassiopeia.juls.savba.sk/~garabik/software/grc.html}
}.

@cartouche
@quotation Hint 
Vendor precompile scripts for OSVVM and UVVM are tested periodically in ghdl/extended-tests@footnote{https://github.com/ghdl/extended-tests}.
@end quotation
@end cartouche

@menu
* Supported Vendors Libraries:: 
* Supported Simulation and Verification Libraries:: 
* Script Configuration:: 
* Compiling in Bash:: 
* Compiling in PowerShell:: 
* Configuration Files:: 
* Additional Script Parameters:: 

@end menu

@node Supported Vendors Libraries,Supported Simulation and Verification Libraries,,Precompile Vendor Primitives
@anchor{getting supported-vendors-libraries}@anchor{5a}
@subsection Supported Vendors Libraries



@itemize *

@item 
Lattice (3.6 or later):


@itemize *

@item 
@code{ec}

@item 
@code{ecp}, @code{ecp2}, @code{ecp3}, @code{ecp5u}

@item 
@code{lptm}, @code{lptm2}

@item 
@code{machxo}, @code{machxo2}, @code{machxo3l}, @code{machxo3d}

@item 
@code{sc}, @code{scm}

@item 
@code{xp}, @code{xp2}

@item 
…
@end itemize

@item 
Intel (Altera) Quartus (13.0 or later):


@itemize *

@item 
@code{lpm}, @code{sgate}

@item 
@code{altera}, @code{altera_mf}, @code{altera_lnsim}

@item 
@code{arriaii}, @code{arriaii_pcie_hip}, @code{arriaiigz}

@item 
@code{arriav}, @code{arriavgz}, @code{arriavgz_pcie_hip}

@item 
@code{cycloneiv}, @code{cycloneiv_pcie_hip}, @code{cycloneive}

@item 
@code{cyclonev}

@item 
@code{max}, @code{maxii}, @code{maxv}

@item 
@code{stratixiv}, @code{stratixiv_pcie_hip}

@item 
@code{stratixv}, @code{stratixv_pcie_hip}

@item 
@code{fiftyfivenm}, @code{twentynm}

@item 
…
@end itemize

@item 
Xilinx ISE (14.0 or later):


@itemize *

@item 
@code{unisim} (incl. @code{secureip})

@item 
@code{unimacro}

@item 
@code{simprim} (incl. @code{secureip})

@item 
@code{xilinxcorelib}
@end itemize

@item 
Xilinx Vivado (2014.1 or later):


@itemize *

@item 
@code{unisim} (incl. @code{secureip})

@item 
@code{unimacro}
@end itemize
@end itemize

@node Supported Simulation and Verification Libraries,Script Configuration,Supported Vendors Libraries,Precompile Vendor Primitives
@anchor{getting supported-simulation-and-verification-libraries}@anchor{5b}
@subsection Supported Simulation and Verification Libraries



@itemize *

@item 
OSVVM @footnote{
OSVVM @indicateurl{http://github.com/OSVVM/OSVVM}
} (for VHDL-2008)

@item 
UVVM @footnote{
UVVM @indicateurl{https://github.com/UVVM/UVVM_All}
} (for VHDL-2008)
@end itemize


__________________________________________________________________


@node Script Configuration,Compiling in Bash,Supported Simulation and Verification Libraries,Precompile Vendor Primitives
@anchor{getting script-configuration}@anchor{5c}
@subsection Script Configuration


The vendor library compile scripts need to know where the used / latest vendor
tool chain is installed. Therefore, the scripts implement a default installation
directory search as well as environment variable checks. If a vendor tool cannot
be detected or the script chooses the wrong vendor library source directory,
then it’s possible to provide the path via @code{--source} (Bash) or @code{-Source}
(PoSh).

The generated output is stored relative to the current working directory. The
scripts create a sub-directory for each vendor. The default output directory can
be overwritten by the parameter @code{--output} (Bash) or @code{-Output} (PoSh).

To compile all source files with GHDL, the simulator executable is searched in
@code{PATH}. The found default GHDL executable can be overwritten by setting the
environment variable @code{GHDL} or by passing the parameter @code{--ghdl} (Bash) or
@code{-GHDL} (PoSh) to the scripts.

If the vendor library compilation is used very often, it’s recommend to configure
these parameters in @code{config.sh} (Bash) or @code{config.psm1} (PoSh), so the command
line can be shortened to the essential parts.


__________________________________________________________________


@node Compiling in Bash,Compiling in PowerShell,Script Configuration,Precompile Vendor Primitives
@anchor{getting compiling-in-bash}@anchor{5d}
@subsection Compiling in Bash


The provided Bash scripts support these environments:


@itemize *

@item 
Linux

@item 
MacOS

@item 
MSYS2 / MinGW

@item 
WSL (Windows Subsystem for Linux)
@end itemize

Follow these steps:


@itemize *

@item 
`Step 0 - Configure the scripts (optional)'

See the next section for how to configure @code{config.sh}.

@item 
`Step 1 - Browse to your simulation working directory'

@example
$ cd <MySimulationFolder>
@end example

@item 
`Step 2 - Start the compilation script(s)'

Choose one or multiple of the following scripts to run the pre-compilation
process.

@example
$ /usr/local/lib/ghdl/vendors/compile-altera.sh --all
$ /usr/local/lib/ghdl/vendors/compile-intel.sh --all
$ /usr/local/lib/ghdl/vendors/compile-lattice.sh --all
$ /usr/local/lib/ghdl/vendors/compile-osvvm.sh --all
$ /usr/local/lib/ghdl/vendors/compile-uvvm.sh --all
$ /usr/local/lib/ghdl/vendors/compile-xilinx-ise.sh --all
$ /usr/local/lib/ghdl/vendors/compile-xilinx-vivado.sh --all
@end example

In most cases GHDL is installed into @code{/usr/local/}. The scripts are
installed into the @code{lib\ghdl\vendors} directory.

@item 
`Step 3 - Viewing the result'

This creates vendor directories in your current working directory and
compiles the vendor files into them.

@example
$ ls -ahl
...
drwxr-xr-x  2 <user> <group>  56K Mar 09 17:41 altera
drwxr-xr-x  2 <user> <group>  56K Mar 09 17:42 intel
drwxr-xr-x  2 <user> <group>  56K Mar 09 17:42 lattice
drwxr-xr-x  2 <user> <group>  56K Mar 09 17:48 osvvm
drwxr-xr-x  2 <user> <group>  56K Mar 09 17:58 uvvm
drwxr-xr-x  2 <user> <group>  56K Mar 09 17:58 xilinx-ise
drwxr-xr-x  2 <user> <group>  56K Mar 09 17:48 xilinx-vivado
@end example
@end itemize


__________________________________________________________________


@node Compiling in PowerShell,Configuration Files,Compiling in Bash,Precompile Vendor Primitives
@anchor{getting compiling-in-powershell}@anchor{5e}
@subsection Compiling in PowerShell


The provided PowerShell scripts support these environments:


@itemize *

@item 
Windows™ 10 (PowerShell 5 and PowerShell 6)
@end itemize

Follow these steps:


@itemize *

@item 
`Step 0 - Configure the scripts (optional)'

See the next section for how to configure @code{config.psm1}.

@item 
`Step 1 - Browse to your simulation working directory'

@example
PS> cd <MySimulationFolder>
@end example

@item 
`Step 2 - Start the compilation script(s)'

Choose one or multiple of the following scripts to run the pre-compilation
process.

@example
PS> <GHDL>\lib\ghdl\vendors\compile-altera.ps1 -All
PS> <GHDL>\lib\ghdl\vendors\compile-intel.ps1 -All
PS> <GHDL>\lib\ghdl\vendors\compile-lattice.ps1 -All
PS> <GHDL>\lib\ghdl\vendors\compile-osvvm.ps1 -All
PS> <GHDL>\lib\ghdl\vendors\compile-uvvm.ps1 -All
PS> <GHDL>\lib\ghdl\vendors\compile-xilinx-ise.ps1 -All
PS> <GHDL>\lib\ghdl\vendors\compile-xilinx-vivado.ps1 -All
@end example

@c # In most cases GHDL is installed into ``/usr/local/``.

The scripts are installed into the @code{lib\ghdl\vendors} directory.

@item 
`Step 3 - Viewing the result'

This creates vendor directories in your current working directory and
compiles the vendor files into them.

@example
PS> dir
    Directory: D:\temp\ghdl

Mode           LastWriteTime       Length Name
----           -------------       ------ ----
d----    09.03.2018    19:33        <DIR> altera
d----    09.03.2018    19:38        <DIR> intel
d----    09.03.2018    19:38        <DIR> lattice
d----    09.03.2018    19:38        <DIR> osvvm
d----    09.03.2018    19:45        <DIR> uvvm
d----    09.03.2018    19:06        <DIR> xilinx-ise
d----    09.03.2018    19:40        <DIR> xilinx-vivado
@end example
@end itemize


__________________________________________________________________


@node Configuration Files,Additional Script Parameters,Compiling in PowerShell,Precompile Vendor Primitives
@anchor{getting configuration-files}@anchor{5f}
@subsection Configuration Files


@menu
* For Bash; config.sh: For Bash config sh. 
* For PowerShell; config.psm1: For PowerShell config psm1. 

@end menu

@node For Bash config sh,For PowerShell config psm1,,Configuration Files
@anchor{getting for-bash-config-sh}@anchor{60}
@subsubsection For Bash: @cite{config.sh}


Please open the @code{config.sh} file and set the dictionary entries for the
installed vendor tools to your tool’s installation directories. Use an empty
string @code{""} for not installed tools.

@code{config.sh}:

@example
declare -A InstallationDirectory
InstallationDirectory[AlteraQuartus]="/opt/Altera/16.0"
InstallationDirectory[IntelQuartus]="/opt/intelFPGA/20.1"
InstallationDirectory[LatticeDiamond]="/opt/Diamond/3.10_x64"
InstallationDirectory[OSVVM]="/home/<user>/git/GitHub/OSVVM"
InstallationDirectory[UVVM]="/home/<user>/git/GitHub/UVVM"
InstallationDirectory[XilinxISE]="/opt/Xilinx/14.7"
InstallationDirectory[XilinxVivado]="/opt/Xilinx/Vivado/2020.2"
@end example

@node For PowerShell config psm1,,For Bash config sh,Configuration Files
@anchor{getting for-powershell-config-psm1}@anchor{61}
@subsubsection For PowerShell: @cite{config.psm1}


Please open the @code{config.psm1} file and set the dictionary entries for the
installed vendor tools to your tool’s installation
folder. Use an empty string @code{""} for not installed tools.

@code{config.psm1}:

@example
$InstallationDirectory = @@@{
  "AlteraQuartus" =   "C:\Altera\16.0";
  "IntelQuartus" =    "C:\Altera\20.1";
  "LatticeDiamond" =  "C:\Lattice\Diamond\3.10_x64";
  "XilinxISE" =       "C:\Xilinx\14.7\ISE_DS";
  "XilinxVivado" =    "C:\Xilinx\Vivado\2020.2";
  "OSVVM" =           "C:\git\GitHub\OSVVM";
  "UVVM" =            "C:\git\GitHub\UVVM"
@}
@end example

@node Additional Script Parameters,,Configuration Files,Precompile Vendor Primitives
@anchor{getting additional-script-parameters}@anchor{62}
@subsection Additional Script Parameters


Each script supports partial compilations e.g. of shared packages and
individual parts. In addition, the amount of printout to the console can be
controlled. Some scripts may offer vendor specific options.

@menu
* For Bash Scripts;: For Bash Scripts. 
* For PowerShell Scripts;: For PowerShell Scripts. 

@end menu

@node For Bash Scripts,For PowerShell Scripts,,Additional Script Parameters
@anchor{getting for-bash-scripts}@anchor{63}
@subsubsection For Bash Scripts:



@itemize *

@item 
Common parameters to most scripts:

@example
--help, -h            Print the embedded help page(s).
--clean, -c           Cleanup directory before analyzing.
--no-warnings, -n     Don't show warnings. Report errors only.
--skip-existing, -s   Skip already compiled files (an *.o file exists).
--skip-largefiles, -S Don't compile large entities like DSP and PCIe primitives.
--halt-on-error, -H   Stop compiling if an error occurred.
@end example

@item 
@code{compile-altera.sh}

Selectable libraries:

@example
--all, -a             Compile all libraries, including common libraries, packages and device libraries.
--altera              Compile base libraries like 'altera' and 'altera_mf'
--max                 Compile device libraries for Max CPLDs
--arria               Compile device libraries for Arria FPGAs
--cyclone             Compile device libraries for Cyclone FPGAs
--stratix             Compile device libraries for Stratix FPGAs
@end example

Compile options:

@example
--vhdl93              Compile selected libraries with VHDL-93 (default).
--vhdl2008            Compile selected libraries with VHDL-2008.
@end example

@item 
@code{compile-xilinx-ise.sh}

Selectable libraries:

@example
--all, -a             Compile all libraries, including common libraries, packages and device libraries.
--unisim              Compile the unisim primitives
--unimacro            Compile the unimacro macros
--simprim             Compile the simprim primitives
--corelib             Compile the xilinxcorelib macros
--secureip            Compile the secureip primitives
@end example

Compile options:

@example
--vhdl93              Compile selected libraries with VHDL-93 (default).
--vhdl2008            Compile selected libraries with VHDL-2008.
@end example

@item 
@code{compile-xilinx-vivado.sh}

Selectable libraries:

@example
--all, -a             Compile all libraries, including common libraries, packages and device libraries.
--unisim              Compile the unisim primitives
--unimacro            Compile the unimacro macros
--secureip            Compile the secureip primitives
@end example

Compile options:

@example
--vhdl93              Compile selected libraries with VHDL-93 (default).
--vhdl2008            Compile selected libraries with VHDL-2008.
@end example

@item 
@code{compile-osvvm.sh}

Selectable libraries:

@example
--all, -a             Compile all.
--osvvm               Compile the OSVVM library.
@end example

@item 
@code{compile-uvvm.sh}

Selectable libraries:

@example
--all, -a             Compile all.
--uvvm                Compile the UVVM libraries.
@end example
@end itemize

@node For PowerShell Scripts,,For Bash Scripts,Additional Script Parameters
@anchor{getting for-powershell-scripts}@anchor{64}
@subsubsection For PowerShell Scripts:



@itemize *

@item 
Common parameters to all scripts:

@example
-Help                 Print the embedded help page(s).
-Clean                Cleanup directory before analyzing.
-SuppressWarnings     Don't show warnings. Report errors only.
@end example

@item 
@code{compile-altera.ps1}

Selectable libraries:

@example
-All                  Compile all libraries, including common libraries, packages and device libraries.
-Altera               Compile base libraries like 'altera' and 'altera_mf'
-Max                  Compile device libraries for Max CPLDs
-Arria                Compile device libraries for Arria FPGAs
-Cyclone              Compile device libraries for Cyclone FPGAs
-Stratix              Compile device libraries for Stratix FPGAs
@end example

Compile options:

@example
-VHDL93               Compile selected libraries with VHDL-93 (default).
-VHDL2008             Compile selected libraries with VHDL-2008.
@end example

@item 
@code{compile-xilinx-ise.ps1}

Selectable libraries:

@example
-All                  Compile all libraries, including common libraries, packages and device libraries.
-Unisim               Compile the unisim primitives
-Unimacro             Compile the unimacro macros
-Simprim              Compile the simprim primitives
-CoreLib              Compile the xilinxcorelib macros
-Secureip             Compile the secureip primitives
@end example

Compile options:

@example
-VHDL93               Compile selected libraries with VHDL-93 (default).
-VHDL2008             Compile selected libraries with VHDL-2008.
@end example

@item 
@code{compile-xilinx-vivado.ps1}

Selectable libraries:

@example
-All                  Compile all libraries, including common libraries, packages and device libraries.
-Unisim               Compile the unisim primitives
-Unimacro             Compile the unimacro macros
-Secureip             Compile the secureip primitives
@end example

Compile options:

@example
-VHDL93               Compile selected libraries with VHDL-93 (default).
-VHDL2008             Compile selected libraries with VHDL-2008.
@end example

@item 
@code{compile-osvvm.ps1}

Selectable libraries:

@example
-All                  Compile all.
-OSVVM                Compile the OSVVM library.
@end example

@item 
@code{compile-uvvm.ps1}

Selectable libraries:

@example
-All                  Compile all.
-UVVM                 Compile the UVVM libraries.
@end example
@end itemize


__________________________________________________________________


@quotation
@end quotation

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML


@node Contributing,Copyrights | Licenses,Getting | Installing,Top
@anchor{contribute doc}@anchor{65}@anchor{contribute contributing}@anchor{66}@anchor{contribute intro-contributing}@anchor{67}
@chapter Contributing


As in many other free and open source projects, there are many areas requiring different skills where contributions to GHDL
are welcome. The first step might be to use GHDL and explore its possibilities in your own project. If you are new to VHDL,
see the @ref{68,,Simulation} for an introduction. Furthermore, we encourage you to read @ref{69,,Invoking GHDL},
where the most commonly used options are explained. You can also check the complete @ref{6a,,Additional Command Reference}.

If you are more familiar with GHDL, you might start asking yourself how it works internally. If so, you might find
@ref{6b,,Implementation of VHDL} and @ref{6c,,Implementation of VITAL} interesting.

While using GHDL, you might find flaws, such as bugs, missing features, typos in the documentation, or topics which still are
not covered. In order to improve GHDL, we welcome bug reports, suggestions, and contributions for any aspect of
GHDL. Whether it’s a bug or an enhancement, have a look at the 
@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/75d23ce669cbc7993d4d057361ad0c2a3d5d5271/ghdl,,,Open issues,svg}
 and 
@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/e1c1423669df5839910ed47f754b67708d362d8b/ghdl,,,Closed issues,svg}
 to see
if someone already told us about it. You might find a solution there.

Ideas for future work, enhancements, documentation, and internship programs are shown in the GitHub wiki@footnote{https://github.com/ghdl/ghdl/wiki}.

If you found no information on your topic, please, report so that we are aware! You can reach us through various ways:

@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/16176de4998e1a71b2f57993443202b2d81671f4/chat-on%20gitter-4db797,,,Talk to us on Gitter,svg}
 or open a 
@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/dfb2204df41464917807ba7d4295bf10566f1193/new-issue-yellowgreen,,,Open new issue at GitHub,svg}
.

@cartouche
@quotation Hint 

@itemize *

@item 
Since the development of GHDL started in 2002, multiple platforms have been used as a support for both distribution
and getting feedback. However, the development is now centralized in github.com/ghdl@footnote{https://github.com/ghdl}.

@item 
How To Ask Questions The Smart Way@footnote{www.catb.org/~esr/faqs/smart-questions.html}
@end itemize
@end quotation
@end cartouche

@menu
* Reporting bugs:: 
* Requesting enhancements:: 
* Improving the documentation:: 
* Fork@comma{} modify and pull-request: Fork modify and pull-request. 
* Related interesting projects:: 

@end menu

@node Reporting bugs,Requesting enhancements,,Contributing
@anchor{contribute id1}@anchor{6d}@anchor{contribute reporting-bugs}@anchor{6e}
@section Reporting bugs



@itemize *

@item 
If the compiler crashes, this is a bug. Reliable tools never crash.

@item 
If the compiler emits an error message for a perfectly valid input or does not emit an error message for an invalid
input, this may be a bug.

@item 
If the executable created from your VHDL sources crashes, this may be a bug at runtime or the code itself may be
wrong. Since VHDL has a notion of pointers, an erroneous VHDL program (using invalid pointers for example) may crash.

@item 
If a compiler message is not clear enough, please tell us. The error messages can be improved, but we do not have
enough experience with them.

@item 
It is suggested to test synthesis features with @ref{6f,,--synth}, before processing the design with @ref{70,,Yosys plugin}.
@end itemize

Please, report issues through 
@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/bac95e4b3b8c2d7bfbc31a7ce9892272a524ef30/new-bug--report-yellowgreen,,,Open new bug report at GitHub,svg}
, as this allows us to categorize issues into groups and to assign developers
to them. You can track the state and see how it’s getting solved.

@cartouche
@quotation Important 
As suggested in the bug report template, please elaborate a @cite{Minimal (non) Working Example} (MWE@footnote{https://en.wikipedia.org/wiki/Minimal_Working_Example})
prior to sending the report, so that the possible bug source is isolated. Should it fulfill the format requirements of
issue-runner@footnote{https://github.com/umarcor/issue-runner}, you would be able to test your bug with the latest GHDL version.
Please do so in order to ensure that the bug is not solved already.

Also, please include enough information in the bug report, for the maintainers to reproduce the problem. The template
includes:


@itemize *

@item 
Operating system and version of GHDL (you can get it with @code{ghdl version} and @code{ghdl hash}).

@item 
Whether you have built GHDL from sources (provide short SHA of the used commit) or used the binary distribution
(note which release/tag); if you cannot compile, please report which compiler you are using and the version.

@item 
Content of the input files which comprise the MWE.

@item 
Description of the problem:


@itemize *

@item 
Comment explaining whether the MWE should compile or not; if yes, whether it should run until the assertion.

@item 
What you expect to happen and what you actually get. If you know the LRM well enough, please specify which paragraph
might not be implemented well.

@item 
Samples of any log.

@item 
Anything else that you think would be helpful.
@end itemize
@end itemize
@end quotation
@end cartouche

@cartouche
@quotation Note 
If you don’t know the LRM, be aware that an issue claimed as a bug report may be rejected because there is no bug
according to it. GHDL aims at implementing VHDL as defined in IEEE 1076@footnote{http://ieeexplore.ieee.org/document/4772740/}.
However, some other tools allow constructs which do not fully follow the standard revisions. Therefore, comparisons
with other VHDL variants is not a solid argument. Some of them are supported by GHDL (see @ref{71,,IEEE library pitfalls}),
but any such enhancement will have very low priority.
@end quotation
@end cartouche

@node Requesting enhancements,Improving the documentation,Reporting bugs,Contributing
@anchor{contribute id2}@anchor{72}@anchor{contribute requesting-enhancements}@anchor{73}
@section Requesting enhancements



@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/89dd2439936c60b66feb51ba1c0d6a38facef2d8/1561565e8455e49d1382462c9afb48178cccd06f,,,Open new feature request at GitHub,svg?logo=github&style=flat-square&longCache=true}
 
@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/16176de4998e1a71b2f57993443202b2d81671f4/chat-on%20gitter-4db797,,,Talk to us on Gitter,svg}


All enhancements and feature requests are welcome. Please open a new issue@footnote{https://github.com/ghdl/ghdl/issues/new}
to report any, so you can track the status and implementation. Depending on the complexity of the request,
you may want to chat on Gitter@footnote{https://gitter.im/ghdl/ghdl1}, for polishing it before opening an issue.

@node Improving the documentation,Fork modify and pull-request,Requesting enhancements,Contributing
@anchor{contribute improving-the-documentation}@anchor{74}
@section Improving the documentation


If you found a mistake in the documentation, please send a comment. If you didn’t understand some parts of this manual,
please tell us. English is not our mother tongue, so this documentation may not be well-written.

Likewise, rewriting part of the documentation or missing content (such as examples) is a good way to improve it. Since
it is built automatically from @cite{reStructuredText}, you can fork, modify and push. The documentation will be shown
in the GitHub Pages site of your fork: @code{https://USERNAME.github.io/ghdl}. When you are done, request the maintainers
to pull your copy. See @ref{75,,Fork@comma{} modify and pull-request}.

@node Fork modify and pull-request,Related interesting projects,Improving the documentation,Contributing
@anchor{contribute fork-modify-and-pull-request}@anchor{76}@anchor{contribute pull-request}@anchor{75}
@section Fork, modify and pull-request


@cartouche
@quotation Tip 

@itemize *

@item 
Before starting any modification, you might want to have a look at 
@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/c3a4692a25333d57bb8c1ce54f97f15c6846ba63/ghdl,,,Open pull requests,svg}
 and 
@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/6497f995f9ef9e87d1fe97a236cebe38959dc915/ghdl,,,Closed pull requests,svg}
,
to check which other contributions are being made or have been made. If you observe that the modifications you are
about to start might conflict with any other, please 
@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/16176de4998e1a71b2f57993443202b2d81671f4/chat-on%20gitter-4db797,,,Talk to us on Gitter,svg}
 or open a 
@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/82b759af84cd517081b3c031dfbe444f16595fb9/f125673efc1475d3e54f355fd17e00e44587099a,,,Open new Pull Request (PR) at GitHub,svg?logo=github&style=flat-square&longCache=true}
 to coordinate.

@item 
See section @ref{77,,Directory structure} to faster find the location of the sources you need to modify, and/or to know
where to place new ones.
@end itemize
@end quotation
@end cartouche

Contributing source code/documentation is done through git@footnote{https://git-scm.com/}. Although we don’t provide direct
write access to our repositories, the project is hosted at GitHub, which follows a fork, edit and pull-request
flow@footnote{https://help.github.com/articles/github-flow/} . That is:


@enumerate 

@item 
Make a copy (fork@footnote{https://help.github.com/articles/fork-a-repo/}) of the project.

@item 
Do the changes you wish (edit, add, rename, move and/or delete).

@item 
When you think that the changes are ready to be merged, notify the maintainers by opening a Pull Request@footnote{https://help.github.com/articles/creating-a-pull-request/} (PR).

@item 
The maintainers will review the proposed changes and will reply in the corresponding thread if any further modification
is required. If so, you can keep adding commits to the same branch, and the PR will be automatically updated.

@item 
Last, maintainers will merge your branch. You will be notified, the PR will be closed, and you’ll be allowed to
delete the branch, if you want.
@end enumerate

@cartouche
@quotation Tip 

@itemize *

@item 
It is recommended to read A successful Git branching model@footnote{http://nvie.com/posts/a-successful-git-branching-model/}
for a reference on how maintainers expect to handle multiple branches. However, our actual model is not as exhaustive
as explained there.

@item 
Some commit messages can automatically close@footnote{https://help.github.com/articles/closing-issues-via-commit-messages/}
issues. This is a very useful feature, which you are not required to use. However beware that using @cite{fix} anywhere
in the commit message can have side effects. If you closed any issue unexpectedly, just reply to it (even if it’s
closed) so that maintainers can check it.

@item 
It is recommended to read @ref{78,,Coding Style} before contributing modifications to Ada sources.
@end itemize
@end quotation
@end cartouche

@node Related interesting projects,,Fork modify and pull-request,Contributing
@anchor{contribute related-interesting-projects}@anchor{79}
@section Related interesting projects


If you have an interesting project, please send us feedback or get listed on our @ref{4f,,Who uses GHDL?} page.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Copyrights | Licenses,Quick Start Guide,Contributing,Top
@anchor{licenses doc}@anchor{7a}@anchor{licenses copyrights-licenses}@anchor{7b}@anchor{licenses intro-copyrights}@anchor{7c}
@chapter Copyrights | Licenses



@itemize -

@item 
The GHDL front-end package @code{std.textio}, and the runtime library @code{GRT} are given under @ref{7d,,GNU GPLv2}.

@item 
The documentation is given under @ref{7e,,CC-BY-SA}.
@end itemize

@cartouche
@quotation Warning 
As a consequence of the runtime copyright, you are not allowed to distribute an executable produced by GHDL without allowing
access to the VHDL sources. Please, send a comment (@ref{73,,Requesting enhancements}) if you don’t like this policy.
@end quotation
@end cartouche

The following packages are copyrighted by third parties (see corresponding sources for more information):


@itemize *

@item 
These from library @code{ieee} are copyrighted by Institute of Electrical and Electronics Engineers (IEEE)@footnote{https://www.ieee.org}:


@itemize *

@item 
Since December 2019, standard and IEEE libraries are distributed under Apache 2.0 and available at
opensource.ieee.org/vasg/Packages@footnote{https://opensource.ieee.org/vasg/Packages}. GHDL includes backports of those
libraries for earlier revisions of the standard.

@item 
@code{VITAL_Primitives}, @code{VITAL_Timing} and @code{VITAL_Memory} are not include in the open source distribution of IEEE (see IEEE 1076.4@footnote{http://ieeexplore.ieee.org/document/954750/}).
@end itemize

@item 
The following sources may be used and distributed without restriction, provided that the copyright statements are not
removed from the files and that any derivative work contains the copyright notice.


@itemize *

@item 
@code{synopsys} directory: @code{std_logic_arith}, @code{std_logic_signed}, @code{std_logic_unsigned} and @code{std_logic_textio} are
copyrighted by Synopsys@comma{} Inc.@footnote{https://www.synopsys.com/}

@item 
@code{mentor} directory: @code{std_logic_arith} is copyrighted by Mentor Graphics@footnote{https://www.mentor.com}.
@end itemize
@end itemize

@menu
* GNU GPLv2:: 
* CC-BY-SA:: 
* List of Contributors:: 

@end menu

@node GNU GPLv2,CC-BY-SA,,Copyrights | Licenses
@anchor{licenses gnu-gplv2}@anchor{7f}@anchor{licenses lic-gplv2}@anchor{7d}
@section GNU GPLv2


GHDL is copyright © 2002 - 2023 Tristan Gingold.

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but `WITHOUT ANY WARRANTY'; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License@footnote{https://www.gnu.org/licenses/old-licenses/gpl-2.0.html} for more details.

@node CC-BY-SA,List of Contributors,GNU GPLv2,Copyrights | Licenses
@anchor{licenses cc-by-sa}@anchor{80}@anchor{licenses lic-cc-by-sa}@anchor{7e}
@section CC-BY-SA


This is a free documentation; you can redistribute it and/or modify it under the terms of the Creative Commons Attribution-ShareAlike 4.0@footnote{https://creativecommons.org/licenses/by-sa/4.0/} license. You are free to `share' (copy and redistribute the material in any medium or format) and/or `adapt' (remix, transform, and build upon the material for any purpose, even commercially). We cannot revoke these freedoms as long as you follow the these terms:


@itemize -

@item 
`Attribution': you must provide the name of the creator and attribution parties (more info@footnote{https://wiki.creativecommons.org/wiki/License_Versions#Detailed_attribution_comparison_chart}), a copyright notice, a license notice, a disclaimer notice, a link to the material, a link to the license and indicate if changes were made (see marking guide@footnote{https://wiki.creativecommons.org/wiki/Best_practices_for_attribution#This_is_a_good_attribution_for_material_you_modified_slightly} and more info@footnote{https://wiki.creativecommons.org/wiki/License_Versions#Modifications_and_adaptations_must_be_marked_as_such}). You may do so in any reasonable manner, but not in any way that suggests we endorse you or your use.

@item 
`ShareAlike': if you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.

@item 
`No additional restrictions': you may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.
@end itemize

See CC-BY-SA-4.0 Legal Code@footnote{https://creativecommons.org/licenses/by-sa/4.0/legalcode.txt} for more details.

@node List of Contributors,,CC-BY-SA,Copyrights | Licenses
@anchor{licenses lic-contributors}@anchor{81}@anchor{licenses list-of-contributors}@anchor{82}
@section List of Contributors



@multitable {xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} {xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} 
@headitem

Contributor @footnote{
In alphabetical order
}

@tab

Role

@item

Baggett, Jonas

@tab

signal selection

@item

Bertram, Felix

@tab

VPI interface

@item

Davis, Brian

@tab

Windows Mcode builds

@item

Drummond, Brian

@tab

GCC 4.8.2 update, OSVVM port, some bugfixes

@item

Gingold, Tristan @footnote{
Maintainer
}

@tab

`Sole author of GHDL as a whole'

@item

Jensen, Adam

@tab

FreeBSD builds

@item

Koch, Markus

@tab

vendor pre-compile script for Lattice (GNU/Linux)

@item

Koontz, David

@tab

Mac OSX builds, LRM compliance work, bugfix analyses

@item

Lehmann, Patrick

@tab

Windows compile scripts, vendor library pre-compile scripts (win+lin), building in MinGW, AppVeyor integration.

@item

Meißner, Torsten

@tab

Property Specification Language (PSL): docs, tests, synthesis support

@item

Martinez-Corral, Unai @footnote{
Maintainer
}

@tab

ghdl-cosim, setup-ghdl-ci, docs, docker/CI, MSYS2 packaging, building/testing on ARM, termux builds

@item

van Rantwijk, Joris

@tab

Debian packaging

@end multitable



Only those who made substantial contributions are shown in the table above, but many others contributed with minor patches. You can find a list at 
@image{GHDL-figures//Users/gingold/devel/ghdl/doc/_build/doctrees/images/6f8cd1a5e6840820b92af0cbdd95adc63019ebd5/ghdl,,,Contributors,svg}


With apologies to anyone who ought to be either on this table or in the GitHub contributor list, but isn’t. Thanks also to all those who have reported bugs and support issues, and often patches and testcases to either the late gna! website or sourceforge.net/p/ghdl-updates/tickets@footnote{https://sourceforge.net/p/ghdl-updates/tickets/}.


__________________________________________________________________


@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Quick Start Guide,Invoking GHDL,Copyrights | Licenses,Top
@anchor{quick_start/index doc}@anchor{83}@anchor{quick_start/index quick-start-guide}@anchor{84}@anchor{quick_start/index using-quickstart}@anchor{85}
@chapter Quick Start Guide


Since this is the user and reference manual for @cite{GHDL}, it does not contain an introduction to @cite{VHDL}. Thus, the reader
should have at least a basic knowledge of @cite{VHDL}. A good knowledge of @cite{VHDL} language reference manual (usually called LRM)
is a plus. Nevertheless, multiple explained examples are provided, in the hope that they are useful for users to learn
about both @cite{GHDL} and @cite{VHDL}.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@menu
* Simulation:: 
* Python Interfaces:: 

@end menu

@node Simulation,Python Interfaces,,Quick Start Guide
@anchor{quick_start/simulation/index doc}@anchor{86}@anchor{quick_start/simulation/index simulation}@anchor{87}@anchor{quick_start/simulation/index using-quickstart-simulation}@anchor{68}
@section Simulation


As explained in @ref{4b,,What is GHDL?}, @cite{GHDL} is a compiler which translates @cite{VHDL} files to machine code.
Hence, the regular workflow is composed of three steps:


@itemize *

@item 
@ref{88,,Analysis [-a]}: convert design units (@cite{VHDL} sources) to an internal representation.

@item 
@ref{89,,Elaboration [-e]}: generate executable machine code for a target module (top-level entity).

@item 
@ref{8a,,Run [-r]}: execute the design to test the behaviour, generate output/waveforms, etc.
@end itemize

The following tips might be useful:


@itemize *

@item 
Don’t forget to select the version of the VHDL standard you want to use (see @ref{8b,,VHDL standards}).
The default is @ref{8c,,--std=93c}.
Use @ref{8c,,--std=08} for VHDL-2008 (albeit not fully implemented).


@itemize *

@item 
Use @ref{8d,,--ieee=synopsys} if your design depends on a non-standard implementation of the IEEE library.

@item 
Use @ref{8e,,-fexplicit} and @ref{8f,,-frelaxed-rules} if needed.
For instance, if you would like to use VHDL 2008 and also use shared variables with an ordinary type (deprecated in
VHDL 2000), you can use @code{--std=08 -frelaxed-rules}.
@end itemize

@item 
Use @ref{90,,--work=LIB_NAME} to analyze files into the @code{LIB_NAME} library.
To use files analyzed to a different directory, give the path to the @code{LIB_NAME} library using
@ref{91,,-P/path/to/name/directory/}.

@item 
Use the same options for analysis and elaboration.
E.g., first analyse with @code{ghdl -a --std=08 --work=mylib myfile.vhdl}; and then elaborate and run with
@code{ghdl --elab-run --std=08 top}.
@end itemize

Due to the fact that @cite{VHDL} is processed as a general purpose language (instead of an @cite{HDL}), all the language features
are to be supported.
I.e., @cite{VHDL} sources do not need to be limited to the synthesisable subset.
However, distinction between synthesisable and non-synthesisable (simulation-only) subsets is often misleading for users
who are new to the language.
Different examples are provided, in the hope of helping understand the different use cases:

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@menu
* Hello world program:: 
* Heartbeat module:: 
* Full adder module and testbench:: 
* Working with non-trivial designs:: 

@end menu

@node Hello world program,Heartbeat module,,Simulation
@anchor{quick_start/simulation/hello/index doc}@anchor{92}@anchor{quick_start/simulation/hello/index hello-world-program}@anchor{93}@anchor{quick_start/simulation/hello/index quickstart-hello}@anchor{94}
@subsection @cite{Hello world} program


To illustrate the general purpose of @cite{VHDL}, the following block is a commented @cite{Hello world} program which is saved in
a file named @code{hello.vhdl}:

@example
--  Hello world program
use std.textio.all; -- Imports the standard textio package.

--  Defines a design entity, without any ports.
entity hello_world is
end hello_world;

architecture behaviour of hello_world is
begin
  process
    variable l : line;
  begin
    write (l, String'("Hello world!"));
    writeline (output, l);
    wait;
  end process;
end behaviour;
@end example

@cartouche
@quotation Tip 

@itemize *

@item 
Both @code{.vhdl} and @code{.vhd} extensions are used for @cite{VHDL} source files, while @code{.v} is used for Verilog.

@quotation


@itemize *

@item 
Since, extension @code{.vhd} is also interpreted as a Virtual Hard Disk@footnote{https://en.wikipedia.org/wiki/VHD_(file_format)} file
format, some users prefer @code{.vhdl}, to avoid ambiguity.
This is the case with @cite{GHDL}’s codebase.
However, in order to maintain backward-compatibility@footnote{https://en.wikipedia.org/wiki/https://en.wikipedia.org/wiki/8.3_filename}
with legacy DOS systems, other users prefer @code{.vhd}.
@end itemize
@end quotation

@item 
Unless you use especial characters, either @cite{UTF-8} or @cite{ISO-8859-1} encodings can be used.
However, if you do, the latter should be used.
The standard defines ASCII (7-bit encoding) or ISO Latin-1 (ISO-8859-1) as default.
However, GHDL has a relaxing option, @ref{95,,--mb-comments} (multi byte), to allow UTF-8 or other encodings in
comments.
@end itemize
@end quotation
@end cartouche


@itemize *

@item 
First, you have to compile the file; this is called @ref{88,,analysis} of a design file in @cite{VHDL}
terms. Run @code{ghdl -a hello.vhdl} in the @cite{shell}.
This command creates or updates a file @code{work-obj93.cf}, which describes the library @code{work}.

@item 
Then, run @code{ghdl -e hello_world} in the @cite{shell}.
Command @ref{96,,-e} means @ref{89,,elaborate}, which is used to build a design, with the
@code{hello_world} entity at the top of the hierarchy.

@item 
Last, you can directly launch the simulation @ref{8a,,running} @code{ghdl -r hello_world} in the @cite{shell}.
The result of the simulation will be shown on screen:
@end itemize

@example
Hello world!
@end example

@cartouche
@quotation Hint 
If a GCC/LLVM variant of @cite{GHDL} is used:


@itemize *

@item 
@ref{88,,Analysis} generates a file, @code{hello.o}, which is the object file corresponding to
your @cite{VHDL} program. This is not created with @ref{55,,mcode}.
These kind of object files can be compiled into foreign programs (see Linking GHDL object files to Ada/C@footnote{https://ghdl.github.io/ghdl-cosim/vhpidirect/linking.html#linking-with-ada}).

@item 
The @ref{89,,elaboration} step is mandatory after running the analysis and prior to launching the
simulation.
This will generate an executable binary named @code{hello_world}.

@item 
As a result, @ref{97,,-r} is just a passthrough to the binary generated in the @cite{elaboration}.
Therefore, the executable can be run directly: @code{./hello_world}. See @ref{97,,-r} for more informartion.
@end itemize
@end quotation
@end cartouche

@cartouche
@quotation Hint 
@ref{96,,-e} can be bypassed with @ref{55,,mcode}, since @ref{97,,-r} actually elaborates the design and saves
it on memory before running the simulation.
But you can still use it to check for some elaboration problems.
@end quotation
@end cartouche

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Heartbeat module,Full adder module and testbench,Hello world program,Simulation
@anchor{quick_start/simulation/heartbeat/index doc}@anchor{98}@anchor{quick_start/simulation/heartbeat/index heartbeat-module}@anchor{99}@anchor{quick_start/simulation/heartbeat/index quickstart-heartbeat}@anchor{9a}
@subsection @cite{Heartbeat} module


Although @ref{94,,Hello world} illustrates that @cite{VHDL} is supported as a general purpose language, the
main use case of @cite{GHDL} is to simulate hardware descriptions.
The following block, which is saved in a file named @code{heartbeat.vhdl}, is an example of how to generate a 100 MHz
clock signal with non-synthesisable VHDL:

@example
library ieee;
use ieee.std_logic_1164.all;

entity heartbeat is
  port ( clk: out std_logic);
end heartbeat;

architecture behaviour of heartbeat
is
  constant clk_period : time := 10 ns;
begin
  -- Clock process definition
  clk_process: process
  begin
    clk <= '0';
    wait for clk_period/2;
    clk <= '1';
    wait for clk_period/2;
  end process;
end behaviour;
@end example

It can be @ref{88,,analysed}, @ref{89,,elaborated} and @ref{8a,,run}, as
you already know:

@example
ghdl -a heartbeat.vhdl
ghdl -e heartbeat
ghdl -r heartbeat
@end example

However, execution of the design does not terminate. At the same time, no output is shown on screen. This is because,
traditionally, hardware designs are continuously running devices which do not have a screen where to print. In this
context, inspection and verification of the behaviour is done through waveforms@footnote{https://en.wikipedia.org/wiki/Waveform_viewer},
which is supported by @cite{GHDL} (see @ref{9b,,Export waveforms}). You can use either @ref{9c,,--wave}, @ref{9d,,--vcd},
@ref{9e,,--vcdgz} or @ref{9f,,--fst} to save the signals of the simulation to a file. Then, terminate the execution
(@code{C-c}) and you can inspect the wave with a viewer, such as GtkWave@footnote{http://gtkwave.sourceforge.net/}. As
explained in the manual@footnote{http://gtkwave.sourceforge.net/gtkwave.pdf}, GtkWave `‘relies on a post-mortem approach
through the use of dumpfiles’'. Therefore, you should first simulate your design and dump a waveform file, say GHW:

@example
ghdl -r heartbeat --wave=wave.ghw
@end example

Then, you can view the dump:

@example
gtkwave wave.ghw
@end example

Of course, manually terminating the simulation is for illustration purposes only.
In @ref{a0,,Full adder} and @ref{a1,,Working with non-trivial designs}, you will see how to write a testbench to terminate
the simulation programmatically.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Full adder module and testbench,Working with non-trivial designs,Heartbeat module,Simulation
@anchor{quick_start/simulation/adder/index doc}@anchor{a2}@anchor{quick_start/simulation/adder/index full-adder-module-and-testbench}@anchor{a3}@anchor{quick_start/simulation/adder/index quickstart-adder}@anchor{a0}
@subsection @cite{Full adder} module and testbench


Unlike @ref{9a,,Heartbeat}, the target hardware design in this example is written using the
synthesisable subset of @cite{VHDL}. It is a full adder@footnote{https://en.wikipedia.org/wiki/Adder_(electronics)#Full_adder} described in a file
named @code{adder.vhdl}:

@example
entity adder is
  -- `i0`, `i1`, and the carry-in `ci` are inputs of the adder.
  -- `s` is the sum output, `co` is the carry-out.
  port (i0, i1 : in bit; ci : in bit; s : out bit; co : out bit);
end adder;

architecture rtl of adder is
begin
  --  This full-adder architecture contains two concurrent assignments.
  --  Compute the sum.
  s <= i0 xor i1 xor ci;
  --  Compute the carry.
  co <= (i0 and i1) or (i0 and ci) or (i1 and ci);
end rtl;
@end example

You can @ref{88,,analyse} this design file, @code{ghdl -a adder.vhdl}, and try to execute the @cite{adder}
design. But this is useless, since nothing externally visible will happen. In order to check this full adder, a
`testbench' has to be run. The `testbench' is a description of how to generate inputs and how to check the
outputs of the Unit Under Test (UUT). This one is very simple, since the adder is also simple: it checks exhaustively
all inputs. Note that only the behaviour is tested, timing constraints are not checked. A file named
@code{adder_tb.vhdl} contains the testbench for the adder:

@example
--  A testbench has no ports.
entity adder_tb is
end adder_tb;

architecture behav of adder_tb is
  --  Declaration of the component that will be instantiated.
  component adder
    port (i0, i1 : in bit; ci : in bit; s : out bit; co : out bit);
  end component;

  --  Specifies which entity is bound with the component.
  for adder_0: adder use entity work.adder;
  signal i0, i1, ci, s, co : bit;
begin
  --  Component instantiation.
  adder_0: adder port map (i0 => i0, i1 => i1, ci => ci, s => s, co => co);

  --  This process does the real job.
  process
    type pattern_type is record
      --  The inputs of the adder.
      i0, i1, ci : bit;
      --  The expected outputs of the adder.
      s, co : bit;
    end record;
    --  The patterns to apply.
    type pattern_array is array (natural range <>) of pattern_type;
    constant patterns : pattern_array :=
      (('0', '0', '0', '0', '0'),
       ('0', '0', '1', '1', '0'),
       ('0', '1', '0', '1', '0'),
       ('0', '1', '1', '0', '1'),
       ('1', '0', '0', '1', '0'),
       ('1', '0', '1', '0', '1'),
       ('1', '1', '0', '0', '1'),
       ('1', '1', '1', '1', '1'));
  begin
    --  Check each pattern.
    for i in patterns'range loop
      --  Set the inputs.
      i0 <= patterns(i).i0;
      i1 <= patterns(i).i1;
      ci <= patterns(i).ci;
      --  Wait for the results.
      wait for 1 ns;
      --  Check the outputs.
      assert s = patterns(i).s
        report "bad sum value" severity error;
      assert co = patterns(i).co
        report "bad carry out value" severity error;
    end loop;
    assert false report "end of test" severity note;
    --  Wait forever; this will finish the simulation.
    wait;
  end process;

end behav;
@end example

As usual, you should analyze the file, @code{ghdl -a adder_tb.vhdl}.

@cartouche
@quotation Hint 
Then, if required, @ref{89,,elaborate} the testbench: @code{ghdl -e adder_tb}. You do not need to
specify which object files are required, since @cite{GHDL} knows them and automatically adds them.
@end quotation
@end cartouche

Now, it is time to @ref{8a,,run} the testbench, @code{ghdl -r adder_tb}, and check the result on screen:

@example
adder_tb.vhdl:52:7:(assertion note): end of test
@end example

If your design is rather complex, you’d like to inspect signals as explained in @ref{9a,,Heartbeat}.

See section @ref{a4,,Simulation options}, for more details on other runtime options.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Working with non-trivial designs,,Full adder module and testbench,Simulation
@anchor{quick_start/simulation/DLXModelSuite doc}@anchor{a5}@anchor{quick_start/simulation/DLXModelSuite quickstart-dlx}@anchor{a1}@anchor{quick_start/simulation/DLXModelSuite working-with-non-trivial-designs}@anchor{a6}
@subsection Working with non-trivial designs


Designs are usually more complex than the previous examples. Unless you are only studying VHDL, you will work with
larger designs. Let’s see how to analyse a design such as the DLX model suite written by Peter Ashenden, which is
distributed under the terms of the GNU General Public License. A copy is kept at ghdl.free.fr/dlx.tar.gz@footnote{http://ghdl.free.fr/dlx.tar.gz} .


@itemize -

@item 
First, untar the sources: @code{tar zxvf dlx.tar.gz}.
@end itemize

@cartouche
@quotation Hint 
@quotation

In order not to pollute the sources with the artifacts (@cite{WORK} library), it is a good idea to create a
@code{work/} subdirectory. To any GHDL commands, we will add the @ref{a7,,--workdir=work} option, so
that all files generated by the compiler (except the executable) will be placed in this directory.
@end quotation

@example
$ cd dlx
$ mkdir work
@end example
@end quotation
@end cartouche


@itemize *

@item 
Then, we will run the @code{dlx_test_behaviour} design. We need to analyse all the design units for the design
hierarchy, in the correct order. GHDL provides an easy way to do this, by @ref{a8,,importing} the
sources: @code{ghdl -i --workdir=work *.vhdl}.

@item 
GHDL knows all the design units of the DLX, but none of them has been analysed. Run the @ref{a9,,make}
command, @code{ghdl -m --workdir=work dlx_test_behaviour}, which analyses and elaborates a design. This creates many
files in the @code{work/} directory, and (GCC/LLVM only) the @code{dlx_test_behaviour} executable in the current
directory.
@end itemize

@cartouche
@quotation Hint 
The simulation needs to have a DLX program contained in the file @code{dlx.out}. This memory image will be loaded
in the DLX memory. Just take one sample: @code{cp test_loop.out dlx.out}.
@end quotation
@end cartouche


@itemize *

@item 
Now, you can @ref{8a,,run} the test suite: @code{ghdl -r --workdir=work dlx_test_behaviour}. The test bench
monitors the bus and displays each executed instruction. It finishes with an assertion of severity level note:

@example
dlx-behaviour.vhdl:395:11:(assertion note): TRAP instruction
 encountered, execution halted
@end example

@item 
Last, since the clock is still running, you have to manually stop the program with the @code{C-c} key sequence. This
behavior prevents you from running the testbench in batch mode. However, you may force the simulator to stop when an
assertion above or equal a certain severity level occurs. To do so, call run with this option instead:
@code{ghdl -r --workdir=work dlx_test_behaviour --assert-level=note`}. With @ref{aa,,--assert-level}, the program stops
just after the previous message:

@example
dlx-behaviour.vhdl:395:11:(assertion note): TRAP instruction
 encountered, execution halted
error: assertion failed
@end example
@end itemize

@cartouche
@quotation Tip 
If you want to make room on your hard drive, you can either:


@itemize *

@item 
@ref{ab,,Clean} the design library with @code{ghdl --clean --workdir=work}. This removes the executable
and all the object files. If you want to rebuild the design at this point, just do the make command as shown above.

@item 
@ref{ac,,Remove} the design library with @code{ghdl --remove --workdir=work}. This removes the
executable, all the object files and the library file. If you want to rebuild the design, you have to import the
sources again and make the design.

@item 
Remove the @code{work/} directory: @code{rm -rf work}. Only the executable is kept. If you want to rebuild the design, create the @code{work/} directory, import the sources, and make the design.
@end itemize
@end quotation
@end cartouche

@cartouche
@quotation Warning 
Sometimes, a design does not fully follow the VHDL standards. For example it might use the badly engineered @code{std_logic_unsigned} package. GHDL supports this VHDL dialect through some options: @ref{8d,,--ieee=synopsys}, @ref{8e,,-fexplicit}, etc. See section @ref{71,,IEEE library pitfalls}, for more details.
@end quotation
@end cartouche

@cartouche
@quotation Tip 
See Learning VHDL with GHDL@footnote{https://github.com/ghdl/ghdl/issues/1291}.
@end quotation
@end cartouche

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Python Interfaces,,Simulation,Quick Start Guide
@anchor{quick_start/python/index doc}@anchor{ad}@anchor{quick_start/python/index python-interfaces}@anchor{ae}@anchor{quick_start/python/index using-quickstart-python}@anchor{af}
@section Python Interfaces


Currently, pyGHDL is not distributed through PyPI. Therefore, users need to install it from the git repository. However, the
version of the sources must be compatible with the installed version of GHDL (and the shared library @code{libghdl}).
Installing from @code{master} is discouraged, because it might contain changes to the internal AST. Instead, @code{ghdl version hash}
allows getting the commit hash of the version the installed binary was built from. Since @code{pip} allows installing packages
by providing the URL to the git repo, this is the recommended installation procedure:

@example
pip install git+https://github.com/ghdl/ghdl.git@@$(ghdl version hash)
@end example

@menu
* Language Server:: 

@end menu

@node Language Server,,,Python Interfaces
@anchor{quick_start/python/index cmdref}@anchor{b0}@anchor{quick_start/python/index language-server}@anchor{b1}
@subsection Language Server


When installed through @code{pip}, pyGHDL provides executable entrypoints registered in the search PATH, such as @code{ghdl-ls}.

@c #
@c This files requires a Python module called 'AutoProgram' to be located in the
@c 'doc' root folder. It expects a variable 'parser' of type ArgumentParser.

@menu
* ghdl-ls:: 

@end menu

@node ghdl-ls,,,Language Server
@anchor{quick_start/python/index cmdref-ghdlls}@anchor{b2}@anchor{quick_start/python/index ghdl-ls}@anchor{b3}
@subsubsection ghdl-ls


VHDL Language Protocol Server. Find info about clients in ghdl/ghdl-language-server@footnote{https://github.com/ghdl/ghdl-language-server}.

@example
usage: ghdl-ls [-h] [--version] [--verbose] [--log-file LOG_FILE]
               [--trace-file TRACE_FILE] [--input INPUT] [--disp-config]
@end example

@menu
* optional arguments:: 

@end menu

@node optional arguments,,,ghdl-ls
@anchor{quick_start/python/index optional-arguments}@anchor{b4}
@subsubsection optional arguments


@geindex ghdl-ls command line option; -h
@geindex ghdl-ls command line option; --help
@anchor{quick_start/python/index cmdoption-ghdl-ls-h}@anchor{b5}@anchor{quick_start/python/index cmdoption-ghdl-ls-help}@anchor{b6}
@deffn {Option} @w{-}h, @w{-}@w{-}help

show this help message and exit
@end deffn

@geindex ghdl-ls command line option; --version
@geindex ghdl-ls command line option; -V
@anchor{quick_start/python/index cmdoption-ghdl-ls-version}@anchor{b7}@anchor{quick_start/python/index cmdoption-ghdl-ls-V}@anchor{b8}@anchor{quick_start/python/index cmdoption-ghdl-ls-v}@anchor{b9}
@deffn {Option} @w{-}@w{-}version, @w{-}V

show program’s version number and exit
@end deffn

@geindex ghdl-ls command line option; --verbose
@geindex ghdl-ls command line option; -v
@anchor{quick_start/python/index cmdoption-ghdl-ls-verbose}@anchor{ba}@anchor{quick_start/python/index cmdoption-ghdl-ls-0}@anchor{bb}
@deffn {Option} @w{-}@w{-}verbose, @w{-}v

Show debug output
@end deffn

@geindex ghdl-ls command line option; --log-file
@anchor{quick_start/python/index cmdoption-ghdl-ls-log-file}@anchor{bc}
@deffn {Option} @w{-}@w{-}log@w{-}file <log_file>

Redirect logs to the given file instead of stderr
@end deffn

@geindex ghdl-ls command line option; --trace-file
@anchor{quick_start/python/index cmdoption-ghdl-ls-trace-file}@anchor{bd}
@deffn {Option} @w{-}@w{-}trace@w{-}file <trace_file>

Save RPC data to FILE.in and FILE.out (overrides 
@geindex GHDL_LS_TRACE
@geindex environment variable; GHDL_LS_TRACE
@code{GHDL_LS_TRACE})
@end deffn

@geindex ghdl-ls command line option; --input
@geindex ghdl-ls command line option; -i
@anchor{quick_start/python/index cmdoption-ghdl-ls-input}@anchor{be}@anchor{quick_start/python/index cmdoption-ghdl-ls-i}@anchor{bf}
@deffn {Option} @w{-}@w{-}input <input>, @w{-}i <input>

Read request from file
@end deffn

@geindex ghdl-ls command line option; --disp-config
@anchor{quick_start/python/index cmdoption-ghdl-ls-disp-config}@anchor{c0}
@deffn {Option} @w{-}@w{-}disp@w{-}config

Display installation configuration and exit
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Invoking GHDL,Simulation runtime,Quick Start Guide,Top
@anchor{using/InvokingGHDL doc}@anchor{c1}@anchor{using/InvokingGHDL invoking-ghdl}@anchor{c2}@anchor{using/InvokingGHDL using-invoking}@anchor{69}
@chapter Invoking GHDL


The form of the @code{ghdl} command is @code{ghdl command [options...]}.
There are multiple available commands, but these general rules apply:


@itemize *

@item 
The first argument selects the command.
The options are used to slightly modify the action.

@item 
No option is allowed before the command.
Except for the run command, no option is allowed after a filename or a unit name.
@end itemize

@cartouche
@quotation Hint 
If the number of options is large and the command line length is beyond the system limit, you can use a response file.
An argument that starts with a @code{@@} is considered as a response file; it is replaced by arguments read from the file
(separated by blanks and end of line).
@end quotation
@end cartouche

@cartouche
@quotation Hint 
Only the most common commands and options are shown here. For the most advanced and experimental features see section
@ref{6a,,Additional Command Reference}.
@end quotation
@end cartouche

@cartouche
@quotation Warning 
During analysis and elaboration GHDL may read the @code{std} and @code{ieee} files.
The location of these files is based on the prefix, which is (in order of priority):


@itemize *

@item 
the @ref{c3,,--PREFIX} command line option

@item 
the 
@geindex GHDL_PREFIX
@geindex environment variable; GHDL_PREFIX
@ref{c4,,GHDL_PREFIX} environment variable

@item 
a built-in default path. It is a hard-coded path on GNU/Linux, and it corresponds to the value of the
@code{HKLM\Software\Ghdl\Install_Dir} registry entry on Windows.
@end itemize

You should use the @ref{c5,,--disp-config} command to display and debug installation problems.
@end quotation
@end cartouche

@menu
* Design building commands:: 
* Design rebuilding commands:: 
* Options:: 
* Warnings:: 
* Diagnostics Control:: 
* Library commands:: 
* VPI/VHPI build commands:: 
* IEEE library pitfalls:: 

@end menu

@node Design building commands,Design rebuilding commands,,Invoking GHDL
@anchor{using/InvokingGHDL design-building-commands}@anchor{c6}
@section Design building commands


The most commonly used commands of GHDL are those to analyze and elaborate a design.

@geindex cmd analysis

@menu
* Analysis [-a]:: 
* Elaboration [-e]:: 
* Run [-r]:: 
* Elaborate and run [--elab-run]:: 
* Check syntax [-s]:: 
* Analyze and elaborate [-c]:: 

@end menu

@node Analysis [-a],Elaboration [-e],,Design building commands
@anchor{using/InvokingGHDL analysis-a}@anchor{c7}@anchor{using/InvokingGHDL analysis-command}@anchor{88}
@subsection Analysis [@code{-a}]


@geindex ghdl command line option; -a
@anchor{using/InvokingGHDL cmdoption-ghdl-a}@anchor{c8}
@deffn {Option} @w{-}a <[options...] file...>
@end deffn

Analyzes/compiles one or more files, and creates an object file for each source file.
Any argument starting with a dash is an option, the others are filenames.
No options are allowed after a filename argument.
GHDL analyzes each filename in the given order, and stops the analysis in case of error (remaining files are not
analyzed).

See @ref{c9,,Options}, for details on the GHDL options.
For example, to produce debugging information such as line numbers, use: @code{ghdl -a -g my_design.vhdl}.

@geindex cmd elaboration

@node Elaboration [-e],Run [-r],Analysis [-a],Design building commands
@anchor{using/InvokingGHDL elaboration-command}@anchor{89}@anchor{using/InvokingGHDL elaboration-e}@anchor{ca}
@subsection Elaboration [@code{-e}]


@geindex ghdl command line option; -e
@anchor{using/InvokingGHDL cmdoption-ghdl-e}@anchor{96}
@deffn {Option} @w{-}e <[options...] [library.]top_unit [arch]>
@end deffn

Re-analyzes all the configurations, entities, architectures and package declarations, and creates the default
configurations and the default binding indications according to the LRM rules.
It also generates the list of object files required for the executable.
Then, it links all these files with the runtime library (GRT).

The elaboration command, @ref{96,,-e}, must be followed by a @code{top_unit} name denoting either of:

@quotation


@itemize *

@item 
a configuration unit

@item 
an entity unit

@item 
an entity unit followed by a secondary unit (the name of an architecture unit)
@end itemize
@end quotation


@itemize *

@item 
Name of the top units can be either a simple name (without dots), or the name of a logical library followed by a dot
and a simple name.
The latter is equivalent to using @ref{90,,--work=NAME} described in @ref{c9,,Options}:
@code{-e <[options...] --work=library top_unit [arch]>}.
It selects the name of the library to be used as @code{WORK}.
See section @ref{cb,,Top entity}, for the restrictions on the root/top unit of a hierarchy.

@item 
Name of the secondary units must be a simple name; they cannot contain any dot.
@end itemize

With regard to the artifacts:


@itemize *

@item 
If the GCC/LLVM backend was enabled during the compilation of GHDL, the elaboration command creates an executable
containing the code of the VHDL sources, the elaboration code and simulation code for executing a design hierarchy.
The executable is created in the current directory and the the filename is the name of the primary unit, or for the
latter case, the concatenation of the name of the primary unit, a dash, and the name of the secondary unit.
Option @code{-o} followed by a filename can override the default executable filename.

@item 
If mcode is used, this command elaborates the design but does not generate anything.
Since the run command also elaborates the design, this can be skipped.
@end itemize

@cartouche
@quotation Warning 
This elaboration command is not a complete elaboration in terms of the VHDL standard.
The actual elaboration is performed at runtime.
Therefore, in order to get a complete VHDL elaboration without running the simulation, @code{ghdl --elab-run --no-run}
is required.
See @ref{cc,,--no-run}.
@end quotation
@end cartouche

@geindex cmd run

@node Run [-r],Elaborate and run [--elab-run],Elaboration [-e],Design building commands
@anchor{using/InvokingGHDL run-command}@anchor{8a}@anchor{using/InvokingGHDL run-r}@anchor{cd}
@subsection Run [@code{-r}]


@geindex ghdl command line option; -r
@anchor{using/InvokingGHDL cmdoption-ghdl-r}@anchor{97}
@deffn {Option} @w{-}r <[options...] [library.]top_unit [arch] [simulation_options...]>
@end deffn

Runs/simulates a design.
Two sets of options are accepted, both of them being separated by @code{[library.]top_unit [arch]}.
For the first set, @code{options...}, arguments are the same as for the @ref{89,,elaboration command}.
For the second set, @code{simulation_options...}, arguments are defined in @ref{ce,,Simulation (runtime)}.


@itemize *

@item 
GGC/LLVM: the filename of the executable is determined and it is executed.
Elaboration options are ignored.
You may also directly execute the program.
The executable must be in the current directory.

@item 
mcode: the design is elaborated and the simulation is launched.
As a consequence, you must use the same options used during analysis.
@end itemize

This command exists for three reasons:


@itemize *

@item 
It works with mcode implementation, where the executable code is generated in memory.

@item 
You are using GCC/LLVM, but you don’t need to create the executable program name.

@item 
It is coherent with the @ref{c8,,-a} and @ref{96,,-e} commands.
@end itemize

@geindex cmd elaborate and run

@node Elaborate and run [--elab-run],Check syntax [-s],Run [-r],Design building commands
@anchor{using/InvokingGHDL elab-and-run-command}@anchor{cf}@anchor{using/InvokingGHDL elaborate-and-run-elab-run}@anchor{d0}
@subsection Elaborate and run [@code{--elab-run}]


@geindex ghdl command line option; --elab-run
@anchor{using/InvokingGHDL cmdoption-ghdl-elab-run}@anchor{d1}
@deffn {Option} @w{-}@w{-}elab@w{-}run <[options...] [library.]top_unit [arch] [simulation_options...]>
@end deffn

Acts like the elaboration command followed by the run command.
Note that this command accepts two sets of options.
See @ref{96,,-e}, @ref{97,,-r} and @ref{ce,,Simulation (runtime)}.

@geindex cmd checking syntax

@node Check syntax [-s],Analyze and elaborate [-c],Elaborate and run [--elab-run],Design building commands
@anchor{using/InvokingGHDL check-syntax-s}@anchor{d2}
@subsection Check syntax [@code{-s}]


@geindex ghdl command line option; -s
@anchor{using/InvokingGHDL cmdoption-ghdl-s}@anchor{d3}
@deffn {Option} @w{-}s <[options...] file...>
@end deffn

Analyze files but do not generate code.
This command may be used to check the syntax of files.
It does not update the library.

@geindex cmd analyze and elaborate

@node Analyze and elaborate [-c],,Check syntax [-s],Design building commands
@anchor{using/InvokingGHDL analyze-and-elaborate-c}@anchor{d4}
@subsection Analyze and elaborate [@code{-c}]


@geindex ghdl command line option; -c
@anchor{using/InvokingGHDL cmdoption-ghdl-c}@anchor{d5}
@deffn {Option} @w{-}c <[options...] file... @w{-}<e|r> top_unit [arch]>
@end deffn

@cartouche
@quotation Hint 
With GCC/LLVM, @ref{96,,-e} should be used, and @ref{97,,-r} with mcode.
@end quotation
@end cartouche

The files are first parsed, and then a elaboration is performed, which drives an analysis.
Effectively, analysis and elaboration are combined, but there is no explicit call to @ref{c8,,-a}.
With GCC/LLVM, code is generated during the elaboration.
With mcode, the simulation is launched after the elaboration.

All the units of the files are put into the @cite{work} library.
But, the work library is neither read from disk nor saved.
Therefore, you must give all the files of the @cite{work} library your design needs.

The advantages over the traditional approach (analyze and then elaborate) are:


@itemize *

@item 
The compilation cycle is achieved in one command.

@item 
Since the files are only parsed once, the compilation cycle may be faster.

@item 
You don’t need to know an analysis order.

@item 
This command produces a smaller executable, since unused units and subprograms do not generate code.
@end itemize

@cartouche
@quotation Hint 
However, you should know that most of the time is spent in code generation and the analyze and elaborate command
generates code for all units needed, even units of @code{std} and @code{ieee} libraries.
Therefore, according to the design, the time for this command may be higher than the time for the analyze command
followed by the elaborate command.
@end quotation
@end cartouche

@cartouche
@quotation Warning 
This command is still under development. In case of problems, you should go back to the traditional way.
@end quotation
@end cartouche

@node Design rebuilding commands,Options,Design building commands,Invoking GHDL
@anchor{using/InvokingGHDL design-rebuilding-commands}@anchor{d6}
@section Design rebuilding commands


Analyzing and elaborating a design consisting of several files can be tricky, due to dependencies.
GHDL has a few commands for rebuilding a design.

@geindex cmd importing files

@menu
* Import [-i]:: 
* Elab-order [--elab-order]:: 
* Make [-m]:: 
* Generate Makefile [--gen-makefile]:: 
* Generate dependency file command [--gen-depends]:: 

@end menu

@node Import [-i],Elab-order [--elab-order],,Design rebuilding commands
@anchor{using/InvokingGHDL import-command}@anchor{a8}@anchor{using/InvokingGHDL import-i}@anchor{d7}
@subsection Import [@code{-i}]


@geindex ghdl command line option; -i
@anchor{using/InvokingGHDL cmdoption-ghdl-i}@anchor{d8}
@deffn {Option} @w{-}i <[options...] file...>
@end deffn

All the files specified in the command line are scanned, parsed and added into the libraries but as not yet analyzed.
No object files are created.
Its purpose is to localize design units in the design files.
The make command will then be able to recursively build a hierarchy from an entity name or a configuration name.

@cartouche
@quotation Hint 

@itemize *

@item 
Note that all the files are added to the work library.
If you have many libraries, you must use the command for each library.

@item 
Since the files are parsed, there must be correct files.
However, since they are not analyzed, many errors are tolerated by this command.
@end itemize
@end quotation
@end cartouche

See @ref{d9,,-m}, to actually build the design.
See also @ref{da,,--elab-order}, for retrieving the compilation order guessed recursively.

@geindex cmd elaboration order

@node Elab-order [--elab-order],Make [-m],Import [-i],Design rebuilding commands
@anchor{using/InvokingGHDL elab-order-elab-order}@anchor{db}
@subsection Elab-order [@code{--elab-order}]


@geindex ghdl command line option; --elab-order
@anchor{using/InvokingGHDL cmdoption-ghdl-elab-order}@anchor{da}
@deffn {Option} @w{-}@w{-}elab@w{-}order <[options...] [library.]top_unit [arch]>
@end deffn

Print the list of sources required for elaborating a unit, in order
for them to be analyzed without dependency issues.  This is expected
to be used after @ref{d8,,-i}, or for retrieving the order for some
unit analyzed through third-party scripts.

With the @code{--libraries} option, each line contains first the
library name followed by the file name.

Without the @code{--libraries} option, the list does not include
information about the logical library names where each source needs
to be analyzed.  Hence, it is useful when all sources belong
to the same @code{WORK} library.

@geindex cmd make

@node Make [-m],Generate Makefile [--gen-makefile],Elab-order [--elab-order],Design rebuilding commands
@anchor{using/InvokingGHDL make-command}@anchor{a9}@anchor{using/InvokingGHDL make-m}@anchor{dc}
@subsection Make [@code{-m}]


@geindex ghdl command line option; -m
@anchor{using/InvokingGHDL cmdoption-ghdl-m}@anchor{d9}
@deffn {Option} @w{-}m <[options...] [library.]top_unit [arch]>
@end deffn

Analyze automatically outdated files and elaborate a design.
The primary unit denoted by the @code{[library.]top_unit} argument must already be known by the system, either because you
have already analyzed it (even if you have modified it) or because you have imported it.
A file may be outdated because it has been modified (e.g. you have just edited it), or because a design unit contained
in the file depends on a unit which is outdated.
This rule is recursive.


@itemize *

@item 
With option @code{--bind}, GHDL will stop before the final linking step.
This is useful when the main entry point is not GHDL and you’re linking GHDL object files into a foreign program.

@item 
With option @code{-f} (force), GHDL analyzes all the units of the work library needed to create the design hierarchy.
Outdated units are recompiled.
This is useful if you want to compile a design hierarchy with new compilation flags (for example, to add the @code{-g}
debugging option).
@end itemize

@cartouche
@quotation Important 
The make command will only re-analyze design units in the work library.
GHDL fails if it has to analyze an outdated unit from another library.
@end quotation
@end cartouche

The purpose of this command is to be able to compile a design without prior knowledge of file order.
In the VHDL model, some units must be analyzed before others (e.g. an entity before its architecture).
It might be a nightmare to analyze a full design of several files if you don’t have the ordered list of files.
This command computes an analysis order.

The make command fails when a unit was not previously parsed.
For example, if you split a file containing several design units into several files, you must either import these new
files or analyze them so that GHDL knows in which file these units are.

The make command imports files which have been modified.
Then, a design hierarchy is internally built as if no units are outdated.
Then, all outdated design units, using the dependencies of the design hierarchy, are analyzed.
If necessary, the design hierarchy is elaborated.

@cartouche
@quotation Hint 
This is not perfect, since the default architecture (the most recently analyzed one) may change while outdated design
files are analyzed.
In such a case, re-run the make command of GHDL.
@end quotation
@end cartouche

@geindex cmd generate makefile

@node Generate Makefile [--gen-makefile],Generate dependency file command [--gen-depends],Make [-m],Design rebuilding commands
@anchor{using/InvokingGHDL generate-makefile-gen-makefile}@anchor{dd}
@subsection Generate Makefile [@code{--gen-makefile}]


@geindex ghdl command line option; --gen-makefile
@anchor{using/InvokingGHDL cmdoption-ghdl-gen-makefile}@anchor{de}
@deffn {Option} @w{-}@w{-}gen@w{-}makefile <[options...] [library.]top_unit [arch]>
@end deffn

This command works like the make command (see @ref{d9,,-m}), but only a makefile is generated on the standard output.

@geindex --gen-depends command

@node Generate dependency file command [--gen-depends],,Generate Makefile [--gen-makefile],Design rebuilding commands
@anchor{using/InvokingGHDL generate-dependency-file-command-gen-depends}@anchor{df}
@subsection Generate dependency file command [@code{--gen-depends}]


@geindex ghdl command line option; --gen-depends
@anchor{using/InvokingGHDL cmdoption-ghdl-gen-depends}@anchor{e0}
@deffn {Option} @w{-}@w{-}gen@w{-}depends <[options...] [library.]top_unit [arch]>
@end deffn

Generate a Makefile containing only dependencies to build a design unit.

This command works like the make and gen-makefile commands (see
@ref{d9,,-m}), but instead of a full makefile only dependencies
without rules are generated on the standard output.  These rules can
then be integrated in another Makefile.

This command is not available with the mcode backend.

@node Options,Warnings,Design rebuilding commands,Invoking GHDL
@anchor{using/InvokingGHDL ghdl-options}@anchor{c9}@anchor{using/InvokingGHDL options}@anchor{e1}
@section Options


@geindex IEEE 1164

@geindex 1164

@geindex IEEE 1076.3

@geindex 1076.3

@geindex WORK library

@geindex ghdl command line option; --work
@anchor{using/InvokingGHDL cmdoption-ghdl-work}@anchor{90}
@deffn {Option} @w{-}@w{-}work=<LIB_NAME>

Specify the name of the @code{WORK} library. Analyzed units are always placed in the library logically named @code{WORK}.
With this option, you can set its name.
By default, the name is @code{work}.

@cite{GHDL} checks whether @code{WORK} is a valid identifier.
Although being more or less supported, the @code{WORK} identifier should not be an extended identifier, since the
filesystem may prevent it from working correctly (due to case sensitivity or forbidden characters in filenames).

@cartouche
@quotation Attention 
@cite{VHDL} rules forbid you from adding units to the @code{std} library.
Furthermore, you should not put units in the @code{ieee} library.
@end quotation
@end cartouche

@cartouche
@quotation Hint 
Since 849a25e0@footnote{https://github.com/ghdl/ghdl/commit/849a25e02cfb359e3d9313060156b0643495548b}, this option can
be alternatively provided to several commands by prepending the library name to the top unit name.
See, for instance, @ref{96,,-e}.
@end quotation
@end cartouche
@end deffn

@geindex ghdl command line option; --workdir
@anchor{using/InvokingGHDL cmdoption-ghdl-workdir}@anchor{a7}
@deffn {Option} @w{-}@w{-}workdir=<DIR>

Specify the directory where the @code{WORK} library is located.
When this option is not present, the @code{WORK} library is in the current directory.
The object files created by the compiler are always placed in the same directory as the @code{WORK} library.

Use option @ref{91,,-P} to specify where libraries other than @code{WORK} are placed.
@end deffn

@geindex ghdl command line option; --std
@anchor{using/InvokingGHDL cmdoption-ghdl-std}@anchor{8c}
@deffn {Option} @w{-}@w{-}std=<STANDARD>

Specify the standard to use. By default, the standard is @code{93c}, which means VHDL-93 with relaxed rules.
For details on @code{STANDARD} values see section @ref{8b,,VHDL standards}.

@cartouche
@quotation Important 
This option resets the effect of @ref{e2,,-frelaxed}, so it should be the first option.
@end quotation
@end cartouche
@end deffn

@geindex ghdl command line option; -fsynopsys
@anchor{using/InvokingGHDL cmdoption-ghdl-fsynopsys}@anchor{e3}
@deffn {Option} @w{-}fsynopsys

Allow the use of synopsys non-standard packages (@code{std_logic_arith}, @code{std_logic_signed}, @code{std_logic_unsigned},
@code{std_logic_textio}).
These packages are present in the ieee library but without this option it’s an error to use them.

The synopsys packages were created by some companies, and are popular.
However they are not standard packages, and have been placed in the @cite{IEEE} library without the permission from the
@code{ieee}.
@end deffn

@geindex ghdl command line option; --ieee
@anchor{using/InvokingGHDL cmdoption-ghdl-ieee}@anchor{8d}
@deffn {Option} @w{-}@w{-}ieee=<IEEE_VAR>

@geindex ieee library

@geindex synopsys library

Select the @code{IEEE} library to use. @code{IEEE_VAR} must be one of:


@table @asis

@item none

Do not supply an @cite{IEEE} library. Any library clause with the @code{IEEE} identifier will fail, unless you have created
your own library with the @cite{IEEE} name.

@item standard

Supply an @cite{IEEE} library containing only packages defined by @code{ieee} standards.
Currently, there are the multivalue logic system package @code{std_logic_1164} defined by IEEE 1164, the synthesis
packages @code{numeric_bit} and @code{numeric_std} defined by IEEE 1076.3, and the @code{vital} packages @code{vital_timing} and
@code{vital_primitives}, defined by IEEE 1076.4.
The version of these packages is defined by the VHDL standard used.
See section @ref{e4,,VITAL packages}, for more details.

@item synopsys

This option is now deprecated.
It is equivalent to @code{--ieee=standard} and @code{-fsynopsys}.
@end table

To avoid errors, you must use the same @cite{IEEE} library for all units of your design, and during elaboration.
@end deffn

@geindex ghdl command line option; -P
@anchor{using/InvokingGHDL cmdoption-ghdl-P}@anchor{91}@anchor{using/InvokingGHDL cmdoption-ghdl-p}@anchor{e5}
@deffn {Option} @w{-}P<DIRECTORY>

Add @cite{DIRECTORY} to the end of the list of directories to be searched for library files.
A library is searched in @cite{DIRECTORY} and also in @cite{DIRECTORY/LIB/vVV} (where @cite{LIB} is the name of the library and @cite{VV}
the vhdl standard).

The @cite{WORK} library is always searched in the path specified by the @ref{a7,,--workdir} option, or in the current
directory if the latter option is not specified.
@end deffn

@geindex ghdl command line option; -fexplicit
@anchor{using/InvokingGHDL cmdoption-ghdl-fexplicit}@anchor{8e}
@deffn {Option} @w{-}fexplicit

When two operators are overloaded, give preference to the explicit declaration.
This may be used to avoid the most common pitfall of the @code{std_logic_arith} package.
See section @ref{71,,IEEE library pitfalls}, for an example.
@end deffn

@cartouche
@quotation Warning 
This option is not set by default.
We don’t think this option is a good feature, because it breaks the encapsulation rule.
When set, an operator can be silently overridden in another package.
You’d do better to fix your design and use the @code{numeric_std} package.
@end quotation
@end cartouche

@geindex ghdl command line option; -frelaxed
@anchor{using/InvokingGHDL cmdoption-ghdl-frelaxed}@anchor{e2}
@deffn {Option} @w{-}frelaxed
@end deffn

@geindex ghdl command line option; -frelaxed-rules
@anchor{using/InvokingGHDL cmdoption-ghdl-frelaxed-rules}@anchor{8f}
@deffn {Option} @w{-}frelaxed@w{-}rules

@cartouche
@quotation Important 
The effects of this option are reset by @ref{8c,,--std}, so it should be placed `after' that option.
@end quotation
@end cartouche

Slightly relax some rules to be compatible with various other simulators or synthesizers:


@itemize *

@item 
VHDL-87 file declarations are accepted;

@item 
Default binding indication rules of VHDL-02 are used. Default binding rules are often used, but they are
particularly obscure before VHDL-02.

@item 
Allow a subprogram body to match its declaration when the argument lists are semantically identical but
do not satisfy formal rules (e.g when a function declaration uses the keyword @code{in} for an
argument but its body does not).

@item 
Within an object declaration, allow references to the name (which references the hidden declaration).
This ignores the error in the following code:

@example
package pkg1 is
  type state is (state1, state2, state3);
end pkg1;

use work.pkg1.all;
package pkg2 is
  constant state1 : state := state1;
end pkg2;
@end example

Some code (such as Xilinx packages) have such constructs, which are invalid.

(The scope of the @code{state1} constant starts at the @cite{constant} keyword.
Because the constant @code{state1} and the enumeration literal @code{state1} are homographs, the enumeration literal is
hidden in the immediate scope of the constant).
@end itemize

This option also relaxes the rules about pure functions.
Violations result in warnings instead of errors.
@end deffn

@geindex ghdl command line option; -fpsl
@anchor{using/InvokingGHDL cmdoption-ghdl-fpsl}@anchor{e6}
@deffn {Option} @w{-}fpsl

Enable parsing of PSL assertions within comments.
See section @ref{e7,,PSL support} for more details.
@end deffn

@geindex ghdl command line option; --mb-comments
@geindex ghdl command line option; -C
@anchor{using/InvokingGHDL cmdoption-ghdl-mb-comments}@anchor{95}@anchor{using/InvokingGHDL cmdoption-ghdl-C}@anchor{e8}
@deffn {Option} @w{-}@w{-}mb@w{-}comments, @w{-}C

Allow UTF8 or multi-bytes chars in a comment.

According to the VHDL standards before 2002, the only characters allowed in a source file (and that includes the
comments) are the graphical characters of the ISO 8859-1 character set.
This is incompatible with comments using UTF-8 or some other encoding.
This option lift this restriction.
@end deffn

@geindex ghdl command line option; --syn-binding
@anchor{using/InvokingGHDL cmdoption-ghdl-syn-binding}@anchor{e9}
@deffn {Option} @w{-}@w{-}syn@w{-}binding

Use synthesizer rules for component binding.
During elaboration, if a component is not bound to an entity using VHDL LRM rules, try to find in any known library an
entity whose name is the same as the component name.

This rule is known as the synthesizer rule.

There are two key points: normal VHDL LRM rules are tried first and entities are searched only in known libraries.
A known library is a library which has been named in your design.

This option is only useful during elaboration.
@end deffn

@geindex ghdl command line option; --format
@anchor{using/InvokingGHDL cmdoption-ghdl-format}@anchor{ea}
@deffn {Option} @w{-}@w{-}format=<FORMAT>

Define the output format of some options, such as @ref{eb,,--pp-html} or @ref{ec,,--xref-html}.


@itemize *

@item 
By default or when @ref{ea,,--format=html2} is specified, generated files follow the HTML 2.0 standard,
and colours are specified with @cite{<FONT>} tags.
However, colours are hard-coded.

@item 
If @ref{ea,,--format=css} is specified, generated files follow the HTML 4.0 standard, and use the CSS-1
file @code{ghdl.css} to specify colours.
This file is generated only if it does not already exist (it is never overwritten) and can be customized by the user
to change colours or appearance.
Refer to a generated file and its comments for more information.
@end itemize
@end deffn

@geindex ghdl command line option; --no-vital-checks
@anchor{using/InvokingGHDL cmdoption-ghdl-no-vital-checks}@anchor{ed}
@deffn {Option} @w{-}@w{-}no@w{-}vital@w{-}checks
@end deffn

@geindex ghdl command line option; --vital-checks
@anchor{using/InvokingGHDL cmdoption-ghdl-vital-checks}@anchor{ee}
@deffn {Option} @w{-}@w{-}vital@w{-}checks

Disable or enable checks of restriction on VITAL units. Checks are enabled by default.

Checks are performed only when a design unit is decorated by a VITAL attribute.
The VITAL attributes are @code{VITAL_Level0} and @code{VITAL_Level1}, both declared in the @code{ieee.VITAL_Timing} package.

Currently, VITAL checks are only partially implemented.
See section @ref{ef,,VHDL restrictions for VITAL} for more details.
@end deffn

@geindex ghdl command line option; --PREFIX
@anchor{using/InvokingGHDL cmdoption-ghdl-PREFIX}@anchor{c3}@anchor{using/InvokingGHDL cmdoption-ghdl-prefix}@anchor{f0}
@deffn {Option} @w{-}@w{-}PREFIX=<PATH>

Use @code{PATH} as the prefix path to find commands and pre-installed (@code{std} and @code{ieee}) libraries.
@end deffn

@geindex ghdl command line option; -v
@anchor{using/InvokingGHDL cmdoption-ghdl-v}@anchor{f1}
@deffn {Option} @w{-}v

Be verbose. For example, for analysis, elaboration and make commands, GHDL displays the commands executed.
@end deffn

@geindex ghdl command line option; -o
@anchor{using/InvokingGHDL cmdoption-ghdl-o}@anchor{f2}
@deffn {Option} @w{-}o=<FNAME>

All the commands that perform a link (@ref{96,,-e}, @ref{d1,,--elab-run}, @ref{f3,,--link}, @ref{d5,,-c},
@ref{d9,,-m}, etc.) support overriding the location and name of the generated artifact.
@end deffn

@geindex ghdl command line option; --time-resolution
@anchor{using/InvokingGHDL cmdoption-ghdl-time-resolution}@anchor{f4}
@deffn {Option} @w{-}@w{-}time@w{-}resolution=<UNIT>

@cartouche
@quotation Attention 
This feature is supported with `mcode' backend only.
It is not possible to support it with either LLVM or GCC backends, because it needs to apply globally.
@end quotation
@end cartouche

Set the base time resolution of the simulation.
This option is supported in commands @ref{c8,,-a} and @ref{97,,-r} only.
Allowed values are @code{auto} (default), @code{fs}, @code{ps}, @code{ns}, @code{us}, @code{ms} or @code{sec}.
With LLVM/GCC, the value is fixed to @code{fs}.

@cartouche
@quotation Hint 
When overriding the time resolution, all the time units that are used in the design must be larger.
Using units below the resolution will produce a failure.
@end quotation
@end cartouche
@end deffn

@node Warnings,Diagnostics Control,Options,Invoking GHDL
@anchor{using/InvokingGHDL warnings}@anchor{f5}
@section Warnings


Some constructions are not erroneous but dubious.
Warnings are diagnostic messages that report such constructions.
Some warnings are reported only during analysis, others during elaboration.

@cartouche
@quotation Hint 
You could disable a warning by using the @code{--warn-no-XXX} or @code{-Wno-XXX} instead of @code{--warn-XXX} or @code{-WXXX}.
@end quotation
@end cartouche

@cartouche
@quotation Hint 
The warnings @code{-Wbinding}, @code{-Wlibrary}, @code{-Wshared}, @code{-Wpure}, @code{-Wspecs}, @code{-Whide}, @code{-Wport} are enabled
by default.
@end quotation
@end cartouche

@geindex ghdl command line option; --warn-library
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-library}@anchor{f6}
@deffn {Option} @w{-}@w{-}warn@w{-}library
@end deffn

@geindex ghdl command line option; -Wlibrary
@anchor{using/InvokingGHDL cmdoption-ghdl-Wlibrary}@anchor{f7}@anchor{using/InvokingGHDL cmdoption-ghdl-wlibrary}@anchor{f8}
@deffn {Option} @w{-}Wlibrary

Warns if a design unit replaces another design unit with the same name.
@end deffn

@geindex ghdl command line option; --warn-default-binding
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-default-binding}@anchor{f9}
@deffn {Option} @w{-}@w{-}warn@w{-}default@w{-}binding
@end deffn

@geindex ghdl command line option; -Wdefault-binding
@anchor{using/InvokingGHDL cmdoption-ghdl-Wdefault-binding}@anchor{fa}@anchor{using/InvokingGHDL cmdoption-ghdl-wdefault-binding}@anchor{fb}
@deffn {Option} @w{-}Wdefault@w{-}binding

During analyze, warns if a component instantiation has neither
configuration specification nor default binding.  This may be useful
if you want to detect during analyze possibly unbound components if
you don’t use configuration.  See section @ref{8b,,VHDL standards} for
more details about default binding rules.
@end deffn

@geindex ghdl command line option; --warn-binding
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-binding}@anchor{fc}
@deffn {Option} @w{-}@w{-}warn@w{-}binding
@end deffn

@geindex ghdl command line option; -Wbinding
@anchor{using/InvokingGHDL cmdoption-ghdl-Wbinding}@anchor{fd}@anchor{using/InvokingGHDL cmdoption-ghdl-wbinding}@anchor{fe}
@deffn {Option} @w{-}Wbinding

During elaboration, warns if a component instantiation is not bound
(and not explicitly left unbound).  Also warns if a port of an
entity is not bound in a configuration specification or in a
component configuration.  This warning is enabled by default, since
default binding rules are somewhat complex and an unbound component
is most often unexpected.

However, warnings are still emitted if a component instantiation is
inside a generate statement.  As a consequence, if you use the
conditional generate statement to select a component according to
the implementation, you will certainly get warnings.
@end deffn

@geindex ghdl command line option; --warn-port
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-port}@anchor{ff}
@deffn {Option} @w{-}@w{-}warn@w{-}port
@end deffn

@geindex ghdl command line option; -Wport
@anchor{using/InvokingGHDL cmdoption-ghdl-Wport}@anchor{100}@anchor{using/InvokingGHDL cmdoption-ghdl-wport}@anchor{101}
@deffn {Option} @w{-}Wport

Emit a warning on unconnected input port without defaults (in
relaxed mode).
@end deffn

@geindex ghdl command line option; --warn-reserved
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-reserved}@anchor{102}
@deffn {Option} @w{-}@w{-}warn@w{-}reserved
@end deffn

@geindex ghdl command line option; -Wreserved
@anchor{using/InvokingGHDL cmdoption-ghdl-Wreserved}@anchor{103}@anchor{using/InvokingGHDL cmdoption-ghdl-wreserved}@anchor{104}
@deffn {Option} @w{-}Wreserved

Emit a warning if an identifier is a reserved word in a later VHDL standard.
@end deffn

@geindex ghdl command line option; --warn-pragma
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-pragma}@anchor{105}
@deffn {Option} @w{-}@w{-}warn@w{-}pragma
@end deffn

@geindex ghdl command line option; -Wpragma
@anchor{using/InvokingGHDL cmdoption-ghdl-Wpragma}@anchor{106}@anchor{using/InvokingGHDL cmdoption-ghdl-wpragma}@anchor{107}
@deffn {Option} @w{-}Wpragma

Emit a warning for unknown pragma
@end deffn

@geindex ghdl command line option; --warn-nested-comment
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-nested-comment}@anchor{108}
@deffn {Option} @w{-}@w{-}warn@w{-}nested@w{-}comment
@end deffn

@geindex ghdl command line option; -Wnested-comment
@anchor{using/InvokingGHDL cmdoption-ghdl-Wnested-comment}@anchor{109}@anchor{using/InvokingGHDL cmdoption-ghdl-wnested-comment}@anchor{10a}
@deffn {Option} @w{-}Wnested@w{-}comment

Emit a warning if a @code{/*} appears within a block comment (vhdl 2008).
@end deffn

@geindex ghdl command line option; --warn-directive
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-directive}@anchor{10b}
@deffn {Option} @w{-}@w{-}warn@w{-}directive
@end deffn

@geindex ghdl command line option; -Wdirective
@anchor{using/InvokingGHDL cmdoption-ghdl-Wdirective}@anchor{10c}@anchor{using/InvokingGHDL cmdoption-ghdl-wdirective}@anchor{10d}
@deffn {Option} @w{-}Wdirective

Emit an option on tool directive
@end deffn

@geindex ghdl command line option; --warn-parenthesis
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-parenthesis}@anchor{10e}
@deffn {Option} @w{-}@w{-}warn@w{-}parenthesis
@end deffn

@geindex ghdl command line option; -Wparenthesis
@anchor{using/InvokingGHDL cmdoption-ghdl-Wparenthesis}@anchor{10f}@anchor{using/InvokingGHDL cmdoption-ghdl-wparenthesis}@anchor{110}
@deffn {Option} @w{-}Wparenthesis

Emit a warning in case of weird use of parentheses.
@end deffn

@geindex ghdl command line option; --warn-vital-generic
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-vital-generic}@anchor{111}
@deffn {Option} @w{-}@w{-}warn@w{-}vital@w{-}generic
@end deffn

@geindex ghdl command line option; -Wvital-generic
@anchor{using/InvokingGHDL cmdoption-ghdl-Wvital-generic}@anchor{112}@anchor{using/InvokingGHDL cmdoption-ghdl-wvital-generic}@anchor{113}
@deffn {Option} @w{-}Wvital@w{-}generic

Warns if a generic name of a vital entity is not a vital generic name. This
is set by default.
@end deffn

@geindex ghdl command line option; --warn-delayed-checks
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-delayed-checks}@anchor{114}
@deffn {Option} @w{-}@w{-}warn@w{-}delayed@w{-}checks
@end deffn

@geindex ghdl command line option; -Wdelayed-checks
@anchor{using/InvokingGHDL cmdoption-ghdl-Wdelayed-checks}@anchor{115}@anchor{using/InvokingGHDL cmdoption-ghdl-wdelayed-checks}@anchor{116}
@deffn {Option} @w{-}Wdelayed@w{-}checks

Warns for checks that cannot be done during analysis time and are
postponed to elaboration time.  This is because not all procedure
bodies are available during analysis (either because a package body
has not yet been analysed or because @cite{GHDL} doesn’t read not
required package bodies).

These are checks for no wait statements in a procedure called in a
sensitized process and checks for pure rules of a function.
@end deffn

@geindex ghdl command line option; --warn-body
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-body}@anchor{117}
@deffn {Option} @w{-}@w{-}warn@w{-}body
@end deffn

@geindex ghdl command line option; -Wbody
@anchor{using/InvokingGHDL cmdoption-ghdl-Wbody}@anchor{118}@anchor{using/InvokingGHDL cmdoption-ghdl-wbody}@anchor{119}
@deffn {Option} @w{-}Wbody

Emit a warning if a package body which is not required is
analyzed. If a package does not declare a subprogram or a deferred
constant, the package does not require a body.
@end deffn

@geindex ghdl command line option; --warn-specs
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-specs}@anchor{11a}
@deffn {Option} @w{-}@w{-}warn@w{-}specs
@end deffn

@geindex ghdl command line option; -Wspecs
@anchor{using/InvokingGHDL cmdoption-ghdl-Wspecs}@anchor{11b}@anchor{using/InvokingGHDL cmdoption-ghdl-wspecs}@anchor{11c}
@deffn {Option} @w{-}Wspecs

Emit a warning if an all or others specification does not apply.
@end deffn

@geindex ghdl command line option; --warn-universal
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-universal}@anchor{11d}
@deffn {Option} @w{-}@w{-}warn@w{-}universal
@end deffn

@geindex ghdl command line option; -Wuniversal
@anchor{using/InvokingGHDL cmdoption-ghdl-Wuniversal}@anchor{11e}@anchor{using/InvokingGHDL cmdoption-ghdl-wuniversal}@anchor{11f}
@deffn {Option} @w{-}Wuniversal

Emit a warning on incorrect use of universal values.
@end deffn

@geindex ghdl command line option; --warn-port-bounds
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-port-bounds}@anchor{120}
@deffn {Option} @w{-}@w{-}warn@w{-}port@w{-}bounds
@end deffn

@geindex ghdl command line option; -Wport-bounds
@anchor{using/InvokingGHDL cmdoption-ghdl-Wport-bounds}@anchor{121}@anchor{using/InvokingGHDL cmdoption-ghdl-wport-bounds}@anchor{122}
@deffn {Option} @w{-}Wport@w{-}bounds

Emit a warning on bounds mismatch between the actual and formal in a
scalar port association
@end deffn

@geindex ghdl command line option; --warn-runtime-error
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-runtime-error}@anchor{123}
@deffn {Option} @w{-}@w{-}warn@w{-}runtime@w{-}error
@end deffn

@geindex ghdl command line option; -Wruntime-error
@anchor{using/InvokingGHDL cmdoption-ghdl-Wruntime-error}@anchor{124}@anchor{using/InvokingGHDL cmdoption-ghdl-wruntime-error}@anchor{125}
@deffn {Option} @w{-}Wruntime@w{-}error

Emit a warning in case of runtime error that is detected during analysis.
@end deffn

@geindex ghdl command line option; --warn-delta-cycle
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-delta-cycle}@anchor{126}
@deffn {Option} @w{-}@w{-}warn@w{-}delta@w{-}cycle
@end deffn

@geindex ghdl command line option; -Wdelta-cycle
@anchor{using/InvokingGHDL cmdoption-ghdl-Wdelta-cycle}@anchor{127}@anchor{using/InvokingGHDL cmdoption-ghdl-wdelta-cycle}@anchor{128}
@deffn {Option} @w{-}Wdelta@w{-}cycle

Emit a warning if a signal assignemnt creates a delta cycle in a
postponed process.
@end deffn

@geindex ghdl command line option; --warn-no-wait
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-no-wait}@anchor{129}
@deffn {Option} @w{-}@w{-}warn@w{-}no@w{-}wait
@end deffn

@geindex ghdl command line option; -Wno-wait
@anchor{using/InvokingGHDL cmdoption-ghdl-Wno-wait}@anchor{12a}@anchor{using/InvokingGHDL cmdoption-ghdl-wno-wait}@anchor{12b}
@deffn {Option} @w{-}Wno@w{-}wait

Emit a warning if there is no wait statement in a non-sensitized
process
@end deffn

@geindex ghdl command line option; --warn-shared
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-shared}@anchor{12c}
@deffn {Option} @w{-}@w{-}warn@w{-}shared
@end deffn

@geindex ghdl command line option; -Wshared
@anchor{using/InvokingGHDL cmdoption-ghdl-Wshared}@anchor{12d}@anchor{using/InvokingGHDL cmdoption-ghdl-wshared}@anchor{12e}
@deffn {Option} @w{-}Wshared

Emit a warning when a shared variable is declared and its type it
not a protected type.
@end deffn

@geindex ghdl command line option; --warn-hide
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-hide}@anchor{12f}
@deffn {Option} @w{-}@w{-}warn@w{-}hide
@end deffn

@geindex ghdl command line option; -Whide
@anchor{using/InvokingGHDL cmdoption-ghdl-Whide}@anchor{130}@anchor{using/InvokingGHDL cmdoption-ghdl-whide}@anchor{131}
@deffn {Option} @w{-}Whide

Emit a warning when a declaration hides a previous hide.
@end deffn

@geindex ghdl command line option; --warn-unused
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-unused}@anchor{132}
@deffn {Option} @w{-}@w{-}warn@w{-}unused
@end deffn

@geindex ghdl command line option; -Wunused
@anchor{using/InvokingGHDL cmdoption-ghdl-Wunused}@anchor{133}@anchor{using/InvokingGHDL cmdoption-ghdl-wunused}@anchor{134}
@deffn {Option} @w{-}Wunused

Emit a warning when a subprogram is never used.
@end deffn

@geindex ghdl command line option; --warn-nowrite
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-nowrite}@anchor{135}
@deffn {Option} @w{-}@w{-}warn@w{-}nowrite
@end deffn

@geindex ghdl command line option; -Wnowrite
@anchor{using/InvokingGHDL cmdoption-ghdl-Wnowrite}@anchor{136}@anchor{using/InvokingGHDL cmdoption-ghdl-wnowrite}@anchor{137}
@deffn {Option} @w{-}Wnowrite

Emit a warning if a variable or a signal is never assigned (only for synthesis).
@end deffn

@geindex ghdl command line option; --warn-others
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-others}@anchor{138}
@deffn {Option} @w{-}@w{-}warn@w{-}others
@end deffn

@geindex ghdl command line option; -Wothers
@anchor{using/InvokingGHDL cmdoption-ghdl-Wothers}@anchor{139}@anchor{using/InvokingGHDL cmdoption-ghdl-wothers}@anchor{13a}
@deffn {Option} @w{-}Wothers

Emit a warning is an @cite{others} choice is not required because all the choices have been explicitly covered.
@end deffn

@geindex ghdl command line option; --warn-pure
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-pure}@anchor{13b}
@deffn {Option} @w{-}@w{-}warn@w{-}pure
@end deffn

@geindex ghdl command line option; -Wpure
@anchor{using/InvokingGHDL cmdoption-ghdl-Wpure}@anchor{13c}@anchor{using/InvokingGHDL cmdoption-ghdl-wpure}@anchor{13d}
@deffn {Option} @w{-}Wpure

Emit a warning when a pure rules is violated (like declaring a pure function with access parameters).
@end deffn

@geindex ghdl command line option; --warn-analyze-assert
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-analyze-assert}@anchor{13e}
@deffn {Option} @w{-}@w{-}warn@w{-}analyze@w{-}assert
@end deffn

@geindex ghdl command line option; -Wanalyze-assert
@anchor{using/InvokingGHDL cmdoption-ghdl-Wanalyze-assert}@anchor{13f}@anchor{using/InvokingGHDL cmdoption-ghdl-wanalyze-assert}@anchor{140}
@deffn {Option} @w{-}Wanalyze@w{-}assert

Emit a warning for assertions that are statically evaluated during
analysis.
@end deffn

@geindex ghdl command line option; --warn-attribute
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-attribute}@anchor{141}
@deffn {Option} @w{-}@w{-}warn@w{-}attribute
@end deffn

@geindex ghdl command line option; -Wattribute
@anchor{using/InvokingGHDL cmdoption-ghdl-Wattribute}@anchor{142}@anchor{using/InvokingGHDL cmdoption-ghdl-wattribute}@anchor{143}
@deffn {Option} @w{-}Wattribute

Emit a warning on incorrect use of attributes.
@end deffn

@geindex ghdl command line option; --warn-useless
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-useless}@anchor{144}
@deffn {Option} @w{-}@w{-}warn@w{-}useless
@end deffn

@geindex ghdl command line option; -Wuseless
@anchor{using/InvokingGHDL cmdoption-ghdl-Wuseless}@anchor{145}@anchor{using/InvokingGHDL cmdoption-ghdl-wuseless}@anchor{146}
@deffn {Option} @w{-}Wuseless

Emit a warning on useless code (like conditions that are always
false or true, assertions that cannot be triggered).
@end deffn

@geindex ghdl command line option; --warn-no-assoc
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-no-assoc}@anchor{147}
@deffn {Option} @w{-}@w{-}warn@w{-}no@w{-}assoc
@end deffn

@geindex ghdl command line option; -Wno-assoc
@anchor{using/InvokingGHDL cmdoption-ghdl-Wno-assoc}@anchor{148}@anchor{using/InvokingGHDL cmdoption-ghdl-wno-assoc}@anchor{149}
@deffn {Option} @w{-}Wno@w{-}assoc

Emit a warning on missing association for a port association.  Open
associations are required.
@end deffn

@geindex ghdl command line option; --warn-static
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-static}@anchor{14a}
@deffn {Option} @w{-}@w{-}warn@w{-}static
@end deffn

@geindex ghdl command line option; -Wstatic
@anchor{using/InvokingGHDL cmdoption-ghdl-Wstatic}@anchor{14b}@anchor{using/InvokingGHDL cmdoption-ghdl-wstatic}@anchor{14c}
@deffn {Option} @w{-}Wstatic

Emit a warning when a non-static expression is used at a place where the standard requires a static expression.
@end deffn

@geindex ghdl command line option; --warn-error
@anchor{using/InvokingGHDL cmdoption-ghdl-warn-error}@anchor{14d}
@deffn {Option} @w{-}@w{-}warn@w{-}error
@end deffn

@geindex ghdl command line option; --warn-error
@anchor{using/InvokingGHDL cmdoption-ghdl-0}@anchor{14e}
@deffn {Option} @w{-}@w{-}warn@w{-}error=<warning>
@end deffn

@geindex ghdl command line option; -Werror
@anchor{using/InvokingGHDL cmdoption-ghdl-Werror}@anchor{14f}@anchor{using/InvokingGHDL cmdoption-ghdl-werror}@anchor{150}
@deffn {Option} @w{-}Werror
@end deffn

@geindex ghdl command line option; -Werror
@anchor{using/InvokingGHDL cmdoption-ghdl-1}@anchor{151}
@deffn {Option} @w{-}Werror=<warning>
@end deffn

@geindex ghdl command line option; -Wno-error
@anchor{using/InvokingGHDL cmdoption-ghdl-Wno-error}@anchor{152}@anchor{using/InvokingGHDL cmdoption-ghdl-wno-error}@anchor{153}
@deffn {Option} @w{-}Wno@w{-}error=<warning>

When this option is set, warnings are considered as errors.  With
the parameter, only the specific warning is turned into an error.
@end deffn

@node Diagnostics Control,Library commands,Warnings,Invoking GHDL
@anchor{using/InvokingGHDL diagnostics-control}@anchor{154}
@section Diagnostics Control


@geindex ghdl command line option; -fcolor-diagnostics
@anchor{using/InvokingGHDL cmdoption-ghdl-fcolor-diagnostics}@anchor{155}
@deffn {Option} @w{-}fcolor@w{-}diagnostics
@end deffn

@geindex ghdl command line option; -fno-color-diagnostics
@anchor{using/InvokingGHDL cmdoption-ghdl-fno-color-diagnostics}@anchor{156}
@deffn {Option} @w{-}fno@w{-}color@w{-}diagnostics

Control whether diagnostic messages are displayed in color. The
default is on when the standard output is a terminal.  For
compatibility with other tools, when colors are enabled the
diagnostic level is always displayed.  When colors are not enabled,
level @code{error} is not displayed.
@end deffn

@geindex ghdl command line option; -fdiagnostics-show-option
@anchor{using/InvokingGHDL cmdoption-ghdl-fdiagnostics-show-option}@anchor{157}
@deffn {Option} @w{-}fdiagnostics@w{-}show@w{-}option
@end deffn

@geindex ghdl command line option; -fno-diagnostics-show-option
@anchor{using/InvokingGHDL cmdoption-ghdl-fno-diagnostics-show-option}@anchor{158}
@deffn {Option} @w{-}fno@w{-}diagnostics@w{-}show@w{-}option

Control whether the warning option is displayed at the end of warning messages, so that the user can easily know how
to disable it.
@end deffn

@geindex ghdl command line option; -fcaret-diagnostics
@anchor{using/InvokingGHDL cmdoption-ghdl-fcaret-diagnostics}@anchor{159}
@deffn {Option} @w{-}fcaret@w{-}diagnostics
@end deffn

@geindex ghdl command line option; -fno-caret-diagnostics
@anchor{using/InvokingGHDL cmdoption-ghdl-fno-caret-diagnostics}@anchor{15a}
@deffn {Option} @w{-}fno@w{-}caret@w{-}diagnostics

Control whether the source line of the error is displayed with a caret indicating the column of the error.
@end deffn

@node Library commands,VPI/VHPI build commands,Diagnostics Control,Invoking GHDL
@anchor{using/InvokingGHDL library-commands}@anchor{15b}
@section Library commands

@anchor{using/InvokingGHDL create-a-library}@anchor{15c}
@geindex create your own library

A new library is created implicitly, by compiling entities (packages etc.) into it:
@code{ghdl -a --work=my_custom_lib my_file.vhdl}.

A library’s source code is usually stored and compiled into its own
directory, that you specify with the @ref{a7,,--workdir} option:
@code{ghdl -a --work=my_custom_lib --workdir=my_custom_libdir
my_custom_lib_srcdir/my_file.vhdl}.  See also the @ref{91,,-P}
command line option.

Furthermore, GHDL provides a few commands which act on a library:

@geindex cmd library directory

@geindex ghdl command line option; --dir
@anchor{using/InvokingGHDL cmdoption-ghdl-dir}@anchor{15d}
@deffn {Option} @w{-}@w{-}dir <[options...] [libs]>
@end deffn

Displays the content of the design libraries (by default the @code{work} library).
All options are allowed, but only a few are meaningful: @ref{90,,--work}, @ref{a7,,--workdir} and @ref{8c,,--std}.

@geindex cmd library clean
@anchor{using/InvokingGHDL clean-command}@anchor{ab}
@geindex ghdl command line option; --clean
@anchor{using/InvokingGHDL cmdoption-ghdl-clean}@anchor{15e}
@deffn {Option} @w{-}@w{-}clean <[options...]>
@end deffn

Try to remove any object, executable or temporary file it could have created.
Source files are not removed.
The library is kept.

@geindex cmd library remove
@anchor{using/InvokingGHDL remove-command}@anchor{ac}
@geindex ghdl command line option; --remove
@anchor{using/InvokingGHDL cmdoption-ghdl-remove}@anchor{15f}
@deffn {Option} @w{-}@w{-}remove <[options...]>
@end deffn

Acts like the clean command but removes the library too.
Note that after removing a design library, the files are not known anymore by GHDL.

@geindex cmd library copy

@geindex ghdl command line option; --copy
@anchor{using/InvokingGHDL cmdoption-ghdl-copy}@anchor{160}
@deffn {Option} @w{-}@w{-}copy <@w{-}@w{-}work=name [options...]>
@end deffn

Make a local copy of an existing library.
This is very useful if you want to add units to the @code{ieee} library:

@example
ghdl --copy --work=ieee --ieee=synopsys
ghdl -a --work=ieee numeric_unsigned.vhd
@end example

@node VPI/VHPI build commands,IEEE library pitfalls,Library commands,Invoking GHDL
@anchor{using/InvokingGHDL vpi-build-commands}@anchor{161}@anchor{using/InvokingGHDL vpi-vhpi-build-commands}@anchor{162}
@section VPI/VHPI build commands


These commands simplify the compile and the link of a user VPI or VHPI module.
They are all wrappers: the arguments are in fact a whole command line that is executed with additional switches.
Currently a unix-like compiler (like @cite{cc}, @cite{gcc} or @cite{clang}) is expected: the additional switches use their syntax.
The only option is @cite{-v} which displays the command before its execution.

@geindex cmd VPI compile

@geindex ghdl command line option; --vpi-compile
@anchor{using/InvokingGHDL cmdoption-ghdl-vpi-compile}@anchor{163}
@deffn {Option} @w{-}@w{-}vpi@w{-}compile <command>
@end deffn

Add an include path to the command and execute it:

@example
ghdl --vpi-compile command
@end example

This will execute:

@example
command -Ixxx/include
@end example

For example, @code{ghdl --vpi-compile gcc -c vpi1.c} executes @code{gcc -c vpi1.c -fPIC -Ixxx/include}.
@anchor{using/InvokingGHDL vpi-link-command}@anchor{164}
@geindex cmd VPI link

@geindex ghdl command line option; --vpi-link
@anchor{using/InvokingGHDL cmdoption-ghdl-vpi-link}@anchor{165}
@deffn {Option} @w{-}@w{-}vpi@w{-}link <command>
@end deffn

Add a library path and name to the command and execute it:

@example
ghdl --vpi-link command
@end example

This will execute:

@example
command -Lxxx/lib -lghdlvpi
@end example

For example, @code{ghdl --vpi-link gcc -o vpi1.vpi vpi1.o} executes @code{gcc -o vpi1.vpi vpi1.o --shared -Lxxx/lib -lghdlvpi}.
@anchor{using/InvokingGHDL vpi-cflags-command}@anchor{166}
@geindex cmd VPI cflags

@geindex ghdl command line option; --vpi-cflags
@anchor{using/InvokingGHDL cmdoption-ghdl-vpi-cflags}@anchor{167}
@deffn {Option} @w{-}@w{-}vpi@w{-}cflags
@end deffn

Display flags added by @ref{163,,--vpi-compile}.

@geindex cmd VPI ldflags

@geindex ghdl command line option; --vpi-ldflags
@anchor{using/InvokingGHDL cmdoption-ghdl-vpi-ldflags}@anchor{168}
@deffn {Option} @w{-}@w{-}vpi@w{-}ldflags
@end deffn

Display flags added by @ref{165,,--vpi-link}.

@geindex cmd VPI include dir

@geindex ghdl command line option; --vpi-include-dir
@anchor{using/InvokingGHDL cmdoption-ghdl-vpi-include-dir}@anchor{169}
@deffn {Option} @w{-}@w{-}vpi@w{-}include@w{-}dir
@end deffn

Display the include directory added by the compile flags.

@geindex cmd VPI library dir

@geindex ghdl command line option; --vpi-library-dir
@anchor{using/InvokingGHDL cmdoption-ghdl-vpi-library-dir}@anchor{16a}
@deffn {Option} @w{-}@w{-}vpi@w{-}library@w{-}dir
@end deffn

Display the library directory added by the link flags.

@geindex ghdl command line option; --vpi-library-dir-unix
@anchor{using/InvokingGHDL cmdoption-ghdl-vpi-library-dir-unix}@anchor{16b}
@deffn {Option} @w{-}@w{-}vpi@w{-}library@w{-}dir@w{-}unix
@end deffn

Display the library directory added by the link flags, forcing UNIX syntax.

@node IEEE library pitfalls,,VPI/VHPI build commands,Invoking GHDL
@anchor{using/InvokingGHDL id1}@anchor{16c}@anchor{using/InvokingGHDL ieee-library-pitfalls}@anchor{71}
@section IEEE library pitfalls


When you use options @ref{8d,,--ieee=synopsys}, the @code{ieee} library contains non standard packages such as
@code{std_logic_arith}.
These packages are not standard because there are not described by an IEEE standard, even if they have been put in the
@cite{IEEE} library.
Furthermore, they are not really de-facto standard, because there are slight differences between the packages of Mentor
and those of Synopsys.
Furthermore, since they are not well thought out, their use has pitfalls.
For example, this description has an error during compilation:

@example
library ieee;
use ieee.std_logic_1164.all;

--  A counter from 0 to 10.
entity counter is
  port (val : out std_logic_vector (3 downto 0);
        ck : std_logic;
        rst : std_logic);
end counter;

library ieee;
use ieee.std_logic_unsigned.all;

architecture bad of counter
is
  signal v : std_logic_vector (3 downto 0);
begin
  process (ck, rst)
  begin
    if rst = '1' then
      v <= x"0";
    elsif rising_edge (ck) then
      if v = "1010" then -- Error
        v <= x"0";
      else
        v <= v + 1;
      end if;
    end if;
  end process;

  val <= v;
end bad;
@end example

When you analyze this design, GHDL does not accept it (two long lines have been split for readability):

@example
ghdl -a --ieee=synopsys bad_counter.vhdl
bad_counter.vhdl:13:14: operator "=" is overloaded
bad_counter.vhdl:13:14: possible interpretations are:
../../libraries/ieee/std_logic_1164.v93:69:5: implicit function "="
    [std_logic_vector, std_logic_vector return boolean]
../../libraries/synopsys/std_logic_unsigned.vhdl:64:5: function "="
    [std_logic_vector, std_logic_vector return boolean]
../translate/ghdldrv/ghdl: compilation error
@end example

Indeed, the @cite{“=”} operator is defined in both packages, and both are visible at the place it is used.
The first declaration is an implicit one, which occurs when the @cite{std_logic_vector} type is declared and is an element to
element comparison.
The second one is an explicit declared function, with the semantics of an unsigned comparison.

With some analysers, the explicit declaration has priority over the implicit declaration, and this design can be
analyzed without error.
However, this is not the rule given by the VHDL LRM, and since GHDL follows these rules, it emits an error.

You can force GHDL to use this rule with the `-fexplicit' option (see @ref{c9,,Options} for further details).
However it is easy to fix this error, by using a selected name:

@example
library ieee;
use ieee.std_logic_unsigned.all;

architecture fixed_bad of counter
is
  signal v : std_logic_vector (3 downto 0);
begin
  process (ck, rst)
  begin
    if rst = '1' then
      v <= x"0";
    elsif rising_edge (ck) then
      if ieee.std_logic_unsigned."=" (v, "1010") then
        v <= x"0";
      else
        v <= v + 1;
      end if;
    end if;
  end process;

  val <= v;
end fixed_bad;
@end example

It is better to only use the standard packages defined by IEEE, which provide the same functionalities:

@example
library ieee;
use ieee.numeric_std.all;

architecture good of counter
is
  signal v : unsigned (3 downto 0);
begin
  process (ck, rst)
  begin
    if rst = '1' then
      v <= x"0";
    elsif rising_edge (ck) then
      if v = "1010" then
        v <= x"0";
      else
        v <= v + 1;
      end if;
    end if;
  end process;

  val <= std_logic_vector (v);
end good;
@end example

@geindex Math_Real

@geindex Math_Complex

@cartouche
@quotation Hint 
The @code{ieee} math packages (@code{math_real} and @code{math_complex}) provided with @cite{GHDL} are fully compliant with the
@cite{IEEE} standard.
@end quotation
@end cartouche

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Simulation runtime,Synthesis,Invoking GHDL,Top
@anchor{using/Simulation doc}@anchor{16d}@anchor{using/Simulation simulation-runtime}@anchor{16e}@anchor{using/Simulation using-simulation}@anchor{ce}
@chapter Simulation (runtime)


@menu
* Simulation options:: 
* Export waveforms:: 
* Export hierarchy and references:: 

@end menu

@node Simulation options,Export waveforms,,Simulation runtime
@anchor{using/Simulation id1}@anchor{16f}@anchor{using/Simulation simulation-options}@anchor{a4}
@section Simulation options


In most system environments, it is possible to pass CLI options while
invoking a program. Contrary to most programming languages, there is no
standard method in VHDL to obtain the arguments or to set the exit
status.
However, the GHDL runtime behaviour can be modified with some options:


@itemize -

@item 
It is possible to pass parameters to your design through the generic
interfaces of the top entity.

@item 
It is also possible to stop simulation after a certain time. The exit
status of the simulation is @code{EXIT_SUCCESS} (@code{0}) if the simulation
completes, or @code{EXIT_FAILURE} (@code{1}) in case of error (assertion
failure, overflow or any constraint error).
@end itemize

Here is the list of the most useful options. For further info, see @ref{170,,Debugging}.

@cartouche
@quotation Hint 
Note that these arguments are represented as @code{simulation_options...} in this documentation.
For analysis/elaboration options, see @ref{69,,Invoking GHDL}.
@end quotation
@end cartouche

@geindex ghdl command line option; -gGENERIC
@anchor{using/Simulation cmdoption-ghdl-gGENERIC}@anchor{171}@anchor{using/Simulation cmdoption-ghdl-ggeneric}@anchor{172}
@deffn {Option} @w{-}gGENERIC=VALUE

Set value @cite{VALUE} to generic with name @cite{GENERIC}.

Example:

@example
$ ghdl -r --std=08 my_unit -gDEPTH=12
@end example

@cartouche
@quotation Note 
This is currently a run option; but in the (not near) future it might be deprecated to
become an elaboration option only. As a result, now you can generate a single binary and
execute it multiple times with different arguments. That might not be possible in the future.

As explained in @ref{96,,-e}, performing a complete elaboration in terms of the LRM requires
to get rid of the compile and link model. This is mostly because delaying certain elaboration
steps to the runtime prevents elaboration-time optimisions.
@end quotation
@end cartouche

@cartouche
@quotation Hint 
Currently, GHDL has limited support for generic types in the CLI. It is suggested to use strings or integers. Nonetheless, project JSON-for-VHDL@footnote{https://github.com/Paebbels/JSON-for-VHDL} allows to encode a set of parameters as stringified JSON, and it provides VHDL functions to read specific values from it. It is valid for synthesis.
@end quotation
@end cartouche
@end deffn

@geindex ghdl command line option; --assert-level
@anchor{using/Simulation cmdoption-ghdl-assert-level}@anchor{aa}
@deffn {Option} @w{-}@w{-}assert@w{-}level=<LEVEL>

Select the assertion level at which an assertion violation stops the
simulation. @cite{LEVEL} is the name from the @cite{severity_level}
enumerated type defined in the @cite{standard} package or the
@code{none} name.

By default, only assertion violation of severity level @code{failure}
stops the simulation.

For example, if @cite{LEVEL} was @code{warning}, any assertion violation
with severity level @code{warning}, @code{error} or @code{failure} would
stop simulation, but the assertion violation at the @code{note} severity
level would only display a message.

Option @ref{aa,,--assert-level=none} prevents any
assertion violation from stopping simulation.
@end deffn

@geindex ghdl command line option; --backtrace-severity
@anchor{using/Simulation cmdoption-ghdl-backtrace-severity}@anchor{173}
@deffn {Option} @w{-}@w{-}backtrace@w{-}severity=<LEVEL>

Select the assertion level at which an assertion violation display a
backtrace (if available).

This is useful when the assertion is generated by a function (like
assertions in @code{ieee.numeric_std}) whose location is not very
useful.
@end deffn

@geindex ghdl command line option; --ieee-asserts
@anchor{using/Simulation cmdoption-ghdl-ieee-asserts}@anchor{174}
@deffn {Option} @w{-}@w{-}ieee@w{-}asserts=<POLICY>
@end deffn

@geindex ghdl command line option; --asserts
@anchor{using/Simulation cmdoption-ghdl-asserts}@anchor{175}
@deffn {Option} @w{-}@w{-}asserts=<POLICY>

Select how assertions are handled.  @cite{POLICY} can be @code{enable} (the
default), @code{disable} which disables all assertions and
@code{disable-at-0} which disables only at the start of simulation.

The @code{--ieee-asserts} applies only to assertions from @code{ieee}
package.  This option can be useful to avoid assertion messages from
@code{ieee.numeric_std} (and other @code{ieee} packages).

The @code{--asserts} option applies to all assertions, including those
from the @code{ieee} units.  The behaviour of the latter can be
overridden by using the @code{--ieee-asserts} option after the
@code{--asserts} option.
@end deffn

@geindex ghdl command line option; --stop-time
@anchor{using/Simulation cmdoption-ghdl-stop-time}@anchor{176}
@deffn {Option} @w{-}@w{-}stop@w{-}time=<TIME>

Stop the simulation after @code{TIME}. @code{TIME} is expressed as a time
value, `without' any space. The time is the simulation time, not
the real clock time.

For example:

@example
$ ./my_design --stop-time=10ns
$ ./my_design --stop-time=ps
@end example
@end deffn

@geindex ghdl command line option; --stop-delta
@anchor{using/Simulation cmdoption-ghdl-stop-delta}@anchor{177}
@deffn {Option} @w{-}@w{-}stop@w{-}delta=<N>

Stop the simulation after @cite{N} delta cycles in the same current
time.  The default is 5000.

@geindex display time
@end deffn

@geindex ghdl command line option; --disp-time
@anchor{using/Simulation cmdoption-ghdl-disp-time}@anchor{178}
@deffn {Option} @w{-}@w{-}disp@w{-}time

Display the time and delta cycle number as simulation advances.
@end deffn

@geindex ghdl command line option; --unbuffered
@anchor{using/Simulation cmdoption-ghdl-unbuffered}@anchor{179}
@deffn {Option} @w{-}@w{-}unbuffered

Disable buffering on stdout, stderr and files opened in write or append mode (TEXTIO).
@end deffn

@geindex ghdl command line option; --max-stack-alloc
@anchor{using/Simulation cmdoption-ghdl-max-stack-alloc}@anchor{17a}
@deffn {Option} @w{-}@w{-}max@w{-}stack@w{-}alloc=<N>

Emit an error message in case of allocation on the stack of an
object larger than @cite{N} KB.  Use 0 to disable these checks.
@end deffn

@geindex ghdl command line option; --sdf
@anchor{using/Simulation cmdoption-ghdl-sdf}@anchor{17b}
@deffn {Option} @w{-}@w{-}sdf=<PATH=FILENAME>

Do VITAL annotation on @cite{PATH} with SDF file @code{FILENAME}.

@cite{PATH} is a path of instances, separated with @code{.} or @code{/}.
Any separator can be used. Instances are component instantiation labels,
generate labels or block labels. Currently, you cannot use an indexed name.

Specifying a delay:

@example
--sdf=min=PATH=FILENAME
--sdf=typ=PATH=FILENAME
--sdf=max=PATH=FILENAME
@end example

If the option contains a type of delay, that is @code{min=},
@code{typ=} or @code{max=}, the annotator use respectively minimum,
typical or maximum values. If the option does not contain a type of delay,
the annotator uses the typical delay.

See section @ref{17c,,Backannotation}, for more details.
@end deffn

@geindex ghdl command line option; --vpi
@anchor{using/Simulation cmdoption-ghdl-vpi}@anchor{17d}
@deffn {Option} @w{-}@w{-}vpi=<FILENAME>

Load VPI library. This option can be used multiple times to load different libraries.

Any registration functions in the @code{vlog_startup_routines} array in the library will be called:

@example
void (*vlog_startup_routines[]) () = @{
  my_handle_register,
  0
@};
@end example
@end deffn

@geindex ghdl command line option; --vpi-trace
@anchor{using/Simulation cmdoption-ghdl-vpi-trace}@anchor{17e}
@deffn {Option} @w{-}@w{-}vpi@w{-}trace[=<FILENAME>]

Trace vpi calls. Trace is printed to @code{FILENAME} if provided, otherwise to stdout.
@end deffn

@geindex ghdl command line option; --vhpi
@anchor{using/Simulation cmdoption-ghdl-vhpi}@anchor{17f}
@deffn {Option} @w{-}@w{-}vhpi=<FILENAME>[:<ENTRYPOINT>]

Load VHPI library. This option can be used multiple times to load different libraries.

If an @code{ENTRYPOINT} registration function is provided, it will be called.
Otherwise, any registration functions in the @code{vhpi_startup_routines} array in the library will be called:

@example
void (*vhpi_startup_routines[])() = @{
  register_foreign_app,
  register_foreign_func,
  0
@};
@end example
@end deffn

@geindex ghdl command line option; --vhpi-trace
@anchor{using/Simulation cmdoption-ghdl-vhpi-trace}@anchor{180}
@deffn {Option} @w{-}@w{-}vhpi@w{-}trace[=<FILENAME>]

Trace vhpi calls. Trace is printed to @code{FILENAME} if provided, otherwise to stdout.
@end deffn

@geindex ghdl command line option; --help
@anchor{using/Simulation cmdoption-ghdl-help}@anchor{181}
@deffn {Option} @w{-}@w{-}help

Display a short description of the options accepted by the runtime library.
@end deffn

@geindex ghdl command line option; --no-run
@anchor{using/Simulation cmdoption-ghdl-no-run}@anchor{cc}
@deffn {Option} @w{-}@w{-}no@w{-}run

Stop the simulation before the first cycle. This option actually elaborates the design, so it will catch any bound error in port maps. See also @ref{96,,-e}.

This may be used with @ref{182,,--disp-tree} to display the tree without simulating the whole design.
@end deffn

@node Export waveforms,Export hierarchy and references,Simulation options,Simulation runtime
@anchor{using/Simulation export-waveforms}@anchor{183}@anchor{using/Simulation export-waves}@anchor{9b}
@section Export waveforms


@cartouche
@quotation Note 
All the waveform formats supported by GHDL are also supported by GTKWave@footnote{http://gtkwave.sourceforge.net/}.
@end quotation
@end cartouche

@geindex ghdl command line option; --read-wave-opt
@anchor{using/Simulation cmdoption-ghdl-read-wave-opt}@anchor{184}
@deffn {Option} @w{-}@w{-}read@w{-}wave@w{-}opt=<FILENAME>

Filter signals to be dumped to the wave file according to the wave option file provided.

Here is a description of the wave option file format currently supported

@example
$ version = 1.1  # Optional

# Path format for signals in packages :
my_pkg.global_signal_a

# Path format for signals in entities :
/top/sub/clk

# Dump every signal named reset in first level sub entities of top
/top/*/reset

# Dump every signal named reset in recursive sub entities of top
/top/**/reset

# Dump every signal of sub2 which could be anywhere in the design except
# on the top level
/**/sub2/*

# Dump every signal of sub3 which must be a first level sub entity of the
# top level
/*/sub3/*

# Dump every signal of the first level sub entities of sub3 (but not
# those of sub3)
/**/sub3/*/*
@end example
@end deffn

@geindex ghdl command line option; --write-wave-opt
@anchor{using/Simulation cmdoption-ghdl-write-wave-opt}@anchor{185}
@deffn {Option} @w{-}@w{-}write@w{-}wave@w{-}opt=<FILENAME>

If the wave option file doesn’t exist, creates it with all the signals of the design.
Otherwise throws an error, because it won’t erase an existing file.
@end deffn

@geindex ghdl command line option; --vcd
@anchor{using/Simulation cmdoption-ghdl-vcd}@anchor{9d}
@deffn {Option} @w{-}@w{-}vcd=<FILENAME>
@end deffn

@geindex ghdl command line option; --vcdgz
@anchor{using/Simulation cmdoption-ghdl-vcdgz}@anchor{9e}
@deffn {Option} @w{-}@w{-}vcdgz=<FILENAME>

@geindex vcd

@geindex value change dump

@geindex dump of signals

Option @ref{9d,,--vcd} dumps into the VCD file @cite{FILENAME} the signal values before each non-delta cycle.
If @cite{FILENAME} is @code{-}, then the standard output is used, otherwise a file is created or overwritten.

The @ref{9e,,--vcdgz} option is the same as the @ref{9d,,--vcd} option, but the output is compressed using the @cite{zlib}
(@cite{gzip} compression).
However, you can’t use the @code{-} filename.
Furthermore, only one VCD file can be written.

`VCD' (value change dump) is a file format defined by the @cite{verilog} standard and used by virtually any wave
viewer.
Since it comes from @cite{verilog}, only a few VHDL types can be dumped.
GHDL dumps only signals whose base type is of the following:


@itemize *

@item 
types defined in the @code{std.standard} package:


@itemize *

@item 
@code{bit}

@item 
@code{bit_vector}
@end itemize

@item 
types defined in the @code{ieee.std_logic_1164} package:


@itemize *

@item 
@code{std_ulogic}

@item 
@code{std_logic} (because it is a subtype of @code{std_ulogic})

@item 
@code{std_ulogic_vector}

@item 
@code{std_logic_vector}
@end itemize

@item 
any integer type
@end itemize

@cartouche
@quotation Note 
It is very unfortunate there is no standard or well-known wave file format supporting VHDL types.
If you are aware of such a free format, please @ref{6e,,let us know}!
@end quotation
@end cartouche
@end deffn

@geindex ghdl command line option; --vcd-nodate
@anchor{using/Simulation cmdoption-ghdl-vcd-nodate}@anchor{186}
@deffn {Option} @w{-}@w{-}vcd@w{-}nodate

Do not write date in the VCD file.
@end deffn

@geindex ghdl command line option; --vcd-4states
@anchor{using/Simulation cmdoption-ghdl-vcd-4states}@anchor{187}
@deffn {Option} @w{-}@w{-}vcd@w{-}4states

Only use the verilog states @code{0/1/x/z} to represent @code{std_ulogic}
values.  The VCD file produced should be fully compatible with any
VCD reader.  The default is to write @code{std_ulogic} as they are (so
keeping states @code{U/W/L/H/-}), which is supported by several VCD readers.
@end deffn

@geindex ghdl command line option; --fst
@anchor{using/Simulation cmdoption-ghdl-fst}@anchor{9f}
@deffn {Option} @w{-}@w{-}fst=<FILENAME>

Write the waveforms into an @cite{fst} file.
The @cite{fst} files are much smaller than VCD or @cite{GHW} files, but it handles only the same signals as the VCD format.
@end deffn

@geindex ghdl command line option; --wave
@anchor{using/Simulation cmdoption-ghdl-wave}@anchor{9c}
@deffn {Option} @w{-}@w{-}wave=<FILENAME>

Write the waveforms into a @ref{4e,,GHDL Waveform (GHW)} file.
Contrary to VCD files, any VHDL type can be dumped into a GHW file.
@end deffn

@node Export hierarchy and references,,Export waveforms,Simulation runtime
@anchor{using/Simulation export-hierarchy-and-references}@anchor{188}
@section Export hierarchy and references


@geindex ghdl command line option; --disp-tree
@anchor{using/Simulation cmdoption-ghdl-disp-tree}@anchor{182}
@deffn {Option} @w{-}@w{-}disp@w{-}tree=<KIND>

@geindex display design hierarchy

Display the design hierarchy as a tree of instantiated design entities.
This may be useful to understand the structure of a complex design.
@cite{KIND} is optional, but if set must be one of:


@itemize *

@item 
@code{none} Do not display hierarchy. Same as if the option was not present.

@item 
@code{inst} Display entities, architectures, instances, blocks and generates statements.

@item 
@code{proc} Like @code{inst} but also display processes.

@item 
@code{port} Like @code{proc} but display ports and signals too.
If @cite{KIND} is not specified, the hierarchy is displayed with the @code{port} mode.
@end itemize
@end deffn

@geindex ghdl command line option; --xref-html
@anchor{using/Simulation cmdoption-ghdl-xref-html}@anchor{ec}
@deffn {Option} @w{-}@w{-}xref@w{-}html [options] files...

To easily navigate through your sources, you may generate cross-references.
This command generates an html file for each @code{file} given in the command line, with syntax highlighting and full
cross-reference: every identifier is a link to its declaration.
An index of the files is created too.

The set of @code{files} are analyzed, and then, if the analysis is successful, html files are generated in the directory
specified by the @code{-o <DIR>} option, or @code{html/} directory by default.
The style of the html file can be modified with the @ref{ea,,--format} option.
@end deffn

@geindex ghdl command line option; --psl-report
@anchor{using/Simulation cmdoption-ghdl-psl-report}@anchor{189}
@deffn {Option} @w{-}@w{-}psl@w{-}report=<FILENAME>

Write a report for PSL at the end of simulation.
For each PSL cover and assert statements, the name, source location and whether it passed or failed is reported.
The file is written using the JSON format, but is still human readable.
@end deffn

@geindex ghdl command line option; --psl-report-uncovered
@anchor{using/Simulation cmdoption-ghdl-psl-report-uncovered}@anchor{18a}
@deffn {Option} @w{-}@w{-}psl@w{-}report@w{-}uncovered

Reports warning for each uncovered PSL cover point when simulation ends.
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Synthesis,Additional Command Reference,Simulation runtime,Top
@anchor{using/Synthesis doc}@anchor{18b}@anchor{using/Synthesis synthesis}@anchor{18c}@anchor{using/Synthesis using-synthesis}@anchor{4d}
@chapter Synthesis


@cartouche
@quotation Warning 
This is experimental and work in progress! If you find crashes or unsupported features, please
@ref{6e,,report them}!
@end quotation
@end cartouche

Since @code{v0.37}, GHDL features a built-in (experimental) synthesis kernel with two backends: @code{synth} and
@code{yosys-plugin}.
Currently, synthesis is supported as a front-end of other synthesis and technology mapping tools.
Hence, the netlists generated by GHDL are not optimised.

@geindex synthesis command

@menu
* Synthesis [--synth]:: 
* Synthesis options:: 
* Yosys plugin:: 

@end menu

@node Synthesis [--synth],Synthesis options,,Synthesis
@anchor{using/Synthesis synth-command}@anchor{18d}@anchor{using/Synthesis synthesis-synth}@anchor{18e}
@section Synthesis [@code{--synth}]


This command is useful for checking that a design can be synthesized, before actually running a complete synthesis
tool. In fact, because this is expected to be much faster, it can be used as a frequent check.

Moreover, since GHDL’s front-end supports multiple versions of the standard, but the synthesised netlists are generated
using a subset of VHDL 1993, GHDL’s synthesis features can be used as a preprocessor with tools that do support older
versions of the standard, but which don’t provide the most recent features.

Currently, the default output is a generic netlist using a (very simple) subset of VHDL 1993.
See @ref{18f,,--out} and #1174@footnote{https://github.com/ghdl/ghdl/issues/1174} for on-going discussion about other output formats.

@geindex ghdl command line option; --synth
@anchor{using/Synthesis cmdoption-ghdl-synth}@anchor{6f}
@deffn {Option} @w{-}@w{-}synth <[options...] [library.]top_unit [arch]>

Elaborates for synthesis the design whose top unit is indicated by @code{[library.]top_unit [arch]}.

@cartouche
@quotation Attention 
All the units must have been analyzed; that is, the artifacts of previously executed @ref{c8,,-a} calls must exist.
@end quotation
@end cartouche
@end deffn

@geindex ghdl command line option; --synth
@anchor{using/Synthesis cmdoption-ghdl-0}@anchor{190}
@deffn {Option} @w{-}@w{-}synth <[options...] file... @w{-}e [top_unit [arch]]>

Analyses and elaborates for synthesis the files present on the command line only.
Elaboration starts from the top unit indicated by @code{[top_unit [arch]]}.
If no top unit is specified, GHDL will try guessing it and a note will be printed.

@cartouche
@quotation Important 
Files can be provided in any order, but @code{-e} must be provided after them.
That is, @code{--synth <[options...] files...>} is NOT supported.
This is because we want to unambiguously tell files and the unit specification apart.
We don’t want to rely on parsing the items and guessing whether we are dealing with files or a top unit name.
In corner cases, a filename might exist which matches the name of a primary unit: @code{ghdl synth name}.
@end quotation
@end cartouche
@end deffn

@node Synthesis options,Yosys plugin,Synthesis [--synth],Synthesis
@anchor{using/Synthesis id1}@anchor{191}@anchor{using/Synthesis synthesis-options}@anchor{192}
@section Synthesis options


@cartouche
@quotation Hint 
Multiple pragmas are supported for preventing blocks of code from being synthesized:

@code{-- pragma|synopsys|synthesis (synthesis|translate)( |_)(on|off)}

For example:


@itemize *

@item 
@code{-- pragma translate off}

@item 
@code{-- synthesis translate_on}

@item 
@code{-- synopsys synthesis_off}
@end itemize
@end quotation
@end cartouche

Due to GHDL’s modular architecture (see @ref{193,,Overview}), the synthesis kernel shares the VHDL parsing front-end
with the simulation back-ends.
Hence, available options for synthesis are the same as for analysis and/or simulation elaboration
(see @ref{c9,,Options}).
In addition to those options, there are some synthesis specific options.

@cartouche
@quotation Tip 
Furthermore there are lot of debug options available.
Beware: these debug options should only used for debugging purposes as they aren’t guaranteed to be stable during
development of GHDL’s synthesis feature.
You can find them in the file ghdlsynth.adb@footnote{https://github.com/ghdl/ghdl/blob/master/src/ghdldrv/ghdlsynth.adb} in the procedure @code{Decode_Option()}.
@end quotation
@end cartouche

@geindex ghdl command line option; -gNAME
@anchor{using/Synthesis cmdoption-ghdl-gNAME}@anchor{194}@anchor{using/Synthesis cmdoption-ghdl-gname}@anchor{195}
@deffn {Option} @w{-}gNAME=VALUE

Override top unit generic @cite{NAME} with value @cite{VALUE}.
Similar to the run-time option @ref{171,,-gGENERIC}.

Example:

@example
$ ghdl --synth --std=08 -gDEPTH=12 [library.]top_unit [arch]
@end example
@end deffn

@geindex ghdl command line option; --out
@anchor{using/Synthesis cmdoption-ghdl-out}@anchor{18f}
@deffn {Option} @w{-}@w{-}out=<vhdl|raw@w{-}vhdl|verilog|dot|none|raw|dump>


@itemize *

@item 
`vhdl' `(default)': equivalent to @code{raw-vhdl}, but the original top-level unit is preserved unmodified, so the
synthesized design can be simulated with the same testbench.

@item 
`raw-vhdl': all statements are converted to a simple VHDL 1993
netlist, for allowing instantiation in other synthesis tools
without modern VHDL support.

@item 
`verilog': generate a verilog netlist.

@item 
`dot': generate a graphviz dot diagram of the netlist AST.

@item 
`none': perform the synthesis, but do not generate any output; useful for frequent checks.

@item 
`raw': print the internal representation of the design, for debugging purposes.

@item 
`dump': similar to @code{raw}, with even more internal details for debugging.
@end itemize
@end deffn

@geindex ghdl command line option; --vendor-library
@anchor{using/Synthesis cmdoption-ghdl-vendor-library}@anchor{196}
@deffn {Option} @w{-}@w{-}vendor@w{-}library=NAME

Any unit from library NAME is a black box.

Example:

@example
$ ghdl --synth --std=08 --vendor-library=vendorlib [library.]top_unit [arch]
@end example
@end deffn

@menu
* Assertions@comma{} PSL and formal verification: Assertions PSL and formal verification. 

@end menu

@node Assertions PSL and formal verification,,,Synthesis options
@anchor{using/Synthesis assertions-psl-and-formal-verification}@anchor{197}
@subsection Assertions, PSL and formal verification


@geindex ghdl command line option; --no-formal
@anchor{using/Synthesis cmdoption-ghdl-no-formal}@anchor{198}
@deffn {Option} @w{-}@w{-}no@w{-}formal

Neither synthesize assert nor PSL.

Example:

@example
$ ghdl --synth --std=08 --no-formal [library.]top_unit [arch]
@end example
@end deffn

@geindex ghdl command line option; --no-assert-cover
@anchor{using/Synthesis cmdoption-ghdl-no-assert-cover}@anchor{199}
@deffn {Option} @w{-}@w{-}no@w{-}assert@w{-}cover

Disable automatic cover PSL assertion activation. If this option isn’t used, GHDL generates
@cite{cover} directives for each @cite{assert} directive (with an implication operator) automatically during synthesis.

Example:

@example
$ ghdl --synth --std=08 --no-assert-cover [library.]top_unit [arch]
@end example
@end deffn

@geindex ghdl command line option; --assert-assumes
@anchor{using/Synthesis cmdoption-ghdl-assert-assumes}@anchor{19a}
@deffn {Option} @w{-}@w{-}assert@w{-}assumes

Treat all PSL asserts like PSL assumes. If this option is used, GHDL generates an @cite{assume} directive
for each @cite{assert} directive during synthesis. This is similar to the @cite{-assert-assumes}
option of Yosys’ read_verilog@footnote{https://yosyshq.net/yosys/cmd_read_verilog.html} command.

Example:

@example
$ ghdl --synth --std=08 --assert-assumes [library.]top_unit [arch]
@end example

As all PSL asserts are treated like PSL assumes, no @cite{cover} directives are automatically generated for them,
regardless of using the @ref{199,,--no-assert-cover} or not.
@end deffn

@geindex ghdl command line option; --assume-asserts
@anchor{using/Synthesis cmdoption-ghdl-assume-asserts}@anchor{19b}
@deffn {Option} @w{-}@w{-}assume@w{-}asserts

Treat all PSL assumes like PSL asserts. If this option is used, GHDL generates an @cite{assert} directive
for each @cite{assume} directive during synthesis. This is similar to the @cite{-assume-asserts}
option of Yosys’ read_verilog@footnote{https://yosyshq.net/yosys/cmd_read_verilog.html} command.

Example:

@example
$ ghdl --synth --std=08 --assume-asserts [library.]top_unit [arch]
@end example

@cite{cover} directives are automatically generated for the resulting asserts (with an implication operator)
if @ref{199,,--no-assert-cover} isn’t used.
@end deffn

@node Yosys plugin,,Synthesis options,Synthesis
@anchor{using/Synthesis synth-plugin}@anchor{70}@anchor{using/Synthesis yosys-plugin}@anchor{19c}
@section Yosys plugin


ghdl-yosys-plugin@footnote{https://github.com/ghdl/ghdl-yosys-plugin} is a module to use GHDL as a VHDL front-end for Yosys Open Synthesis Suite@footnote{https://yosyshq.net/yosys/}, a framework for optimised synthesis and technology mapping.
Artifacts generated by Yosys can be used in multiple open source and vendor tools to achieve P&R, formal verification,
etc. A relevant feature of combining GHDL and Yosys is that mixed-language (VHDL-Verilog) synthesis with open source
tools is possible.

The command line syntax for this plugin is the same as for @ref{6f,,--synth}, except that the command name (@code{--synth})
is neither required nor supported.
Instead, @code{yosys}, @code{yosys -m ghdl} or @code{yosys -m path/to/ghdl.so} need to be used, depending of how is the plugin
built.
See ghdl/ghdl-yosys-plugin: README@footnote{https://github.com/ghdl/ghdl-yosys-plugin} for building and installation
guidelines.

@cartouche
@quotation Hint 
ghdl-yosys-plugin is a thin layer that converts the internal representation of @ref{6f,,--synth} to Yosys’ C API.
Hence, it is suggested to check the designs with @ref{6f,,--synth} before running synthesis with Yosys.
@end quotation
@end cartouche

@menu
* Convert (V)HDL to other formats: Convert V HDL to other formats. 

@end menu

@node Convert V HDL to other formats,,,Yosys plugin
@anchor{using/Synthesis convert-v-hdl-to-other-formats}@anchor{19d}
@subsection Convert (V)HDL to other formats


Yosys provides @code{write_*} commands for generating output netlists in different formats. Therefore, VHDL and/or Verilog
sources can be converted to EDIF, SMT, BTOR2, etc.

@cartouche
@quotation Hint 
For a comprehensive list of supported output formats (AIGER, BLIF, ILANG, JSON…), check out the
Yosys documentation@footnote{https://yosyshq.net/yosys/documentation.html}.
@end quotation
@end cartouche

@menu
* To Verilog:: 
* To EDIF:: 
* To SMT:: 
* To BTOR2:: 
* To FIRRTL:: 
* To VHDL:: 

@end menu

@node To Verilog,To EDIF,,Convert V HDL to other formats
@anchor{using/Synthesis to-verilog}@anchor{19e}
@subsubsection To Verilog


@example
yosys -m ghdl -p 'ghdl filename.vhdl -e top_unit [arch]; write_verilog filename.v'
@end example

@node To EDIF,To SMT,To Verilog,Convert V HDL to other formats
@anchor{using/Synthesis to-edif}@anchor{19f}
@subsubsection To EDIF


@example
yosys -m ghdl -p 'ghdl filename.vhdl -e top_unit [arch]; write_edif filename.edif'
@end example

@node To SMT,To BTOR2,To EDIF,Convert V HDL to other formats
@anchor{using/Synthesis to-smt}@anchor{1a0}
@subsubsection To SMT


@example
yosys -m ghdl -p 'ghdl filename.vhdl -e top_unit [arch]; write_smt2 filename.smt2'
@end example

@node To BTOR2,To FIRRTL,To SMT,Convert V HDL to other formats
@anchor{using/Synthesis to-btor2}@anchor{1a1}
@subsubsection To BTOR2


@example
yosys -m ghdl -p 'ghdl filename.vhdl -e top_unit [arch]; write_btor filename.btor'
@end example

@node To FIRRTL,To VHDL,To BTOR2,Convert V HDL to other formats
@anchor{using/Synthesis to-firrtl}@anchor{1a2}
@subsubsection To FIRRTL


@example
yosys -m ghdl -p 'ghdl filename.vhdl -e top_unit [arch]; write_firrtl filename.firrtl'
@end example

@node To VHDL,,To FIRRTL,Convert V HDL to other formats
@anchor{using/Synthesis to-vhdl}@anchor{1a3}
@subsubsection To VHDL


There is work in progress in ghdl/ghdl-yosys-plugin#122@footnote{https://github.com/ghdl/ghdl-yosys-plugin/pull/122} for adding
a @code{write_vhdl} command to Yosys. That is the complement of what ghdl-yosys-plugin provides.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Additional Command Reference,Implementation of VHDL,Synthesis,Top
@anchor{using/CommandReference doc}@anchor{1a4}@anchor{using/CommandReference additional-command-reference}@anchor{1a5}@anchor{using/CommandReference ref-command}@anchor{6a}
@chapter Additional Command Reference


@cartouche
@quotation Hint 
The most common commands and options are shown in section @ref{69,,Invoking GHDL}.
Here the advanced and experimental features are described.
@end quotation
@end cartouche

@menu
* Environment variables:: 
* Misc commands:: 
* File commands:: 
* GCC/LLVM only commands:: 
* Options: Options<2>. 
* Passing options to other programs:: 

@end menu

@node Environment variables,Misc commands,,Additional Command Reference
@anchor{using/CommandReference environment-variables}@anchor{1a6}
@section Environment variables


@geindex environment variable; GHDL_PREFIX
@anchor{using/CommandReference envvar-GHDL_PREFIX}@anchor{c4}
@deffn {Environment Variable} GHDL_PREFIX
@end deffn

@node Misc commands,File commands,Environment variables,Additional Command Reference
@anchor{using/CommandReference misc-commands}@anchor{1a7}
@section Misc commands


There are a few GHDL commands which are seldom useful.

@geindex cmd help

@menu
* Help [-h]:: 
* Display config [--disp-config]:: 
* Display standard [--disp-standard]:: 
* Version [--version]:: 

@end menu

@node Help [-h],Display config [--disp-config],,Misc commands
@anchor{using/CommandReference help-h}@anchor{1a8}
@subsection Help [@code{-h}]


@geindex ghdl command line option; --help
@geindex ghdl command line option; -h
@anchor{using/CommandReference cmdoption-ghdl-help}@anchor{1a9}@anchor{using/CommandReference cmdoption-ghdl-h}@anchor{1aa}
@deffn {Option} @w{-}@w{-}help, @w{-}h
@end deffn

Display (on the standard output) a short description of the all the commands available.
If the help switch is followed by a command switch, then options for that second command are displayed:

@example
ghdl --help
ghdl -h
ghdl -h command
@end example

@geindex cmd display configuration

@node Display config [--disp-config],Display standard [--disp-standard],Help [-h],Misc commands
@anchor{using/CommandReference display-config-disp-config}@anchor{1ab}
@subsection Display config [@code{--disp-config}]


@geindex ghdl command line option; --disp-config
@anchor{using/CommandReference cmdoption-ghdl-disp-config}@anchor{c5}
@deffn {Option} @w{-}@w{-}disp@w{-}config <[options]>
@end deffn

Display the program paths and options used by GHDL. This may be useful to track installation errors.

@geindex cmd display standard

@geindex display `@w{`}std.standard`@w{`}

@node Display standard [--disp-standard],Version [--version],Display config [--disp-config],Misc commands
@anchor{using/CommandReference display-standard-disp-standard}@anchor{1ac}
@subsection Display standard [@code{--disp-standard}]


@geindex ghdl command line option; --disp-standard
@anchor{using/CommandReference cmdoption-ghdl-disp-standard}@anchor{1ad}
@deffn {Option} @w{-}@w{-}disp@w{-}standard <[options]>
@end deffn

Display the @code{std.standard} package.

@geindex cmd version

@node Version [--version],,Display standard [--disp-standard],Misc commands
@anchor{using/CommandReference version-version}@anchor{1ae}
@subsection Version [@code{--version}]


@geindex ghdl command line option; --version
@geindex ghdl command line option; -v
@anchor{using/CommandReference cmdoption-ghdl-version}@anchor{1af}@anchor{using/CommandReference cmdoption-ghdl-v}@anchor{1b0}
@deffn {Option} @w{-}@w{-}version, @w{-}v
@end deffn

Display the GHDL version.

@node File commands,GCC/LLVM only commands,Misc commands,Additional Command Reference
@anchor{using/CommandReference file-commands}@anchor{1b1}
@section File commands


The following commands act on one or several files.
These are not analyzed, therefore, they work even if a file has semantic errors.

@geindex cmd file format

@menu
* Format [fmt]:: 
* Pretty print [--pp-html]:: 
* Find [-f]:: 
* Chop [--chop]:: 
* Lines [--lines]:: 
* XML tree generation [--file-to-xml]:: 

@end menu

@node Format [fmt],Pretty print [--pp-html],,File commands
@anchor{using/CommandReference format-fmt}@anchor{1b2}
@subsection Format [@code{fmt}]


@geindex ghdl command line option; fmt
@anchor{using/CommandReference cmdoption-ghdl-arg-fmt}@anchor{1b3}
@deffn {Option} fmt <file>
@end deffn

Format on the standard output the input file.

@geindex vhdl to html

@node Pretty print [--pp-html],Find [-f],Format [fmt],File commands
@anchor{using/CommandReference pretty-print-pp-html}@anchor{1b4}
@subsection Pretty print [@code{--pp-html}]


@geindex ghdl command line option; --pp-html
@anchor{using/CommandReference cmdoption-ghdl-pp-html}@anchor{eb}
@deffn {Option} @w{-}@w{-}pp@w{-}html <[options] file...>
@end deffn

The files are just scanned and an html file with syntax highlighting is generated on standard output.
Since the files are not even parsed, erroneous files or incomplete designs can be pretty printed.
The style of the html file can be modified with the @ref{ea,,--format} option.

@geindex cmd file find

@node Find [-f],Chop [--chop],Pretty print [--pp-html],File commands
@anchor{using/CommandReference find-f}@anchor{1b5}
@subsection Find [@code{-f}]


@geindex ghdl command line option; -f
@anchor{using/CommandReference cmdoption-ghdl-f}@anchor{1b6}
@deffn {Option} @w{-}f <file...>
@end deffn

The files are scanned, parsed and the names of design units are displayed.
Design units marked with two stars are candidates to be at the apex of a design hierarchy.

@geindex cmd file chop

@node Chop [--chop],Lines [--lines],Find [-f],File commands
@anchor{using/CommandReference chop-chop}@anchor{1b7}
@subsection Chop [@code{--chop}]


@geindex ghdl command line option; --chop
@anchor{using/CommandReference cmdoption-ghdl-chop}@anchor{1b8}
@deffn {Option} @w{-}@w{-}chop <files...>
@end deffn

The provided files are read, and a file is written in the current directory for every design unit.
Each filename is built according to the type:


@itemize *

@item 
For an entity declaration, a package declaration, or a configuration the file name is @code{NAME.vhdl}, where @cite{NAME}
is the name of the design unit.

@item 
For a package body, the filename is @code{NAME-body.vhdl}.

@item 
Finally, for an architecture @cite{ARCH} of an entity @cite{ENTITY}, the filename is @code{ENTITY-ARCH.vhdl}.
@end itemize

Since the input files are parsed, this command aborts in case of syntax error.
The command aborts too if a file to be written already exists.

Comments between design units are stored into the most adequate files.

This command may be useful to split big files, if your computer doesn’t have enough memory to compile such files.
The size of the executable is reduced too.

@geindex cmd file lines

@node Lines [--lines],XML tree generation [--file-to-xml],Chop [--chop],File commands
@anchor{using/CommandReference lines-lines}@anchor{1b9}
@subsection Lines [@code{--lines}]


@geindex ghdl command line option; --lines
@anchor{using/CommandReference cmdoption-ghdl-lines}@anchor{1ba}
@deffn {Option} @w{-}@w{-}lines <files...>
@end deffn

Display on the standard output lines of files preceded by line number.

@geindex cmd XML generation

@node XML tree generation [--file-to-xml],,Lines [--lines],File commands
@anchor{using/CommandReference xml-tree-generation-file-to-xml}@anchor{1bb}
@subsection XML tree generation [@code{--file-to-xml}]


@geindex ghdl command line option; --file-to-xml
@anchor{using/CommandReference cmdoption-ghdl-file-to-xml}@anchor{1bc}
@deffn {Option} @w{-}@w{-}file@w{-}to@w{-}xml

Outputs an XML representation of the decorated syntax tree for the input file and its dependencies.
It can be used for VHDL tooling using semantic information, like style checkers, documentation extraction, complexity
estimation, etc.
@end deffn

@cartouche
@quotation Warning 

@itemize *

@item 
The AST slightly changes from time to time (particularly when new nodes are added for new language features), so be
liberal in what is allowed by your tool.
Also, the XML can be quite large so consider it only during prototyping.

@item 
Note that at this time there is no XML dump of the elaborated design.
@end itemize
@end quotation
@end cartouche

@node GCC/LLVM only commands,Options<2>,File commands,Additional Command Reference
@anchor{using/CommandReference gcc-llvm-only-commands}@anchor{1bd}@anchor{using/CommandReference gccllvm-only-programs}@anchor{1be}
@section GCC/LLVM only commands


@geindex cmd GCC/LLVM binding

@menu
* Bind [--bind]:: 
* Link [--link]:: 
* List link [--list-link]:: 

@end menu

@node Bind [--bind],Link [--link],,GCC/LLVM only commands
@anchor{using/CommandReference bind-bind}@anchor{1bf}
@subsection Bind [@code{--bind}]


@geindex ghdl command line option; --bind
@anchor{using/CommandReference cmdoption-ghdl-bind}@anchor{1c0}
@deffn {Option} @w{-}@w{-}bind <[options] [library.]top_unit [arch]>
@end deffn

Performs only the first stage of the elaboration command; the list of object files is created but the executable is not
built.
This command should be used only when the main entry point is not GHDL.

@cartouche
@quotation Hint 
Currently, the objects generated by @ref{1c0,,--bind} are created in the working directory.
This behaviour is different from other object files generated with @ref{c8,,-a}, which are always placed in the same
directory as the @cite{WORK} library.
It is possible to provide an output path with @code{ghdl --bind -o path/top_unit [library.]top_unit [arch]}.
However, @code{ghdl --list-link} will only search in the current path.
@end quotation
@end cartouche

@geindex cmd GCC/LLVM linking

@node Link [--link],List link [--list-link],Bind [--bind],GCC/LLVM only commands
@anchor{using/CommandReference link-link}@anchor{1c1}
@subsection Link [@code{--link}]


@geindex ghdl command line option; --link
@anchor{using/CommandReference cmdoption-ghdl-link}@anchor{f3}
@deffn {Option} @w{-}@w{-}link <[options] [library.]top_unit [arch]>
@end deffn

Performs only the second stage of the elaboration command: the executable is created by linking the files of the object
files list.
This command is available only for completeness.
The elaboration command is equivalent to the bind command followed by the link command.

@geindex cmd GCC/LLVM list link

@node List link [--list-link],,Link [--link],GCC/LLVM only commands
@anchor{using/CommandReference list-link-list-link}@anchor{1c2}
@subsection List link [@code{--list-link}]


@geindex ghdl command line option; --list-link
@anchor{using/CommandReference cmdoption-ghdl-list-link}@anchor{1c3}
@deffn {Option} @w{-}@w{-}list@w{-}link <[library.]top_unit [arch]>
@end deffn

This command may be used only after a bind command.
GHDL displays all the files which will be linked to create an executable and additional arguments for the linker.
This command is intended to add object files in a link of a foreign program.
This command should be used only after @code{ghdl --bind}, as some files generated by it are looked for in the current path.

@cartouche
@quotation Hint 
One of the arguments returned by @code{--list-link} is @code{-Wl,--version-script=PREFIX/lib/ghdl/grt.ver}, where @cite{PREFIX}
is the installation path of GHDL.
This will hide most of the symbols when the target executable binary is built.
In some contexts, where the binary is to be loaded dynamically, the user might want additional symbols to be
accessible.
There are two possible approaches to have it done:


@itemize *

@item 
Filter the output of @code{--list-link} with e.g. @code{sed}.

@item 
Provide an additional non-anonymous version script: @code{-Wl,-Wl,--version-script=file.ver}.
@end itemize
@end quotation
@end cartouche

@node Options<2>,Passing options to other programs,GCC/LLVM only commands,Additional Command Reference
@anchor{using/CommandReference options}@anchor{1c4}
@section Options


@geindex ghdl command line option; --GHDL1
@anchor{using/CommandReference cmdoption-ghdl-GHDL1}@anchor{1c5}@anchor{using/CommandReference cmdoption-ghdl-ghdl1}@anchor{1c6}
@deffn {Option} @w{-}@w{-}GHDL1<=COMMAND>
@end deffn

Use @code{COMMAND} as the command name for the compiler.
If @code{COMMAND} is not a path, then it is searched in the path.

@geindex ghdl command line option; --AS
@anchor{using/CommandReference cmdoption-ghdl-AS}@anchor{1c7}@anchor{using/CommandReference cmdoption-ghdl-as}@anchor{1c8}
@deffn {Option} @w{-}@w{-}AS<=COMMAND>
@end deffn

Use @code{COMMAND} as the command name for the assembler.
If @code{COMMAND} is not a path, then it is searched in the path.
The default is @code{as}.

@geindex ghdl command line option; --LINK
@anchor{using/CommandReference cmdoption-ghdl-LINK}@anchor{1c9}
@deffn {Option} @w{-}@w{-}LINK<=COMMAND>
@end deffn

Use @code{COMMAND} as the linker driver.
If @code{COMMAND} is not a path, then it is searched in the path.
The default is @code{gcc}.

@node Passing options to other programs,,Options<2>,Additional Command Reference
@anchor{using/CommandReference id1}@anchor{1ca}@anchor{using/CommandReference passing-options-to-other-programs}@anchor{1cb}
@section Passing options to other programs


@cartouche
@quotation Warning 
These options are only available with GCC/LLVM.
@end quotation
@end cartouche

For many commands, GHDL acts as a driver: it invokes programs to perform the command.
You can pass arbitrary options to these programs.

Both the compiler and the linker are in fact GCC programs.
See the GCC manual for details on GCC options.

@geindex ghdl command line option; -Wc
@anchor{using/CommandReference cmdoption-ghdl-Wc}@anchor{1cc}@anchor{using/CommandReference cmdoption-ghdl-wc}@anchor{1cd}
@deffn {Option} @w{-}Wc,<OPTION>
@end deffn

Pass @cite{OPTION} as an option to the compiler.

@geindex ghdl command line option; -Wa
@anchor{using/CommandReference cmdoption-ghdl-Wa}@anchor{1ce}@anchor{using/CommandReference cmdoption-ghdl-wa}@anchor{1cf}
@deffn {Option} @w{-}Wa,<OPTION>
@end deffn

Pass @cite{OPTION} as an option to the assembler.

@geindex ghdl command line option; -Wl
@anchor{using/CommandReference cmdoption-ghdl-Wl}@anchor{1d0}@anchor{using/CommandReference cmdoption-ghdl-wl}@anchor{1d1}
@deffn {Option} @w{-}Wl,<OPTION>
@end deffn

Pass @cite{OPTION} as an option to the linker.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Implementation of VHDL,Implementation of VITAL,Additional Command Reference,Top
@anchor{using/ImplementationOfVHDL doc}@anchor{1d2}@anchor{using/ImplementationOfVHDL implementation-of-vhdl}@anchor{1d3}@anchor{using/ImplementationOfVHDL ref-implvhdl}@anchor{6b}
@chapter Implementation of VHDL


@menu
* VHDL standards:: 
* PSL support:: 
* Source representation:: 
* Library database:: 
* Top entity:: 
* Using vendor libraries:: 

@end menu

@node VHDL standards,PSL support,,Implementation of VHDL
@anchor{using/ImplementationOfVHDL id1}@anchor{1d4}@anchor{using/ImplementationOfVHDL vhdl-standards}@anchor{8b}
@section VHDL standards


@geindex VHDL standards

@geindex IEEE 1076

@geindex IEEE 1076a

@geindex 1076

@geindex 1076a

@geindex v87

@geindex v93

@geindex v93c

@geindex v00

@geindex v02

@geindex v08

@geindex v19

Unfortunately, there are many versions of the VHDL
language, and they aren’t backward compatible.

The VHDL language was first standardized in 1987 by IEEE as IEEE 1076-1987, and
is commonly referred as VHDL-87. This is certainly the most important version,
since most of the VHDL tools are still based on this standard.

Various problems of this first standard have been analyzed by experts groups
to give reasonable ways of interpreting the unclear portions of the standard.

VHDL was revised in 1993 by IEEE as IEEE 1076-1993. This revision is still
well-known.

Unfortunately, VHDL-93 is not fully compatible with VHDL-87, i.e. some perfectly
valid VHDL-87 programs are invalid VHDL-93 programs. Here are some of the
reasons:


@itemize *

@item 
the syntax of file declaration has changed (this is the most visible source
of incompatibility),

@item 
new keywords were introduced (group, impure, inertial, literal,
postponed, pure, reject, rol, ror, shared, sla, sll, sra, srl,
unaffected, xnor),

@item 
some dynamic behaviours have changed (the concatenation is one of them),

@item 
rules have been added.
@end itemize

Shared variables were replaced by protected types in the 2000 revision of
the VHDL standard. This modification is also known as 1076a. Note that this
standard is not fully backward compatible with VHDL-93, since the type of a
shared variable must now be a protected type (there was no such restriction
before).  This incompatibility can be bypassed with the
@ref{e2,,-frelaxed} option.

Minor corrections were added by the 2002 revision of the VHDL standard. This
revision is not fully backward compatible with VHDL-00 since, for example,
the value of the @cite{‘instance_name} attribute has slightly changed.

The latest version is 2019. Many features have been added, and GHDL
doesn’t implement all of them.

You can select the VHDL standard expected by GHDL with the
@ref{8c,,--std=STANDARD} option, where @code{STANDARD} is one of the list below:


@table @asis

@item 87

Select VHDL-87 standard as defined by IEEE 1076-1987. LRM bugs corrected by
later revisions are taken into account.

@item 93

Select VHDL-93; VHDL-87 file declarations are not accepted.

@item 93c

Same as 93 and @ref{e2,,-frelaxed}.

@item 00

Select VHDL-2000 standard, which adds protected types.

@item 02

Select VHDL-2002 standard.

@item 08

Select VHDL-2008 standard (partially implemented).

@item 19

Select VHDL-2019 standard (partially implemented).
@end table

Multiple standards can be used in a design:


@multitable {xxxxxxx} {xxxxxxxxxxxxxxxxxx} 
@headitem

GROUP

@tab

VHDL Standard

@item

87

@tab

87

@item

93

@tab

93, 93c, 00, 02

@item

08

@tab

08

@item

19

@tab

19

@end multitable


@cartouche
@quotation Note 
The standards in each group are considered compatible: you can elaborate a design mixing these standards. However, standards of different groups are not compatible.
@end quotation
@end cartouche

@node PSL support,Source representation,VHDL standards,Implementation of VHDL
@anchor{using/ImplementationOfVHDL psl-implementation}@anchor{e7}@anchor{using/ImplementationOfVHDL psl-support}@anchor{1d5}
@section PSL support


GHDL implements a subset of PSL@footnote{https://en.wikipedia.org/wiki/Property_Specification_Language}.

@menu
* PSL implementation:: 
* PSL usage:: 

@end menu

@node PSL implementation,PSL usage,,PSL support
@anchor{using/ImplementationOfVHDL id2}@anchor{1d6}
@subsection PSL implementation


A PSL statement is considered as a process, so it’s not allowed within
a process.

All PSL directives (@cite{assert}, @cite{assume}, @cite{restrict}, @cite{cover}) must be clocked (GHDL doesn’t support unclocked directives).
Furthermore only one clock per directive is allowed.

You can either use a default clock like this:

@example
default clock is rising_edge (CLK);
assert always
  a -> eventually! b;
@end example

or use a clocked expression (note the use of parentheses):

@example
assert (always a -> next[3](b)) @@rising_edge(clk);
@end example

Of course only the simple subset of PSL is allowed.

Currently the built-in functions are not implemented, see #662@footnote{https://github.com/ghdl/ghdl/issues/662}.
PSL functions @cite{prev()}, @cite{stable()}, @cite{rose()}, @cite{fell()}, @cite{onehot()} and @cite{onehot0()} are supported with GHDL synthesis.

@node PSL usage,,PSL implementation,PSL support
@anchor{using/ImplementationOfVHDL psl-usage}@anchor{1d7}
@subsection PSL usage


@menu
* PSL annotations embedded in comments:: 
* PSL annotations (VHDL-2008 and later): PSL annotations VHDL-2008 and later. 
* PSL vunit files (VHDL-2008 and later@comma{} synthesis only): PSL vunit files VHDL-2008 and later synthesis only. 

@end menu

@node PSL annotations embedded in comments,PSL annotations VHDL-2008 and later,,PSL usage
@anchor{using/ImplementationOfVHDL psl-annotations-embedded-in-comments}@anchor{1d8}
@subsubsection PSL annotations embedded in comments


GHDL understands embedded PSL annotations in VHDL files:

@example
  -- psl default clock is rising_edge (CLK);
  -- psl assert always
  --   a -> eventually! b;
end architecture rtl;
@end example


@itemize *

@item 
A PSL assertion statement must appear within a comment that starts
with the @cite{psl} keyword. The keyword must be followed (on the
same line) by a PSL keyword such as @cite{assert} or @cite{default}.
To continue a PSL statement on the next line, just start a new comment.
@end itemize

@cartouche
@quotation Hint 
As PSL annotations are embedded within comments, you must analyze
your design with option @ref{e6,,-fpsl} to enable PSL annotations:

@example
ghdl -a -fpsl vhdl_design.vhdl
ghdl -e vhdl_design
@end example
@end quotation
@end cartouche

@node PSL annotations VHDL-2008 and later,PSL vunit files VHDL-2008 and later synthesis only,PSL annotations embedded in comments,PSL usage
@anchor{using/ImplementationOfVHDL psl-annotations-vhdl-2008-and-later}@anchor{1d9}
@subsubsection PSL annotations (VHDL-2008 and later)


Since VHDL-2008 PSL is integrated in the VHDL language. You can use
PSL in a VHDL(-2008) design without embedding it in comments.

@example
  default clock is rising_edge (CLK);
  assert always
    a -> eventually! b;
end architecture rtl;
@end example

@cartouche
@quotation Hint 
You have to use the @ref{8c,,--std=08} option:

@example
ghdl -a --std=08 vhdl_design.vhdl
ghdl -e --std=08 vhdl_design
@end example
@end quotation
@end cartouche

@node PSL vunit files VHDL-2008 and later synthesis only,,PSL annotations VHDL-2008 and later,PSL usage
@anchor{using/ImplementationOfVHDL psl-vunit-files-vhdl-2008-and-later-synthesis-only}@anchor{1da}
@subsubsection PSL vunit files (VHDL-2008 and later, synthesis only)


GHDL supports vunit (Verification Unit) files.

@example
vunit vunit_name (entity_name(architecture_name))
@{
  default clock is rising_edge(clk);
  assert always cnt /= 5 abort rst;
@}
@end example


@itemize *

@item 
A vunit can contain PSL and VHDL code.

@item 
It is bound to a VHDL entity or an instance of it.

@item 
The PSL vunit is in the same scope as the VHDL design it is bound
to. You have access to all objects (ports, types, signals) of the
VHDL design.
@end itemize

@cartouche
@quotation Hint 
The PSL vunit file has to be analyzed together with the VHDL design file, for example:

@example
ghdl -a --std=08 vhdl_design.vhdl vunit.psl
@end example

Or when using the @cite{–synth} command:

@example
ghdl --synth --std=08 vhdl_design.vhdl vunit.psl -e vhdl_design
@end example
@end quotation
@end cartouche

@node Source representation,Library database,PSL support,Implementation of VHDL
@anchor{using/ImplementationOfVHDL source-representation}@anchor{1db}
@section Source representation


According to the VHDL standard, design units (i.e. entities,
architectures, packages, package bodies, and configurations) may be
independently analyzed.

Several design units may be grouped into a design file.

In GHDL, a system file represents a design file. That is, a file compiled by
GHDL may contain one or more design units.

It is common to have several design units in a design file.

GHDL does not impose any restriction on the name of a design file
(except that the filename may not contain any control character or
spaces).

GHDL does not keep a binary representation of the design units analyzed like
other VHDL analyzers. The sources of the design units are re-read when
needed (for example, an entity is re-read when one of its architectures is
analyzed). Therefore, if you delete or modify a source file of a unit
analyzed, GHDL will refuse to use it.

@node Library database,Top entity,Source representation,Implementation of VHDL
@anchor{using/ImplementationOfVHDL id3}@anchor{1dc}@anchor{using/ImplementationOfVHDL library-database}@anchor{1dd}
@section Library database


Each design unit analyzed is placed into a design library. By default,
the name of this design library is @code{work}; however, this can be
changed with the @ref{90,,--work} option of GHDL.

To keep the list of design units in a design library, GHDL creates
library files. The name of these files is @code{<LIB_NAME>-obj<GROUP>.cf}, where
@cite{<LIB_NAME>} is the name of the library, and @cite{<GROUP>} the VHDL version (87,
93, 08, or 19) used to analyze the design units.

For details on @code{GROUP} values see section @ref{8b,,VHDL standards}.

You don’t have to know how to read a library file. You can display it
using the `-d' of @cite{ghdl}. The file contains the name of the
design units, as well as the location and the dependencies.

The format may change with the next version of GHDL.

@node Top entity,Using vendor libraries,Library database,Implementation of VHDL
@anchor{using/ImplementationOfVHDL id4}@anchor{1de}@anchor{using/ImplementationOfVHDL top-entity}@anchor{cb}
@section Top entity


There are some restrictions on the entity being at the apex of a design
hierarchy:


@itemize *

@item 
The generic must have a default value, and the value of a generic is its
default value.

@item 
The ports type must be constrained.
@end itemize

@node Using vendor libraries,,Top entity,Implementation of VHDL
@anchor{using/ImplementationOfVHDL using-vendor-libraries}@anchor{1df}
@section Using vendor libraries


Many vendors libraries have been analyzed with @cite{GHDL}. There are usually no problems. Be sure to use the
@ref{90,,--work} option. However, some problems have been encountered. @cite{GHDL} follows the @cite{VHDL} LRM (the manual which
defines @cite{VHDL}) more strictly than other @cite{VHDL} tools. You could try to relax the restrictions by using the
@ref{8c,,--std=93c}, @ref{8e,,-fexplicit}, @ref{8f,,-frelaxed-rules} and
@ref{111,,--warn-no-vital-generic}.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Implementation of VITAL,Directory structure,Implementation of VHDL,Top
@anchor{using/ImplementationOfVITAL doc}@anchor{1e0}@anchor{using/ImplementationOfVITAL implementation-of-vital}@anchor{1e1}@anchor{using/ImplementationOfVITAL ref-implvital}@anchor{6c}
@chapter Implementation of VITAL


@geindex VITAL

@geindex IEEE 1076.4

@geindex 1076.4

This chapter describes how VITAL is implemented in GHDL. Support of VITAL is
really in a preliminary stage. Do not expect too much of it as of right now.

@menu
* VITAL packages:: 
* VHDL restrictions for VITAL:: 
* Backannotation:: 
* Negative constraint calculation:: 

@end menu

@node VITAL packages,VHDL restrictions for VITAL,,Implementation of VITAL
@anchor{using/ImplementationOfVITAL id1}@anchor{1e2}@anchor{using/ImplementationOfVITAL vital-packages}@anchor{e4}
@section VITAL packages


The VITAL standard or IEEE 1076.4 was first published in 1995, and revised in
2000.

The version of the VITAL packages depends on the VHDL standard. VITAL
1995 packages are used with the VHDL 1987 standard, while VITAL 2000
packages are used with other standards. This choice is based on the
requirements of VITAL: VITAL 1995 requires the models follow the VHDL
1987 standard, while VITAL 2000 requires the models follow VHDL 1993.

The VITAL 2000 packages were slightly modified so that they conform to
the VHDL 1993 standard (a few functions are made pure and a few
impure).

@node VHDL restrictions for VITAL,Backannotation,VITAL packages,Implementation of VITAL
@anchor{using/ImplementationOfVITAL id2}@anchor{1e3}@anchor{using/ImplementationOfVITAL vhdl-restrictions-for-vital}@anchor{ef}
@section VHDL restrictions for VITAL


The VITAL standard (partially) implemented is the IEEE 1076.4 standard
published in 1995.

This standard defines restriction of the VHDL language usage on VITAL
model. A `VITAL model' is a design unit (entity or architecture)
decorated by the @cite{VITAL_Level0} or @cite{VITAL_Level1} attribute.
These attributes are defined in the @cite{ieee.VITAL_Timing} package.

Currently, only VITAL level 0 checks are implemented. VITAL level 1 models
can be analyzed, but GHDL doesn’t check they comply with the VITAL standard.

Moreover, GHDL doesn’t check (yet) that timing generics are not read inside
a VITAL level 0 model prior the VITAL annotation.

The analysis of a non-conformant VITAL model fails. You can disable the
checks of VITAL restrictions with the `–no-vital-checks'. Even when
restrictions are not checked, SDF annotation can be performed.

@node Backannotation,Negative constraint calculation,VHDL restrictions for VITAL,Implementation of VITAL
@anchor{using/ImplementationOfVITAL backannotation}@anchor{17c}@anchor{using/ImplementationOfVITAL id3}@anchor{1e4}
@section Backannotation


@geindex SDF

`Backannotation' is the process of setting VITAL generics with timing
information provided by an external files.

The external files must be SDF (Standard Delay Format) files. GHDL
supports a tiny subset of SDF version 2.1. Other version numbers can be
used, provided no features added by later versions are used.

Hierarchical instance names are not supported. However you can use a list of
instances. If there is no instance, the top entity will be annotated and
the celltype must be the name of the top entity. If there is at least one
instance, the last instance name must be a component instantiation label, and
the celltype must be the name of the component declaration instantiated.

Instances being annotated are not required to be VITAL compliant. However
generics being annotated must follow rules of VITAL (e.g., type must be a
suitable vital delay type).

Currently, only timing constraints applying on a timing generic of type
@cite{VitalDelayType01} has been implemented. This SDF annotator is
just a proof of concept. Features will be added with the following GHDL
release.

@node Negative constraint calculation,,Backannotation,Implementation of VITAL
@anchor{using/ImplementationOfVITAL negative-constraint-calculation}@anchor{1e5}
@section Negative constraint calculation


Negative constraint delay adjustments are necessary to handle negative
constraints such as a negative setup time. This step is defined in the VITAL
standard and should occur after backannotation.

GHDL does not do negative constraint calculation. It fails to handle models
with negative constraint. I hope to be able to add this phase soon.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Directory structure,Building GHDL from Sources,Implementation of VITAL,Top
@anchor{development/Directories doc}@anchor{1e6}@anchor{development/Directories build-dir-structure}@anchor{77}@anchor{development/Directories directory-structure}@anchor{1e7}
@chapter Directory structure



@itemize *

@item 
@code{doc}: @cite{reStructuredText} sources and auxiliary files to build the documentation with Sphinx@footnote{http://www.sphinx-doc.org}.
A continuous integration (CI) workflow is used to automatically build and deploy this site and/or PDF you are reading.

@item 
@code{libraries}: mostly third party libraries such as @cite{ieee}, @cite{std}, @cite{synopsys} and @cite{vital}. Except for a few shell and
@cite{Python} scripts, all the content is written in VHDL.

@item 
@code{logo}: Python and Gimp sources of the logo and the banners.

@item 
@code{pyGHDL}: sources of the @ref{0,,Python Interfaces}.

@item 
@code{scripts}: scripts and auxiliary files:


@itemize *

@item 
@code{scripts/vendors}: Vendors like Altera, Lattice and Xilinx have their own simulation libraries, especially for FPGA
primitives, soft and hard macros. These libraries cannot be shipped with GHDL, but we offer prepared compile scripts to
pre-compile the vendor libraries, if the vendor tool is present on the computer. See @ref{58,,Precompile Vendor Primitives} for
information on how to use them.

@item 
@code{scripts/gcc}: header and configuration files to build GHDL with GCC (all platforms).

@item 
@code{scripts/msys2-*}: PKGBUILD recipes for building nightly GHDL packages on MSYS2.

@item 
@code{scripts/pnodes*}: Python scripts for automatically generating some of the sources of @ref{0,,Python Interfaces}.
@end itemize

@item 
@code{src}: sources of GHDL. Most of them are written in Ada, some in C.

@item 
@code{testsuite}: files used for testing.
@end itemize

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Building GHDL from Sources,pyGHDL,Directory structure,Top
@anchor{development/building/index doc}@anchor{1e8}@anchor{development/building/index build}@anchor{55}@anchor{development/building/index building-ghdl-from-sources}@anchor{1e9}
@chapter Building GHDL from Sources


@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@menu
* Sources:: 
* mcode backend:: 
* LLVM backend:: 
* GCC backend:: 
* TL;DR:: 

@end menu

@node Sources,mcode backend,,Building GHDL from Sources
@anchor{development/building/Sources doc}@anchor{1ea}@anchor{development/building/Sources id1}@anchor{1eb}@anchor{development/building/Sources sources}@anchor{1ec}
@section Sources


@cartouche
@quotation Hint 
All the following procedures will retrieve the latest development version of GHDL, i.e., the @cite{master} branch at
github.com/ghdl/ghdl@footnote{https://github.com/ghdl/ghdl}. We do our best to keep it stable, but bugs can seldom be
published. See @cite{HINT} boxes below for instructions to get older releases.
@end quotation
@end cartouche
@anchor{development/building/Sources release-sources-zip}@anchor{1ed}
@subsubheading Tarball/zip-file


GHDL can be downloaded as a zip-file or tarball from GitHub. See the following table to choose your desired format/version:


@cartouche
@quotation Hint 
To download a specific version of GHDL, use this alternative URL, where @code{<format>} is @code{tar.gz} or @code{zip}:
@code{https://codeload.github.com/ghdl/ghdl/<format>/<tag>}.
@end quotation
@end cartouche
@anchor{development/building/Sources release-sources-gitclone}@anchor{1ee}
@subsubheading git clone


GHDL can be downloaded (cloned) with @code{git clone} from GitHub. GitHub offers the transfer protocols HTTPS and SSH. You should
use SSH if you have a GitHub account and have already uploaded an OpenSSH public key to GitHub, otherwise use HTTPS if you
have no account or you want to use login credentials.


@multitable {xxxxxxxxxxxx} {xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} 
@headitem

Protocol

@tab

GitHub Repository URL

@item

HTTPS

@tab

@indicateurl{https://github.com/ghdl/ghdl.git}

@item

SSH

@tab

@indicateurl{ssh://git@@github.com:ghdl/ghdl.git}

@end multitable


@cartouche
@quotation Hint 
Execute @code{git checkout -b stable <tag>} after @code{git clone}, to checkout a specific version of GHDL.
@end quotation
@end cartouche

Command line instructions to clone GHDL with HTTPS protocol:

@example
cd GitRoot
git clone "https://github.com/ghdl/ghdl.git" ghdl
cd ghdl
git remote rename origin github
@end example

Command line instructions to clone GHDL with SSH protocol:

@example
cd GitRoot
git clone "ssh://git@@github.com:ghdl/ghdl.git" ghdl
cd ghdl
git remote rename origin github
@end example

@cartouche
@quotation Note 
Executing the following instructions in Windows Command Prompt (@code{cmd.exe}) won’t function or will result in
errors! All Windows command line instructions are intended for @code{Windows PowerShell}, if not marked otherwise.
@end quotation
@end cartouche

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node mcode backend,LLVM backend,Sources,Building GHDL from Sources
@anchor{development/building/mcode doc}@anchor{1ef}@anchor{development/building/mcode build-mcode}@anchor{1f0}@anchor{development/building/mcode mcode-backend}@anchor{1f1}
@section mcode backend


The mcode backend is available for all supported platforms and is also the
simplest procedure, because it requires the fewest dependencies and configuration
options.

@menu
* GCC/GNAT; GNU/Linux or Windows (MinGW/MSYS2): GCC/GNAT GNU/Linux or Windows MinGW/MSYS2. 
* GNAT GPL; Windows: GNAT GPL Windows. 

@end menu

@node GCC/GNAT GNU/Linux or Windows MinGW/MSYS2,GNAT GPL Windows,,mcode backend
@anchor{development/building/mcode build-mcode-gnat}@anchor{1f2}@anchor{development/building/mcode gcc-gnat-gnu-linux-or-windows-mingw-msys2}@anchor{1f3}
@subsection GCC/GNAT: GNU/Linux or Windows (MinGW/MSYS2)


@subsubheading Requirements



@itemize *

@item 
GCC (Gnu Compiler Collection)

@item 
GNAT (Ada compiler for GCC)
@end itemize

GHDL is configured by @code{configure} and built by @code{make}.


@itemize *

@item 
First, GHDL needs to be configured. It is common to specify a @code{PREFIX}
(installation directory like @code{/usr/local} or @code{/opt/ghdl}). Without any
other option, @code{configure} selects @cite{mcode} as the backend.

@item 
Next, @code{make} starts the compilation process.

@item 
Finally, @code{make install} installs GHDL into the installation directory
specified by @code{PREFIX}.
@end itemize

@cartouche
@quotation Hint 
ON GNU/Linux, you may need super user privileges (@code{sudo ...}).
@end quotation
@end cartouche

@subsubheading Example:


@example
$ cd <ghdl>
$ mkdir build
$ cd build
$ ../configure --prefix=PREFIX
$ make
$ make install
@end example

@node GNAT GPL Windows,,GCC/GNAT GNU/Linux or Windows MinGW/MSYS2,mcode backend
@anchor{development/building/mcode build-mcode-gnatgpl-windows}@anchor{1f4}@anchor{development/building/mcode gnat-gpl-windows}@anchor{1f5}
@subsection GNAT GPL: Windows


@subsubheading Requirements



@itemize *

@item 
GNAT GPL from @indicateurl{http://libre.adacore.com}

@item 
PowerShell 4

@item 
PowerShell Community Extensions (PSCX)
@end itemize

@subsubheading @cite{compile.ps1}


@example
Commands          Description
--------------------------------------------------------------------
-Help             Display the integrated help pages
-Clean            Clean up all files and directories
-Compile          Compile GHDL
-Install          Install all files into a directory (xcopy deployment)
-Uninstall        Uninstall all files from a directory
-Update           Update files in the installation directory
-CreatePackage    create an installer package

Install options:
-InstallPath      Installation directory

CreatePackage options:
-Zip              Create a zip-file for xcopy deployment
@end example

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node LLVM backend,GCC backend,mcode backend,Building GHDL from Sources
@anchor{development/building/LLVM doc}@anchor{1f6}@anchor{development/building/LLVM build-llvm}@anchor{1f7}@anchor{development/building/LLVM llvm-backend}@anchor{1f8}
@section LLVM backend


@subsubheading Requirements



@itemize *

@item 
GCC (Gnu Compiler Collection)

@item 
GNAT (Ada compiler for GCC)

@item 
LLVM (Low-Level-Virtual Machine) and CLANG (Compiler front-end for LLVM): 3.5, 3.8, 3.9, 4.0, 5.0, 6.0, 7.0, 8.0,
9.0, 10.0, 11.0, 11.1, 12.0, 13.0 or 14.0
@end itemize

@menu
* GCC/GNAT; GNU/Linux or Windows (MinGW/MSYS2): GCC/GNAT GNU/Linux or Windows MinGW/MSYS2<2>. 

@end menu

@node GCC/GNAT GNU/Linux or Windows MinGW/MSYS2<2>,,,LLVM backend
@anchor{development/building/LLVM build-llvm-gnat}@anchor{1f9}@anchor{development/building/LLVM gcc-gnat-gnu-linux-or-windows-mingw-msys2}@anchor{1fa}
@subsection GCC/GNAT: GNU/Linux or Windows (MinGW/MSYS2)


@cartouche
@quotation Hint 
You need to install LLVM (usually depends on @code{libedit}, see #29@footnote{https://github.com/ghdl/ghdl/issues/29}). Debugging is supported with LLVM 3.5 or @code{>=6}.
@end quotation
@end cartouche

GHDL is configured by @code{configure} and built by @code{make}.


@itemize *

@item 
First, GHDL needs to be configured. It is common to specify a @code{PREFIX}
(installation directory like @code{/usr/local} or @code{/opt/ghdl}). Set the proper
arg, @code{./configure --with-llvm-config}, to select LLVM backend. If
@code{llvm-config} is not in your path, you can specify it:
@code{./configure --with-llvm-config=LLVM_INSTALL/bin/llvm-config}.

@item 
Next, @code{make} starts the compilation process.

@item 
Finally, @code{make install} installs GHDL into the installation directory
specified by @code{PREFIX}.
@end itemize

@subsubheading Example:


@example
$ cd <ghdl>
$ mkdir build
$ cd build
$ ../configure --with-llvm-config --prefix=PREFIX
$ make
$ make install
@end example

@cartouche
@quotation Hint 
If you want to have stack backtraces on errors (like assert failure or index of out bounds), you need to configure and build @code{libbacktrace} from GCC (you don’t need to configure GCC). Then add the following arg to configure: @code{--with-backtrace-lib=/path-to-gcc-build/libbacktrace/.libs/libbacktrace.a}
@end quotation
@end cartouche

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node GCC backend,TL;DR,LLVM backend,Building GHDL from Sources
@anchor{development/building/GCC doc}@anchor{1fb}@anchor{development/building/GCC build-gcc}@anchor{1fc}@anchor{development/building/GCC gcc-backend}@anchor{1fd}
@section GCC backend


@cartouche
@quotation Todo 
Instructions to build GHDL with GCC backend on Windows are not available yet.
@end quotation
@end cartouche

@subsubheading Requirements



@itemize *

@item 
GCC (Gnu Compiler Collection)

@item 
GNAT (Ada compiler for GCC)

@item 
GCC source files. Download and untar the sources of version 4.9.x, 5.x, 6.x, 7.x, 8.x, 9.x, 10.x, 11.x or 12.x
(GCC mirror sites@footnote{https://gcc.gnu.org/mirrors.html}).
@end itemize

@cartouche
@quotation Hint 
There are some dependencies for building GCC (@code{gmp}, @code{mpfr} and @code{mpc}). If you have not installed them on your system, you can either build them manually or use the @code{download_prerequisites} script provided in the GCC source tree (recommended): @code{cd /path/to/gcc/source/dir && ./contrib/download_prerequisites}.
@end quotation
@end cartouche


@itemize *

@item 
First configure GHDL, specify GCC source directory and installation prefix (like  @code{/usr/local} or @code{/opt/ghdl}).

@item 
Next, invoke @code{make copy-sources} to copy GHDL sources in the source directory.

@item 
Then, configure GCC. The list of @code{--disable} configure options can be adjusted to your needs. GHDL does not require all these optional libraries and disabling them will speed up the build.

@item 
Now, build and install GCC with @code{make}.

@item 
Last, build and install GHDL libraries.
@end itemize

@subsubheading Example:


@example
$ cd <ghdl>
$ mkdir build
$ cd build
$ ../configure --with-gcc=/path/to/gcc/source/dir --prefix=/usr/local
$ make copy-sources
$ mkdir gcc-objs; cd gcc-objs
$ /path/to/gcc/source/dir/configure --prefix=/usr/local --enable-languages=c,vhdl \
--disable-bootstrap --disable-lto --disable-multilib --disable-libssp \
--disable-libgomp --disable-libquadmath
$ make -j2 && make install
$ cd /path/to/ghdl/source/dir/build
$ make ghdllib
$ make install
@end example

@cartouche
@quotation Hint 
Note that the prefix directory to configure @code{gcc} must be the same as the one used to configure GHDL. If you have manually built @code{gmp}/@code{mpfr}/@code{mpc} (without using the script in @code{contrib}), and, if you have installed them in a non-standard directory, you may need to add @code{--with-gmp=GMP_INSTALL_DIR}.
@end quotation
@end cartouche

@cartouche
@quotation Hint 
If your system gcc was configured with @code{--enable-default-pie} (check if that option appears in the output of @code{gcc -v}), you should also add it.
@end quotation
@end cartouche

@cartouche
@quotation Hint 
If you don’t want to install @code{makeinfo}, do @code{make install MAKEINFO=true} instead.
@end quotation
@end cartouche

@cartouche
@quotation Hint 
Once GCC (with GHDL) has been built once, it is possible to work on the GHDL source tree without copying it in the GCC tree. Commands are:

@example
$ make ghdl1-gcc           # Build the compiler
$ make ghdl_gcc            # Build the driver
$ make libs.vhdl.local_gcc # Compile the vhdl libraries
$ make grt-all             # Build the GHDL runtime
$ make install.vpi.local   # Locally install vpi files
@end example

In @code{src/ortho/gcc}, create a @code{Makefile.conf} file that sets the following
variables:

@example
AGCC_GCCSRC_DIR=/path/to/gcc/sources
AGCC_GCCOBJ_DIR=/path/to/gcc/build
@end example

If your system gcc was built with @code{--enable-default-pie}, add
@code{-no-pie} option for linking.
@end quotation
@end cartouche

@cartouche
@quotation Hint 
For ppc64/ppc64le platform, the object file format contains an identifier for the source language. Because gcc doesn’t know about VHDL, gcc crashes very early. This could be fixed with a very simple change in @code{gcc/config/rs6000/rs6000.c} (@code{gcc/config/rs6000/rs6000-logue.c} since gcc 10), function @code{rs6000_output_function_epilogue}:

@example
          || ! strcmp (language_string, "GNU GIMPLE")
          || ! strcmp (language_string, "GNU Go")
          || ! strcmp (language_string, "GNU D")
-         || ! strcmp (language_string, "libgccjit"))
+         || ! strcmp (language_string, "libgccjit")
+         || ! strcmp (language_string, "vhdl"))
        i = 0;
@end example
@end quotation
@end cartouche

GHDL can be downloaded as a tarball@footnote{https://github.com/ghdl/ghdl/archive/master.tar.gz}/zipfile@footnote{https://github.com/ghdl/ghdl/archive/master.zip}
or cloned with @code{git clone} from GitHub. GitHub offers HTTPS and SSH as transfer protocols. See the @ref{1ec,,Sources} page for
further details.

@cartouche
@quotation Important 
Since GHDL is written in @cite{Ada}, independently of the code generator you use, a compiler is required. Most GNU/Linux package
managers provide @code{gcc-ada} or @code{gcc-gnat} (which could be outdated). Alternatively, @cite{GNU Ada compiler}, @cite{GNAT GPL}, can be downloaded
without registration from libre.adacore.com@footnote{http://libre.adacore.com/tools/gnat-gpl-edition/} (2014, or later; for x86, 32 or 64 bits).
@end quotation
@end cartouche

@cartouche
@quotation Hint 
The download page of `GNAT Community Edition' provides the latest version (x86, 64 bits), with a graphical installer
(@code{chmod +x *.bin} and execute it). Alternatively, you can find a link to `More packages, platforms, versions and sources'
at the bottom of the page, where versions previous to 2018 are available as binaries ready to be installed
(@cite{untar} and run the @cite{doinstall} script). In any case, you must add @code{<GNAT_INSTALL_DIR>/bin} to your @code{PATH}.
@end quotation
@end cartouche

@cartouche
@quotation Attention 
Since @code{v0.37}, GHDL’s synthesis features require GCC >=8.1, due to some new GNAT features which are not available in
previous releases. Users with older versions (who don’t need synthesis) can configure GHDL with option @code{--disable-synth}.
@end quotation
@end cartouche

GHDL currently supports three different back-ends (code generators):


@itemize *

@item 
mcode - built-in in-memory x86 (or x86_64) code generator

@item 
GCC - Gnu Compiler Collection (gcc.gnu.org@footnote{http://gcc.gnu.org/})

@item 
LLVM - Low-Level Virtual Machine (llvm.org@footnote{http://llvm.org/})
@end itemize

Here is a short comparison, so that you can choose the one you want to use:


@multitable {xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} {xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} {xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} 
@headitem

Back-end

@tab

Pros

@tab

Cons

@item

@ref{1f0,,mcode}

@tab


@itemize *

@item 
Very easy to build

@item 
Very quick analysis

@item 
Can handle very large designs

@item 
Base simulation time can be modified for speeding up execution
@end itemize

@tab


@itemize *

@item 
Simulation is slower

@item 
x86_64/i386 only
@end itemize

@item

@ref{1f7,,LLVM}

@tab


@itemize *

@item 
Generated code is faster

@item 
Generated code can be debugged (with @code{-g})

@item 
Easier to build than GCC

@item 
Ported to many platforms (x86, x86_64, armv7/aarch64)
@end itemize

@tab


@itemize *

@item 
Build is more complex than mcode
@end itemize

@item

@ref{1fc,,GCC}

@tab


@itemize *

@item 
Generated code is faster (particularly with @code{-O} or @code{-O2})

@item 
Generated code can be debugged (with @code{-g})

@item 
Ported to many platforms (x86, x86_64, PowerPC, SPARC)
@end itemize

@tab


@itemize *

@item 
Build is even more complex

@item 
Analysis can take time (particularly for large units)

@item 
Code coverage collection (@code{gcov}) is unique to GCC
@end itemize

@end multitable


@cartouche
@quotation Hint 
The output of both GCC and LLVM is an executable file, but @cite{mcode} does not generate any. Therefore, if using GCC/LLVM,
the call with argument @code{-r} can be replaced with direct execution of the binary. See section @ref{68,,Simulation}.
@end quotation
@end cartouche

After making your choice, you can jump to the corresponding section.
However, we suggest you to read @ref{77,,Directory structure} first, so that you
know where the content will be placed and which files are expected to be
created.

@cartouche
@quotation Hint 
In these instructions, the configure script is executed in the source directory; but you can execute in a different
directory too, like this:

@quotation

@example
$ mkdir ghdl-objs
$ cd ghdl-objs
$ ../path/to/ghdl/configure ...
@end example
@end quotation
@end quotation
@end cartouche

@cartouche
@quotation Hint 
On Windows, building GHDL with mcode backend and GNAT GPL 32 bit seems to be the only way to get a standalone native
executable straightaway. MINGW/MSYS2 builds depend on the environment/runtime. See #1560@footnote{https://github.com/ghdl/ghdl/issues/1560}.
@end quotation
@end cartouche

@cartouche
@quotation Hint 
For MacOS 10.15 (Catalina), see #1368@footnote{https://github.com/ghdl/ghdl/issues/1368} for workarounds to link failures.
@end quotation
@end cartouche

@node TL;DR,,GCC backend,Building GHDL from Sources
@anchor{development/building/index tl-dr}@anchor{1fe}
@section TL;DR


In order to follow the traditional way to @code{configure} and @code{make}, you need an Ada compiler.

@cartouche
@quotation Hint 
Depending on the OS and distribution you are using, you will also need to install some toolchain dependencies, such as
@code{zlib}.
@end quotation
@end cartouche

To use mcode backend (easiest to build), in the GHDL base directory, configure and build:

@example
$ ./configure --prefix=/usr/local
$ make
@end example

At that place, you can already use the @cite{ghdl_mcode} built in the directory. You can also install GHDL:

@example
$ make install
@end example

That’s all!

@cartouche
@quotation Hint 
The executable is installed as ‘ghdl’ in @code{/usr/local}. To install it to a different path, change the @code{--prefix} in the
call to @code{configure}. For example, on Windows, you may want to set it to @code{--prefix=/c/Program Files (x86)/GHDL}.
@end quotation
@end cartouche

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL,GHDL Waveform GHW,Building GHDL from Sources,Top
@anchor{pyGHDL/pyGHDL doc}@anchor{1ff}@anchor{pyGHDL/pyGHDL module-pyGHDL}@anchor{0}@anchor{pyGHDL/pyGHDL pyghdl}@anchor{200}
@chapter @code{pyGHDL}


@geindex module; pyGHDL
@anchor{pyGHDL/pyGHDL python-interface}@anchor{201}
GHDL offers two Python interfaces and a language server protocol service. All
this is provided from a @code{pyGHDL} packages with four sub-packages:


@itemize *

@item 
@ref{1,,pyGHDL.cli} - Command line interface (CLI) applications.

@item 
@ref{4,,pyGHDL.dom} - A high-level API offering a document object model (DOM).
The underlying abstract VHDL language model is provided by pyVHDLModel@footnote{https://vhdl.github.io/pyVHDLModel/index.html}.
The DOM is using @code{libghdl} for file analysis and parsing.

@item 
@ref{1b,,pyGHDL.libghdl} - A low-level API directly interacting with the shared library @code{libghdl....so}/@code{libghdl....dll}.
This is a procedural and C-like interface. It comes with some Python generators for easier iterating linked lists.

@item 
@ref{3c,,pyGHDL.lsp} - A language server protocol@footnote{https://en.wikipedia.org/wiki/Language_Server_Protocol} (LSP)
written in Python. The implementation offers an HTTPS service that can be used e.g. by editors and IDEs supporting LSP.
@end itemize

`Submodules'

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@menu
* pyGHDL.cli: pyGHDL cli. 
* pyGHDL.dom: pyGHDL dom. 
* pyGHDL.libghdl: pyGHDL libghdl. 
* pyGHDL.lsp: pyGHDL lsp. 

@end menu

@node pyGHDL cli,pyGHDL dom,,pyGHDL
@anchor{pyGHDL/pyGHDL cli doc}@anchor{202}@anchor{pyGHDL/pyGHDL cli module-pyGHDL cli}@anchor{1}@anchor{pyGHDL/pyGHDL cli pyghdl-cli}@anchor{203}
@section @code{pyGHDL.cli}


@geindex module; pyGHDL.cli

`Submodules'

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@menu
* pyGHDL.cli.dom: pyGHDL cli dom. 
* pyGHDL.cli.lsp: pyGHDL cli lsp. 

@end menu

@node pyGHDL cli dom,pyGHDL cli lsp,,pyGHDL cli
@anchor{pyGHDL/pyGHDL cli dom doc}@anchor{204}@anchor{pyGHDL/pyGHDL cli dom module-pyGHDL cli dom}@anchor{2}@anchor{pyGHDL/pyGHDL cli dom pyghdl-cli-dom}@anchor{205}
@subsection @code{pyGHDL.cli.dom}


@geindex module; pyGHDL.cli.dom

`Classes'


@itemize -

@item 
@ref{206,,Application}:
A mixin class (interface) to provide class-local terminal writing methods.
@end itemize


__________________________________________________________________


`Classes'

@geindex Application (class in pyGHDL.cli.dom)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application}@anchor{206}
@deffn {Class} pyGHDL.cli.dom.Application (debug=False, verbose=False, quiet=False, sphinx=False)

@subsubheading Inheritance

@image{inheritance-81d5da4fa1d54acf0c7d6616c83c311f3956975e,,,[graphviz],png}

@geindex __init__() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application __init__}@anchor{207}
@deffn {Method} __init__ (debug=False, verbose=False, quiet=False, sphinx=False)

Initializer of a line based terminal interface.
@end deffn

@geindex Debug (pyGHDL.cli.dom.Application property)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application Debug}@anchor{208}
@deffn {Property} Debug:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if debug messages are enabled.
@end deffn

@geindex ExitOnPreviousErrors() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application ExitOnPreviousErrors}@anchor{209}
@deffn {Method} ExitOnPreviousErrors ()

Exit application if errors have been printed.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex ExitOnPreviousWarnings() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application ExitOnPreviousWarnings}@anchor{20a}
@deffn {Method} ExitOnPreviousWarnings ()

Exit application if warnings have been printed.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Foreground (pyGHDL.cli.dom.Application attribute)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application Foreground}@anchor{20b}
@deffn {Attribute} Foreground  =  @{'BLUE': '\x1b[94m', 'CYAN': '\x1b[96m', 'DARK_BLUE': '\x1b[34m', 'DARK_CYAN': '\x1b[36m', 'DARK_GRAY': '\x1b[90m', 'DARK_GREEN': '\x1b[32m', 'DARK_RED': '\x1b[31m', 'DARK_YELLOW': '\x1b[33m', 'ERROR': '\x1b[91m', 'GRAY': '\x1b[37m', 'GREEN': '\x1b[92m', 'HEADLINE': '\x1b[95m', 'MAGENTA': '\x1b[95m', 'NOCOLOR': '\x1b[39m', 'RED': '\x1b[91m', 'WARNING': '\x1b[93m', 'WHITE': '\x1b[97m', 'YELLOW': '\x1b[93m'@}

Terminal colors
@end deffn

@geindex GetAttributes() (pyGHDL.cli.dom.Application static method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application GetAttributes}@anchor{20c}
@deffn {Method} static  GetAttributes (method, filter=<class 'pyAttributes.Attribute'>)

Returns a list of pyAttributes attached to the given method.

@*Return type: 
List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{TAttr}, bound= Attribute)]


@*Parameters: 

@itemize *

@item 
@code{method} (Callable@footnote{https://docs.python.org/3/library/typing.html#typing.Callable}) – 

@item 
@code{filter} (@code{TAttr}@code{ | }Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@code{TAttr}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex GetTerminalSize() (pyGHDL.cli.dom.Application static method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application GetTerminalSize}@anchor{20d}
@deffn {Method} static  GetTerminalSize ()

Returns the terminal size as tuple (width, height) for Windows, Mac OS (Darwin), Linux, cygwin (Windows), MinGW32/64 (Windows).

@*Return type: 
Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[int@footnote{https://docs.python.org/3/library/functions.html#int}, int@footnote{https://docs.python.org/3/library/functions.html#int}]

@end deffn

@geindex HasAttribute() (pyGHDL.cli.dom.Application static method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application HasAttribute}@anchor{20e}
@deffn {Method} static  HasAttribute (method, filter=<class 'pyAttributes.Attribute'>)

Returns true, if the given method has pyAttributes attached.

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 

@itemize *

@item 
@code{method} (Callable@footnote{https://docs.python.org/3/library/typing.html#typing.Callable}) – 

@item 
@code{filter} (@code{TAttr}@code{ | }Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@code{TAttr}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex Height (pyGHDL.cli.dom.Application property)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application Height}@anchor{20f}
@deffn {Property} Height:  int@footnote{https://docs.python.org/3/library/functions.html#int}

Returns the current terminal window’s height.
@end deffn

@geindex LogLevel (pyGHDL.cli.dom.Application property)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application LogLevel}@anchor{210}
@deffn {Property} LogLevel:  Severity

Return the current minimal severity level for writing.
@end deffn

@geindex MainParser (pyGHDL.cli.dom.Application property)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application MainParser}@anchor{211}
@deffn {Property} MainParser:  ArgumentParser@footnote{https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser}

Returns the main parser.
@end deffn

@geindex Quiet (pyGHDL.cli.dom.Application property)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application Quiet}@anchor{212}
@deffn {Property} Quiet:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if quiet mode is enabled.
@end deffn

@geindex SubParsers (pyGHDL.cli.dom.Application property)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application SubParsers}@anchor{213}
@deffn {Property} SubParsers

Returns the sub-parsers.
@end deffn

@geindex Terminal (pyGHDL.cli.dom.Application property)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application Terminal}@anchor{214}
@deffn {Property} Terminal:  Terminal

Return the local terminal instance.
@end deffn

@geindex Verbose (pyGHDL.cli.dom.Application property)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application Verbose}@anchor{215}
@deffn {Property} Verbose:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if verbose messages are enabled.
@end deffn

@geindex Width (pyGHDL.cli.dom.Application property)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application Width}@anchor{216}
@deffn {Property} Width:  int@footnote{https://docs.python.org/3/library/functions.html#int}

Returns the current terminal window’s width.
@end deffn

@geindex WriteDebug() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application WriteDebug}@anchor{217}
@deffn {Method} WriteDebug (message, indent=2, appendLinebreak=True)

Write a debug message if @code{condition} is true.
@end deffn

@geindex WriteDryRun() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application WriteDryRun}@anchor{218}
@deffn {Method} WriteDryRun (message, indent=2, appendLinebreak=True)

Write a dry-run message if @code{condition} is true.
@end deffn

@geindex WriteError() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application WriteError}@anchor{219}
@deffn {Method} WriteError (message, indent=0, appendLinebreak=True)

Write an error message if @code{condition} is true.
@end deffn

@geindex WriteFatal() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application WriteFatal}@anchor{21a}
@deffn {Method} WriteFatal (message, indent=0, appendLinebreak=True, immediateExit=True)

Write a fatal message if @code{condition} is true.
@end deffn

@geindex WriteInfo() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application WriteInfo}@anchor{21b}
@deffn {Method} WriteInfo (message, indent=0, appendLinebreak=True)

Write a info message if @code{condition} is true.
@end deffn

@geindex WriteLine() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application WriteLine}@anchor{21c}
@deffn {Method} WriteLine (line)

Print a formatted line to the underlying terminal/console offered by the operating system.

@*Parameters: 
@code{line} (@code{Line}) – 

@end deffn

@geindex WriteNormal() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application WriteNormal}@anchor{21d}
@deffn {Method} WriteNormal (message, indent=0, appendLinebreak=True)

Write a `normal' message if @code{condition} is true.
@end deffn

@geindex WriteQuiet() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application WriteQuiet}@anchor{21e}
@deffn {Method} WriteQuiet (message, indent=0, appendLinebreak=True)

Write a message even in quiet mode if @code{condition} is true.
@end deffn

@geindex WriteVerbose() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application WriteVerbose}@anchor{21f}
@deffn {Method} WriteVerbose (message, indent=1, appendLinebreak=True)

Write a verbose message if @code{condition} is true.
@end deffn

@geindex WriteWarning() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application WriteWarning}@anchor{220}
@deffn {Method} WriteWarning (message, indent=0, appendLinebreak=True)

Write a warning message if @code{condition} is true.
@end deffn

@geindex _LOG_MESSAGE_FORMAT__ (pyGHDL.cli.dom.Application attribute)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application _LOG_MESSAGE_FORMAT__}@anchor{221}
@deffn {Attribute} _LOG_MESSAGE_FORMAT__  =  @{Severity.Debug: '@{DARK_GRAY@}@{message@}@{NOCOLOR@}', Severity.Verbose: '@{GRAY@}@{message@}@{NOCOLOR@}', Severity.Normal: '@{WHITE@}@{message@}@{NOCOLOR@}', Severity.DryRun: '@{DARK_CYAN@}[DRY] @{message@}@{NOCOLOR@}', Severity.Info: '@{WHITE@}@{message@}@{NOCOLOR@}', Severity.Warning: '@{YELLOW@}[WARNING]@{message@}@{NOCOLOR@}', Severity.Quiet: '@{WHITE@}@{message@}@{NOCOLOR@}', Severity.Error: '@{RED@}[ERROR] @{message@}@{NOCOLOR@}', Severity.Fatal: '@{DARK_RED@}[FATAL] @{message@}@{NOCOLOR@}'@}

Message formatting rules.
@end deffn

@geindex __new__() (pyGHDL.cli.dom.Application method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application __new__}@anchor{222}
@deffn {Method} __new__ (**kwargs)
@end deffn

@geindex _height (pyGHDL.cli.dom.Application attribute)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application _height}@anchor{223}
@deffn {Attribute} _height:  int  =  None

Terminal height in characters
@end deffn

@geindex _width (pyGHDL.cli.dom.Application attribute)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application _width}@anchor{224}
@deffn {Attribute} _width:  int  =  None

Terminal width in characters
@end deffn

@geindex deinitColors() (pyGHDL.cli.dom.Application class method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application deinitColors}@anchor{225}
@deffn {Method} classmethod  deinitColors ()

Uninitialize the terminal for color support by colorama.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex exit() (pyGHDL.cli.dom.Application class method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application exit}@anchor{226}
@deffn {Method} classmethod  exit (returnCode=0)

Exit the terminal application by uninitializing color support and returning an exit code.

@*Return type: 
NoReturn@footnote{https://docs.python.org/3/library/typing.html#typing.NoReturn}


@*Parameters: 
@code{returnCode} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@end deffn

@geindex fatalExit() (pyGHDL.cli.dom.Application class method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application fatalExit}@anchor{227}
@deffn {Method} classmethod  fatalExit (returnCode=0)

Exit the terminal application by uninitializing color support and returning a fatal exit code.

@*Return type: 
NoReturn@footnote{https://docs.python.org/3/library/typing.html#typing.NoReturn}


@*Parameters: 
@code{returnCode} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@end deffn

@geindex initColors() (pyGHDL.cli.dom.Application class method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application initColors}@anchor{228}
@deffn {Method} classmethod  initColors ()

Initialize the terminal for color support by colorama.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex printException() (pyGHDL.cli.dom.Application class method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application printException}@anchor{229}
@deffn {Method} classmethod  printException (ex)

Prints an exception of type Exception@footnote{https://docs.python.org/3/library/exceptions.html#Exception}.

@*Return type: 
NoReturn@footnote{https://docs.python.org/3/library/typing.html#typing.NoReturn}

@end deffn

@geindex printNotImplementedError() (pyGHDL.cli.dom.Application class method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application printNotImplementedError}@anchor{22a}
@deffn {Method} classmethod  printNotImplementedError (ex)

Prints a not-implemented exception of type NotImplementedError@footnote{https://docs.python.org/3/library/exceptions.html#NotImplementedError}.

@*Return type: 
NoReturn@footnote{https://docs.python.org/3/library/typing.html#typing.NoReturn}

@end deffn

@geindex versionCheck() (pyGHDL.cli.dom.Application class method)
@anchor{pyGHDL/pyGHDL cli dom pyGHDL cli dom Application versionCheck}@anchor{22b}
@deffn {Method} classmethod  versionCheck (version)

Check if the used Python interpreter fulfills the minimum version requirements.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL cli lsp,,pyGHDL cli dom,pyGHDL cli
@anchor{pyGHDL/pyGHDL cli lsp doc}@anchor{22c}@anchor{pyGHDL/pyGHDL cli lsp module-pyGHDL cli lsp}@anchor{3}@anchor{pyGHDL/pyGHDL cli lsp pyghdl-cli-lsp}@anchor{22d}
@subsection @code{pyGHDL.cli.lsp}


@geindex module; pyGHDL.cli.lsp

`Functions'


@itemize -

@item 
@ref{22e,,main()}:
Entrypoint of GHDL’s Language Protocol Server.
@end itemize


__________________________________________________________________


`Functions'

@geindex main() (in module pyGHDL.cli.lsp)
@anchor{pyGHDL/pyGHDL cli lsp pyGHDL cli lsp main}@anchor{22e}
@deffn {Function} pyGHDL.cli.lsp.main ()

Entrypoint of GHDL’s Language Protocol Server.
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom,pyGHDL libghdl,pyGHDL cli,pyGHDL
@anchor{pyGHDL/pyGHDL dom doc}@anchor{22f}@anchor{pyGHDL/pyGHDL dom module-pyGHDL dom}@anchor{4}@anchor{pyGHDL/pyGHDL dom pyghdl-dom}@anchor{230}
@section @code{pyGHDL.dom}


@geindex module; pyGHDL.dom

Document object model (DOM) for @ref{1b,,pyGHDL.libghdl} based on pyVHDLModel@footnote{https://vhdl.github.io/pyVHDLModel/index.html}.

`Submodules'

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@menu
* pyGHDL.dom.Aggregates: pyGHDL dom Aggregates. 
* pyGHDL.dom.Attribute: pyGHDL dom Attribute. 
* pyGHDL.dom.Concurrent: pyGHDL dom Concurrent. 
* pyGHDL.dom.DesignUnit: pyGHDL dom DesignUnit. 
* pyGHDL.dom.Expression: pyGHDL dom Expression. 
* pyGHDL.dom.InterfaceItem: pyGHDL dom InterfaceItem. 
* pyGHDL.dom.Literal: pyGHDL dom Literal. 
* pyGHDL.dom.Misc: pyGHDL dom Misc. 
* pyGHDL.dom.Names: pyGHDL dom Names. 
* pyGHDL.dom.NonStandard: pyGHDL dom NonStandard. 
* pyGHDL.dom.Object: pyGHDL dom Object. 
* pyGHDL.dom.PSL: pyGHDL dom PSL. 
* pyGHDL.dom.Range: pyGHDL dom Range. 
* pyGHDL.dom.Sequential: pyGHDL dom Sequential. 
* pyGHDL.dom.Subprogram: pyGHDL dom Subprogram. 
* pyGHDL.dom.Symbol: pyGHDL dom Symbol. 
* pyGHDL.dom.Type: pyGHDL dom Type. 
* pyGHDL.dom._Translate: pyGHDL dom _Translate. 
* pyGHDL.dom._Utils: pyGHDL dom _Utils. 
* pyGHDL.dom.formatting: pyGHDL dom formatting. 

@end menu

@node pyGHDL dom Aggregates,pyGHDL dom Attribute,,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Aggregates doc}@anchor{231}@anchor{pyGHDL/pyGHDL dom Aggregates module-pyGHDL dom Aggregates}@anchor{7}@anchor{pyGHDL/pyGHDL dom Aggregates pyghdl-dom-aggregates}@anchor{232}
@subsection @code{pyGHDL.dom.Aggregates}


@geindex module; pyGHDL.dom.Aggregates

This module contains all DOM classes for VHDL’s design units (@code{context},
@code{architecture}, @code{package},
@code{package body}, @code{context} and
@code{configuration}.

`Classes'


@itemize -

@item 
@ref{233,,SimpleAggregateElement}:
A @code{AggregateElement} is a base-class for all aggregate elements.

@item 
@ref{234,,IndexedAggregateElement}:
A @code{AggregateElement} is a base-class for all aggregate elements.

@item 
@ref{235,,RangedAggregateElement}:
A @code{AggregateElement} is a base-class for all aggregate elements.

@item 
@ref{236,,NamedAggregateElement}:
A @code{AggregateElement} is a base-class for all aggregate elements.

@item 
@ref{237,,OthersAggregateElement}:
A @code{AggregateElement} is a base-class for all aggregate elements.
@end itemize


__________________________________________________________________


`Classes'

@geindex SimpleAggregateElement (class in pyGHDL.dom.Aggregates)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates SimpleAggregateElement}@anchor{233}
@deffn {Class} pyGHDL.dom.Aggregates.SimpleAggregateElement (node, expression)

@subsubheading Inheritance

@image{inheritance-e903e78ed47a0a158d33005ef454a6cb61b75617,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Aggregates.SimpleAggregateElement method)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates SimpleAggregateElement __init__}@anchor{23b}
@deffn {Method} __init__ (node, expression)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Aggregates.SimpleAggregateElement attribute)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates SimpleAggregateElement _parent}@anchor{23c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Aggregates.SimpleAggregateElement property)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates SimpleAggregateElement Parent}@anchor{23d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Aggregates.SimpleAggregateElement method)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates SimpleAggregateElement __str__}@anchor{23e}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex IndexedAggregateElement (class in pyGHDL.dom.Aggregates)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates IndexedAggregateElement}@anchor{234}
@deffn {Class} pyGHDL.dom.Aggregates.IndexedAggregateElement (node, index, expression)

@subsubheading Inheritance

@image{inheritance-564cdff4925a77558be7338e54af360e844ce9bd,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{index} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Aggregates.IndexedAggregateElement method)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates IndexedAggregateElement __init__}@anchor{23f}
@deffn {Method} __init__ (node, index, expression)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{index} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Aggregates.IndexedAggregateElement attribute)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates IndexedAggregateElement _parent}@anchor{240}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Aggregates.IndexedAggregateElement property)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates IndexedAggregateElement Parent}@anchor{241}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Aggregates.IndexedAggregateElement method)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates IndexedAggregateElement __str__}@anchor{242}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex RangedAggregateElement (class in pyGHDL.dom.Aggregates)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates RangedAggregateElement}@anchor{235}
@deffn {Class} pyGHDL.dom.Aggregates.RangedAggregateElement (node, rng, expression)

@subsubheading Inheritance

@image{inheritance-e253caa2fbb30f3590f52946e72180e133dcd133,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{rng} (@ref{243,,Range}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Aggregates.RangedAggregateElement method)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates RangedAggregateElement __init__}@anchor{244}
@deffn {Method} __init__ (node, rng, expression)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{rng} (@ref{243,,Range}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Aggregates.RangedAggregateElement attribute)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates RangedAggregateElement _parent}@anchor{245}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Aggregates.RangedAggregateElement property)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates RangedAggregateElement Parent}@anchor{246}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Aggregates.RangedAggregateElement method)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates RangedAggregateElement __str__}@anchor{247}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex NamedAggregateElement (class in pyGHDL.dom.Aggregates)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates NamedAggregateElement}@anchor{236}
@deffn {Class} pyGHDL.dom.Aggregates.NamedAggregateElement (node, name, expression)

@subsubheading Inheritance

@image{inheritance-bbbb1a95969c9b3aafc36457b024b73ca8dbdb3f,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{name} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Aggregates.NamedAggregateElement method)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates NamedAggregateElement __init__}@anchor{248}
@deffn {Method} __init__ (node, name, expression)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{name} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Aggregates.NamedAggregateElement attribute)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates NamedAggregateElement _parent}@anchor{249}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Aggregates.NamedAggregateElement property)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates NamedAggregateElement Parent}@anchor{24a}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Aggregates.NamedAggregateElement method)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates NamedAggregateElement __str__}@anchor{24b}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex OthersAggregateElement (class in pyGHDL.dom.Aggregates)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates OthersAggregateElement}@anchor{237}
@deffn {Class} pyGHDL.dom.Aggregates.OthersAggregateElement (node, expression)

@subsubheading Inheritance

@image{inheritance-8d752ccb3ca7eef87bb40f8bd366d1fe9a094876,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Aggregates.OthersAggregateElement method)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates OthersAggregateElement __init__}@anchor{24c}
@deffn {Method} __init__ (node, expression)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Aggregates.OthersAggregateElement attribute)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates OthersAggregateElement _parent}@anchor{24d}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Aggregates.OthersAggregateElement property)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates OthersAggregateElement Parent}@anchor{24e}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Aggregates.OthersAggregateElement method)
@anchor{pyGHDL/pyGHDL dom Aggregates pyGHDL dom Aggregates OthersAggregateElement __str__}@anchor{24f}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Attribute,pyGHDL dom Concurrent,pyGHDL dom Aggregates,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Attribute doc}@anchor{250}@anchor{pyGHDL/pyGHDL dom Attribute module-pyGHDL dom Attribute}@anchor{8}@anchor{pyGHDL/pyGHDL dom Attribute pyghdl-dom-attribute}@anchor{251}
@subsection @code{pyGHDL.dom.Attribute}


@geindex module; pyGHDL.dom.Attribute

`Classes'


@itemize -

@item 
@ref{252,,Attribute}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{253,,AttributeSpecification}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple
@end itemize


__________________________________________________________________


`Classes'

@geindex Attribute (class in pyGHDL.dom.Attribute)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute Attribute}@anchor{252}
@deffn {Class} pyGHDL.dom.Attribute.Attribute (node, identifier, subtype, documentation=None)

@subsubheading Inheritance

@image{inheritance-07084f005f16b7dc4b372e5c25a95fd0598968d0,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Attribute.Attribute method)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute Attribute __init__}@anchor{254}
@deffn {Method} __init__ (node, identifier, subtype, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Attribute.Attribute attribute)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute Attribute _parent}@anchor{255}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Attribute.Attribute property)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute Attribute Documentation}@anchor{256}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Attribute.Attribute property)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute Attribute Identifier}@anchor{257}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Attribute.Attribute property)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute Attribute NormalizedIdentifier}@anchor{258}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Attribute.Attribute property)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute Attribute Parent}@anchor{259}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Attribute.Attribute attribute)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute Attribute _identifier}@anchor{25a}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Attribute.Attribute attribute)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute Attribute _normalizedIdentifier}@anchor{25b}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Attribute.Attribute attribute)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute Attribute _documentation}@anchor{25c}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex AttributeSpecification (class in pyGHDL.dom.Attribute)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute AttributeSpecification}@anchor{253}
@deffn {Class} pyGHDL.dom.Attribute.AttributeSpecification (node, identifiers, attribute, entityClass, expression, documentation=None)

@subsubheading Inheritance

@image{inheritance-7fd8352ccec9114c76a887fa3308510580a73184,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}@code{]}) – 

@item 
@code{attribute} (Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 

@item 
@code{entityClass} (EntityClass@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Declaration.html#pyVHDLModel.Declaration.EntityClass}) – 

@item 
@code{expression} (@code{<module 'pyGHDL.dom.Expression' from '/Users/gingold/devel/ghdl/pyGHDL/dom/Expression.py'>}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Attribute.AttributeSpecification method)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute AttributeSpecification __init__}@anchor{25d}
@deffn {Method} __init__ (node, identifiers, attribute, entityClass, expression, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}@code{]}) – 

@item 
@code{attribute} (Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 

@item 
@code{entityClass} (EntityClass@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Declaration.html#pyVHDLModel.Declaration.EntityClass}) – 

@item 
@code{expression} (@code{<module 'pyGHDL.dom.Expression' from '/Users/gingold/devel/ghdl/pyGHDL/dom/Expression.py'>}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Attribute.AttributeSpecification attribute)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute AttributeSpecification _parent}@anchor{25e}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Attribute.AttributeSpecification property)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute AttributeSpecification Documentation}@anchor{25f}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Attribute.AttributeSpecification property)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute AttributeSpecification Parent}@anchor{260}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _documentation (pyGHDL.dom.Attribute.AttributeSpecification attribute)
@anchor{pyGHDL/pyGHDL dom Attribute pyGHDL dom Attribute AttributeSpecification _documentation}@anchor{261}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Concurrent,pyGHDL dom DesignUnit,pyGHDL dom Attribute,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Concurrent doc}@anchor{262}@anchor{pyGHDL/pyGHDL dom Concurrent module-pyGHDL dom Concurrent}@anchor{9}@anchor{pyGHDL/pyGHDL dom Concurrent pyghdl-dom-concurrent}@anchor{263}
@subsection @code{pyGHDL.dom.Concurrent}


@geindex module; pyGHDL.dom.Concurrent

`Classes'


@itemize -

@item 
@ref{264,,GenericAssociationItem}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{265,,PortAssociationItem}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{266,,ParameterAssociationItem}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{267,,ComponentInstantiation}:
A @code{ConcurrentStatement} is a base-class for all concurrent statements.

@item 
@ref{268,,EntityInstantiation}:
A @code{ConcurrentStatement} is a base-class for all concurrent statements.

@item 
@ref{269,,ConfigurationInstantiation}:
A @code{ConcurrentStatement} is a base-class for all concurrent statements.

@item 
@ref{26a,,ConcurrentBlockStatement}:
A @code{ConcurrentStatement} is a base-class for all concurrent statements.

@item 
@ref{26b,,ProcessStatement}:
A @code{ConcurrentStatement} is a base-class for all concurrent statements.

@item 
@ref{26c,,IfGenerateBranch}:
A @code{GenerateBranch} is a base-class for all branches in a generate statements.

@item 
@ref{26d,,ElsifGenerateBranch}:
A @code{GenerateBranch} is a base-class for all branches in a generate statements.

@item 
@ref{26e,,ElseGenerateBranch}:
A @code{GenerateBranch} is a base-class for all branches in a generate statements.

@item 
@ref{26f,,IfGenerateStatement}:
A @code{GenerateStatement} is a base-class for all generate statements.

@item 
@ref{270,,IndexedGenerateChoice}:
A @code{ConcurrentChoice} is a base-class for all concurrent choices (in case…generate statements).

@item 
@ref{271,,RangedGenerateChoice}:
A @code{ConcurrentChoice} is a base-class for all concurrent choices (in case…generate statements).

@item 
@ref{272,,GenerateCase}:
A @code{Case} is a base-class for all cases.

@item 
@ref{273,,OthersGenerateCase}:
A @code{Case} is a base-class for all cases.

@item 
@ref{274,,CaseGenerateStatement}:
A @code{GenerateStatement} is a base-class for all generate statements.

@item 
@ref{275,,ForGenerateStatement}:
A @code{GenerateStatement} is a base-class for all generate statements.

@item 
@ref{276,,WaveformElement}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{277,,ConcurrentSimpleSignalAssignment}:
A @code{ConcurrentStatement} is a base-class for all concurrent statements.

@item 
@ref{278,,ConcurrentProcedureCall}:
A @code{ConcurrentStatement} is a base-class for all concurrent statements.

@item 
@ref{279,,ConcurrentAssertStatement}:
A @code{ConcurrentStatement} is a base-class for all concurrent statements.
@end itemize


__________________________________________________________________


`Classes'

@geindex GenericAssociationItem (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenericAssociationItem}@anchor{264}
@deffn {Class} pyGHDL.dom.Concurrent.GenericAssociationItem (associationNode, actual, formal=None)

@subsubheading Inheritance

@image{inheritance-7cbd0f5f9e2a68d56d7cf66ea8e077a6902b5e7a,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{associationNode} (@code{Iir}) – 

@item 
@code{actual} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{formal} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.GenericAssociationItem method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenericAssociationItem __init__}@anchor{27a}
@deffn {Method} __init__ (associationNode, actual, formal=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{associationNode} (@code{Iir}) – 

@item 
@code{actual} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{formal} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.GenericAssociationItem attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenericAssociationItem _parent}@anchor{27b}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.GenericAssociationItem property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenericAssociationItem Parent}@anchor{27c}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Concurrent.GenericAssociationItem method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenericAssociationItem __str__}@anchor{27d}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex PortAssociationItem (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent PortAssociationItem}@anchor{265}
@deffn {Class} pyGHDL.dom.Concurrent.PortAssociationItem (associationNode, actual, formal=None)

@subsubheading Inheritance

@image{inheritance-057d5ab9a48a5ef4884153a7a8045ebe4b98563f,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{associationNode} (@code{Iir}) – 

@item 
@code{actual} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{formal} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.PortAssociationItem method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent PortAssociationItem __init__}@anchor{27e}
@deffn {Method} __init__ (associationNode, actual, formal=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{associationNode} (@code{Iir}) – 

@item 
@code{actual} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{formal} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.PortAssociationItem attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent PortAssociationItem _parent}@anchor{27f}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.PortAssociationItem property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent PortAssociationItem Parent}@anchor{280}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Concurrent.PortAssociationItem method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent PortAssociationItem __str__}@anchor{281}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex ParameterAssociationItem (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ParameterAssociationItem}@anchor{266}
@deffn {Class} pyGHDL.dom.Concurrent.ParameterAssociationItem (associationNode, actual, formal=None)

@subsubheading Inheritance

@image{inheritance-15fb694f1e43ca5297e9c576af4618c6892b5666,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{associationNode} (@code{Iir}) – 

@item 
@code{actual} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{formal} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.ParameterAssociationItem method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ParameterAssociationItem __init__}@anchor{282}
@deffn {Method} __init__ (associationNode, actual, formal=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{associationNode} (@code{Iir}) – 

@item 
@code{actual} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{formal} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.ParameterAssociationItem attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ParameterAssociationItem _parent}@anchor{283}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.ParameterAssociationItem property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ParameterAssociationItem Parent}@anchor{284}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Concurrent.ParameterAssociationItem method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ParameterAssociationItem __str__}@anchor{285}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex ComponentInstantiation (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ComponentInstantiation}@anchor{267}
@deffn {Class} pyGHDL.dom.Concurrent.ComponentInstantiation (instantiationNode, label, componentSymbol, genericAssociations=None, portAssociations=None)

@subsubheading Inheritance

@image{inheritance-47d43e8817182605956ccc52df0d3a92963b694e,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{instantiationNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{componentSymbol} (@ref{286,,ComponentInstantiationSymbol}) – 

@item 
@code{genericAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{]}) – 

@item 
@code{portAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.ComponentInstantiation method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ComponentInstantiation __init__}@anchor{287}
@deffn {Method} __init__ (instantiationNode, label, componentSymbol, genericAssociations=None, portAssociations=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{instantiationNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{componentSymbol} (@ref{286,,ComponentInstantiationSymbol}) – 

@item 
@code{genericAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{] }@code{| }@code{None}) – 

@item 
@code{portAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.ComponentInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ComponentInstantiation _parent}@anchor{288}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Concurrent.ComponentInstantiation property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ComponentInstantiation Label}@anchor{289}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.ComponentInstantiation property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ComponentInstantiation NormalizedLabel}@anchor{28a}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.ComponentInstantiation property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ComponentInstantiation Parent}@anchor{28b}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.ComponentInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ComponentInstantiation _label}@anchor{28c}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.ComponentInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ComponentInstantiation _normalizedLabel}@anchor{28d}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex EntityInstantiation (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent EntityInstantiation}@anchor{268}
@deffn {Class} pyGHDL.dom.Concurrent.EntityInstantiation (instantiationNode, label, entitySymbol, architectureSymbol=None, genericAssociations=None, portAssociations=None)

@subsubheading Inheritance

@image{inheritance-a32a380d5825bd579a3a10a1a731f90873def47a,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{instantiationNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{entitySymbol} (@ref{28e,,EntityInstantiationSymbol}) – 

@item 
@code{architectureSymbol} (@ref{28f,,ArchitectureSymbol}) – 

@item 
@code{genericAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{]}) – 

@item 
@code{portAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.EntityInstantiation method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent EntityInstantiation __init__}@anchor{290}
@deffn {Method} __init__ (instantiationNode, label, entitySymbol, architectureSymbol=None, genericAssociations=None, portAssociations=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{instantiationNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{entitySymbol} (@ref{28e,,EntityInstantiationSymbol}) – 

@item 
@code{architectureSymbol} (@ref{28f,,ArchitectureSymbol}@code{ | }@code{None}) – 

@item 
@code{genericAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{] }@code{| }@code{None}) – 

@item 
@code{portAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.EntityInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent EntityInstantiation _parent}@anchor{291}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Concurrent.EntityInstantiation property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent EntityInstantiation Label}@anchor{292}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.EntityInstantiation property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent EntityInstantiation NormalizedLabel}@anchor{293}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.EntityInstantiation property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent EntityInstantiation Parent}@anchor{294}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.EntityInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent EntityInstantiation _label}@anchor{295}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.EntityInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent EntityInstantiation _normalizedLabel}@anchor{296}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex ConfigurationInstantiation (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConfigurationInstantiation}@anchor{269}
@deffn {Class} pyGHDL.dom.Concurrent.ConfigurationInstantiation (instantiationNode, label, configurationSymbol, genericAssociations=None, portAssociations=None)

@subsubheading Inheritance

@image{inheritance-b2de5a58e12e8043a61dcbbc4380b54ed7f9b796,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{instantiationNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{configurationSymbol} (@ref{297,,ConfigurationInstantiationSymbol}) – 

@item 
@code{genericAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{]}) – 

@item 
@code{portAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.ConfigurationInstantiation method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConfigurationInstantiation __init__}@anchor{298}
@deffn {Method} __init__ (instantiationNode, label, configurationSymbol, genericAssociations=None, portAssociations=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{instantiationNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{configurationSymbol} (@ref{297,,ConfigurationInstantiationSymbol}) – 

@item 
@code{genericAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{] }@code{| }@code{None}) – 

@item 
@code{portAssociations} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}AssociationItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Association.html#pyVHDLModel.Association.AssociationItem}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.ConfigurationInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConfigurationInstantiation _parent}@anchor{299}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Concurrent.ConfigurationInstantiation property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConfigurationInstantiation Label}@anchor{29a}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.ConfigurationInstantiation property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConfigurationInstantiation NormalizedLabel}@anchor{29b}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.ConfigurationInstantiation property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConfigurationInstantiation Parent}@anchor{29c}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.ConfigurationInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConfigurationInstantiation _label}@anchor{29d}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.ConfigurationInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConfigurationInstantiation _normalizedLabel}@anchor{29e}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex ConcurrentBlockStatement (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentBlockStatement}@anchor{26a}
@deffn {Class} pyGHDL.dom.Concurrent.ConcurrentBlockStatement (blockNode, label, declaredItems=None, statements=None)

@subsubheading Inheritance

@image{inheritance-4aa862aa39934adc75799140fe684fd0474fcde6,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{blockNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@code{ConcurrentStatement}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.ConcurrentBlockStatement method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentBlockStatement __init__}@anchor{29f}
@deffn {Method} __init__ (blockNode, label, declaredItems=None, statements=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{blockNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{ | }@code{None}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.ConcurrentBlockStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentBlockStatement _parent}@anchor{2a0}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Concurrent.ConcurrentBlockStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentBlockStatement Documentation}@anchor{2a1}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Label (pyGHDL.dom.Concurrent.ConcurrentBlockStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentBlockStatement Label}@anchor{2a2}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.ConcurrentBlockStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentBlockStatement NormalizedLabel}@anchor{2a3}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.ConcurrentBlockStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentBlockStatement Parent}@anchor{2a4}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.ConcurrentBlockStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentBlockStatement _label}@anchor{2a5}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.ConcurrentBlockStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentBlockStatement _normalizedLabel}@anchor{2a6}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Concurrent.ConcurrentBlockStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentBlockStatement _documentation}@anchor{2a7}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex ProcessStatement (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ProcessStatement}@anchor{26b}
@deffn {Class} pyGHDL.dom.Concurrent.ProcessStatement (processNode, label=None, declaredItems=None, statements=None, sensitivityList=None)

@subsubheading Inheritance

@image{inheritance-313dd791dc2af3bd1a1bc60edf105fea56f06e79,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{processNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{]}) – 

@item 
@code{sensitivityList} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.ProcessStatement method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ProcessStatement __init__}@anchor{2a8}
@deffn {Method} __init__ (processNode, label=None, declaredItems=None, statements=None, sensitivityList=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{processNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{ | }@code{None}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{] }@code{| }@code{None}) – 

@item 
@code{sensitivityList} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.ProcessStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ProcessStatement _parent}@anchor{2a9}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Concurrent.ProcessStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ProcessStatement Documentation}@anchor{2aa}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Label (pyGHDL.dom.Concurrent.ProcessStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ProcessStatement Label}@anchor{2ab}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.ProcessStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ProcessStatement NormalizedLabel}@anchor{2ac}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.ProcessStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ProcessStatement Parent}@anchor{2ad}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.ProcessStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ProcessStatement _label}@anchor{2ae}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.ProcessStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ProcessStatement _normalizedLabel}@anchor{2af}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Concurrent.ProcessStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ProcessStatement _documentation}@anchor{2b0}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex IfGenerateBranch (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateBranch}@anchor{26c}
@deffn {Class} pyGHDL.dom.Concurrent.IfGenerateBranch (branchNode, condition, declaredItems=None, statements=None, alternativeLabel=None)

@subsubheading Inheritance

@image{inheritance-3e30d24cd75aa3e94b2f59d3511040b17b7266ae,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{]}) – 

@item 
@code{alternativeLabel} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.IfGenerateBranch method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateBranch __init__}@anchor{2b1}
@deffn {Method} __init__ (branchNode, condition, declaredItems=None, statements=None, alternativeLabel=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{]}) – 

@item 
@code{alternativeLabel} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.IfGenerateBranch attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateBranch _parent}@anchor{2b2}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.IfGenerateBranch property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateBranch Parent}@anchor{2b3}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn
@end deffn

@geindex ElsifGenerateBranch (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ElsifGenerateBranch}@anchor{26d}
@deffn {Class} pyGHDL.dom.Concurrent.ElsifGenerateBranch (branchNode, condition, declaredItems=None, statements=None, alternativeLabel=None)

@subsubheading Inheritance

@image{inheritance-b69fcc2bda431c6f06c570426021af8dfef4f37f,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{]}) – 

@item 
@code{alternativeLabel} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.ElsifGenerateBranch method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ElsifGenerateBranch __init__}@anchor{2b4}
@deffn {Method} __init__ (branchNode, condition, declaredItems=None, statements=None, alternativeLabel=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{]}) – 

@item 
@code{alternativeLabel} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.ElsifGenerateBranch attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ElsifGenerateBranch _parent}@anchor{2b5}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.ElsifGenerateBranch property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ElsifGenerateBranch Parent}@anchor{2b6}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn
@end deffn

@geindex ElseGenerateBranch (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ElseGenerateBranch}@anchor{26e}
@deffn {Class} pyGHDL.dom.Concurrent.ElseGenerateBranch (branchNode, declaredItems=None, statements=None, alternativeLabel=None)

@subsubheading Inheritance

@image{inheritance-36e83f80cc8097311847407a04eddb87d79ac706,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{]}) – 

@item 
@code{alternativeLabel} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.ElseGenerateBranch method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ElseGenerateBranch __init__}@anchor{2b7}
@deffn {Method} __init__ (branchNode, declaredItems=None, statements=None, alternativeLabel=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{ | }@code{None}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{] }@code{| }@code{None}) – 

@item 
@code{alternativeLabel} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.ElseGenerateBranch attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ElseGenerateBranch _parent}@anchor{2b8}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.ElseGenerateBranch property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ElseGenerateBranch Parent}@anchor{2b9}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn
@end deffn

@geindex IfGenerateStatement (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateStatement}@anchor{26f}
@deffn {Class} pyGHDL.dom.Concurrent.IfGenerateStatement (generateNode, label, ifBranch, elsifBranches=None, elseBranch=None)

@subsubheading Inheritance

@image{inheritance-c1f2d5705bf65eea1cd9e547dd7edcf1889e8016,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{generateNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{ifBranch} (@ref{26c,,IfGenerateBranch}) – 

@item 
@code{elsifBranches} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{26d,,ElsifGenerateBranch}@code{]}) – 

@item 
@code{elseBranch} (@ref{26e,,ElseGenerateBranch}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.IfGenerateStatement method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateStatement __init__}@anchor{2ba}
@deffn {Method} __init__ (generateNode, label, ifBranch, elsifBranches=None, elseBranch=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{generateNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{ifBranch} (@ref{26c,,IfGenerateBranch}) – 

@item 
@code{elsifBranches} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{26d,,ElsifGenerateBranch}@code{] }@code{| }@code{None}) – 

@item 
@code{elseBranch} (@ref{26e,,ElseGenerateBranch}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.IfGenerateStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateStatement _parent}@anchor{2bb}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Concurrent.IfGenerateStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateStatement Label}@anchor{2bc}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.IfGenerateStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateStatement NormalizedLabel}@anchor{2bd}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.IfGenerateStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateStatement Parent}@anchor{2be}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.IfGenerateStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateStatement _label}@anchor{2bf}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.IfGenerateStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IfGenerateStatement _normalizedLabel}@anchor{2c0}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex IndexedGenerateChoice (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IndexedGenerateChoice}@anchor{270}
@deffn {Class} pyGHDL.dom.Concurrent.IndexedGenerateChoice (node, expression)

@subsubheading Inheritance

@image{inheritance-b2ada4fe65b796d82a6d8b6a3ebe217262d50d24,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.IndexedGenerateChoice method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IndexedGenerateChoice __init__}@anchor{2c1}
@deffn {Method} __init__ (node, expression)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.IndexedGenerateChoice attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IndexedGenerateChoice _parent}@anchor{2c2}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.IndexedGenerateChoice property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IndexedGenerateChoice Parent}@anchor{2c3}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Concurrent.IndexedGenerateChoice method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent IndexedGenerateChoice __str__}@anchor{2c4}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex RangedGenerateChoice (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent RangedGenerateChoice}@anchor{271}
@deffn {Class} pyGHDL.dom.Concurrent.RangedGenerateChoice (node, rng)

@subsubheading Inheritance

@image{inheritance-a844e037b57f321bd50ed888e4d07c386c53af4b,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{rng} (@ref{243,,Range}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.RangedGenerateChoice method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent RangedGenerateChoice __init__}@anchor{2c5}
@deffn {Method} __init__ (node, rng)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{rng} (@ref{243,,Range}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.RangedGenerateChoice attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent RangedGenerateChoice _parent}@anchor{2c6}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.RangedGenerateChoice property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent RangedGenerateChoice Parent}@anchor{2c7}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Concurrent.RangedGenerateChoice method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent RangedGenerateChoice __str__}@anchor{2c8}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex GenerateCase (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenerateCase}@anchor{272}
@deffn {Class} pyGHDL.dom.Concurrent.GenerateCase (node, choices, declaredItems=None, statements=None, alternativeLabel=None)

@subsubheading Inheritance

@image{inheritance-42157635e30f84f5abaa8b8cc65494fb218ded64,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{choices} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentChoice@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentChoice}@code{]}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{]}) – 

@item 
@code{alternativeLabel} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.GenerateCase method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenerateCase __init__}@anchor{2c9}
@deffn {Method} __init__ (node, choices, declaredItems=None, statements=None, alternativeLabel=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{choices} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentChoice@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentChoice}@code{]}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{ | }@code{None}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{] }@code{| }@code{None}) – 

@item 
@code{alternativeLabel} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.GenerateCase attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenerateCase _parent}@anchor{2ca}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Concurrent.GenerateCase property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenerateCase Label}@anchor{2cb}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.GenerateCase property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenerateCase NormalizedLabel}@anchor{2cc}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.GenerateCase property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenerateCase Parent}@anchor{2cd}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Concurrent.GenerateCase method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenerateCase __str__}@anchor{2ce}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.GenerateCase attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenerateCase _label}@anchor{2cf}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.GenerateCase attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent GenerateCase _normalizedLabel}@anchor{2d0}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex OthersGenerateCase (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent OthersGenerateCase}@anchor{273}
@deffn {Class} pyGHDL.dom.Concurrent.OthersGenerateCase (caseNode, declaredItems=None, statements=None, alternativeLabel=None)

@subsubheading Inheritance

@image{inheritance-a532495bb0d7f8464d61ac52209f60104d5e4ad9,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{caseNode} (@code{Iir}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{]}) – 

@item 
@code{alternativeLabel} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.OthersGenerateCase method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent OthersGenerateCase __init__}@anchor{2d1}
@deffn {Method} __init__ (caseNode, declaredItems=None, statements=None, alternativeLabel=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{caseNode} (@code{Iir}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{ | }@code{None}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{] }@code{| }@code{None}) – 

@item 
@code{alternativeLabel} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.OthersGenerateCase attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent OthersGenerateCase _parent}@anchor{2d2}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Concurrent.OthersGenerateCase property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent OthersGenerateCase Label}@anchor{2d3}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.OthersGenerateCase property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent OthersGenerateCase NormalizedLabel}@anchor{2d4}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.OthersGenerateCase property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent OthersGenerateCase Parent}@anchor{2d5}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Concurrent.OthersGenerateCase method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent OthersGenerateCase __str__}@anchor{2d6}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.OthersGenerateCase attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent OthersGenerateCase _label}@anchor{2d7}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.OthersGenerateCase attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent OthersGenerateCase _normalizedLabel}@anchor{2d8}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex CaseGenerateStatement (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent CaseGenerateStatement}@anchor{274}
@deffn {Class} pyGHDL.dom.Concurrent.CaseGenerateStatement (generateNode, label, expression, cases)

@subsubheading Inheritance

@image{inheritance-24ad9c60b35d57ce2bd7fe2427b6d41a34a10bea,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{generateNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{cases} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentCase@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentCase}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.CaseGenerateStatement method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent CaseGenerateStatement __init__}@anchor{2d9}
@deffn {Method} __init__ (generateNode, label, expression, cases)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{generateNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{cases} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentCase@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentCase}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.CaseGenerateStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent CaseGenerateStatement _parent}@anchor{2da}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Concurrent.CaseGenerateStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent CaseGenerateStatement Label}@anchor{2db}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.CaseGenerateStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent CaseGenerateStatement NormalizedLabel}@anchor{2dc}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.CaseGenerateStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent CaseGenerateStatement Parent}@anchor{2dd}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.CaseGenerateStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent CaseGenerateStatement _label}@anchor{2de}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.CaseGenerateStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent CaseGenerateStatement _normalizedLabel}@anchor{2df}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex ForGenerateStatement (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ForGenerateStatement}@anchor{275}
@deffn {Class} pyGHDL.dom.Concurrent.ForGenerateStatement (generateNode, label, loopIndex, rng, declaredItems=None, statements=None)

@subsubheading Inheritance

@image{inheritance-570a7c4a9a439f8b38be0909077a13dd1b78727a,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{generateNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{loopIndex} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{rng} (@ref{243,,Range}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.ForGenerateStatement method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ForGenerateStatement __init__}@anchor{2e0}
@deffn {Method} __init__ (generateNode, label, loopIndex, rng, declaredItems=None, statements=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{generateNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{loopIndex} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{rng} (@ref{243,,Range}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{ | }@code{None}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.ForGenerateStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ForGenerateStatement _parent}@anchor{2e1}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Concurrent.ForGenerateStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ForGenerateStatement Label}@anchor{2e2}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.ForGenerateStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ForGenerateStatement NormalizedLabel}@anchor{2e3}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.ForGenerateStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ForGenerateStatement Parent}@anchor{2e4}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.ForGenerateStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ForGenerateStatement _label}@anchor{2e5}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.ForGenerateStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ForGenerateStatement _normalizedLabel}@anchor{2e6}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex WaveformElement (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent WaveformElement}@anchor{276}
@deffn {Class} pyGHDL.dom.Concurrent.WaveformElement (waveNode, expression, after)

@subsubheading Inheritance

@image{inheritance-fa2b94ee8538534d04f8bcc17efb91623be28e74,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{waveNode} (@code{Iir}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{after} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.WaveformElement method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent WaveformElement __init__}@anchor{2e7}
@deffn {Method} __init__ (waveNode, expression, after)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{waveNode} (@code{Iir}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{after} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.WaveformElement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent WaveformElement _parent}@anchor{2e8}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.WaveformElement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent WaveformElement Parent}@anchor{2e9}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn
@end deffn

@geindex ConcurrentSimpleSignalAssignment (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentSimpleSignalAssignment}@anchor{277}
@deffn {Class} pyGHDL.dom.Concurrent.ConcurrentSimpleSignalAssignment (assignmentNode, label, target, waveform)

@subsubheading Inheritance

@image{inheritance-01f182da41719c74626b2084ebb2c78894f5a214,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{assignmentNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{target} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{waveform} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{276,,WaveformElement}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.ConcurrentSimpleSignalAssignment method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentSimpleSignalAssignment __init__}@anchor{2ea}
@deffn {Method} __init__ (assignmentNode, label, target, waveform)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{assignmentNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{target} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{waveform} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{276,,WaveformElement}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.ConcurrentSimpleSignalAssignment attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentSimpleSignalAssignment _parent}@anchor{2eb}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Concurrent.ConcurrentSimpleSignalAssignment property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentSimpleSignalAssignment Label}@anchor{2ec}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.ConcurrentSimpleSignalAssignment property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentSimpleSignalAssignment NormalizedLabel}@anchor{2ed}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.ConcurrentSimpleSignalAssignment property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentSimpleSignalAssignment Parent}@anchor{2ee}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.ConcurrentSimpleSignalAssignment attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentSimpleSignalAssignment _label}@anchor{2ef}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.ConcurrentSimpleSignalAssignment attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentSimpleSignalAssignment _normalizedLabel}@anchor{2f0}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex ConcurrentProcedureCall (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentProcedureCall}@anchor{278}
@deffn {Class} pyGHDL.dom.Concurrent.ConcurrentProcedureCall (callNode, label, procedureName, parameterMappings)

@subsubheading Inheritance

@image{inheritance-7566fabf639a1f305d652a69d1306d47f84c31d5,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{callNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{procedureName} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{parameterMappings} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.ConcurrentProcedureCall method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentProcedureCall __init__}@anchor{2f1}
@deffn {Method} __init__ (callNode, label, procedureName, parameterMappings)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{callNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{procedureName} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{parameterMappings} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.ConcurrentProcedureCall attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentProcedureCall _parent}@anchor{2f2}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Concurrent.ConcurrentProcedureCall property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentProcedureCall Label}@anchor{2f3}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.ConcurrentProcedureCall property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentProcedureCall NormalizedLabel}@anchor{2f4}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.ConcurrentProcedureCall property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentProcedureCall Parent}@anchor{2f5}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.ConcurrentProcedureCall attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentProcedureCall _label}@anchor{2f6}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.ConcurrentProcedureCall attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentProcedureCall _normalizedLabel}@anchor{2f7}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex ConcurrentAssertStatement (class in pyGHDL.dom.Concurrent)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentAssertStatement}@anchor{279}
@deffn {Class} pyGHDL.dom.Concurrent.ConcurrentAssertStatement (assertNode, condition, message=None, severity=None, label=None)

@subsubheading Inheritance

@image{inheritance-f9616d8d547c255e5c7096ec4b93ed0af0d8319a,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{assertNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{message} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{severity} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Concurrent.ConcurrentAssertStatement method)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentAssertStatement __init__}@anchor{2f8}
@deffn {Method} __init__ (assertNode, condition, message=None, severity=None, label=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{assertNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{message} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{severity} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Concurrent.ConcurrentAssertStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentAssertStatement _parent}@anchor{2f9}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Concurrent.ConcurrentAssertStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentAssertStatement Label}@anchor{2fa}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Concurrent.ConcurrentAssertStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentAssertStatement NormalizedLabel}@anchor{2fb}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Concurrent.ConcurrentAssertStatement property)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentAssertStatement Parent}@anchor{2fc}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Concurrent.ConcurrentAssertStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentAssertStatement _label}@anchor{2fd}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Concurrent.ConcurrentAssertStatement attribute)
@anchor{pyGHDL/pyGHDL dom Concurrent pyGHDL dom Concurrent ConcurrentAssertStatement _normalizedLabel}@anchor{2fe}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom DesignUnit,pyGHDL dom Expression,pyGHDL dom Concurrent,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom DesignUnit doc}@anchor{2ff}@anchor{pyGHDL/pyGHDL dom DesignUnit module-pyGHDL dom DesignUnit}@anchor{a}@anchor{pyGHDL/pyGHDL dom DesignUnit pyghdl-dom-designunit}@anchor{300}
@subsection @code{pyGHDL.dom.DesignUnit}


@geindex module; pyGHDL.dom.DesignUnit

This module contains all DOM classes for VHDL’s design units (@ref{301,,context},
@ref{302,,architecture}, @ref{303,,package},
@ref{304,,package body}, @ref{305,,context} and
@ref{306,,configuration}.

`Classes'


@itemize -

@item 
@ref{307,,LibraryClause}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{308,,UseClause}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{309,,ContextReference}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{301,,Entity}:
A @code{PrimaryUnit} is a base-class for all primary units.

@item 
@ref{302,,Architecture}:
A @code{SecondaryUnit} is a base-class for all secondary units.

@item 
@ref{30a,,Component}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{303,,Package}:
A @code{PrimaryUnit} is a base-class for all primary units.

@item 
@ref{304,,PackageBody}:
A @code{SecondaryUnit} is a base-class for all secondary units.

@item 
@ref{30b,,PackageInstantiation}:
A @code{PrimaryUnit} is a base-class for all primary units.

@item 
@ref{305,,Context}:
A @code{PrimaryUnit} is a base-class for all primary units.

@item 
@ref{306,,Configuration}:
A @code{PrimaryUnit} is a base-class for all primary units.
@end itemize


__________________________________________________________________


`Classes'

@geindex LibraryClause (class in pyGHDL.dom.DesignUnit)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit LibraryClause}@anchor{307}
@deffn {Class} pyGHDL.dom.DesignUnit.LibraryClause (libraryNode, symbols)

@subsubheading Inheritance

@image{inheritance-62729eeb258976419cef597a8cb5431eb3a56244,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{libraryNode} (@code{Iir}) – 

@item 
@code{symbols} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.DesignUnit.LibraryClause method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit LibraryClause __init__}@anchor{30c}
@deffn {Method} __init__ (libraryNode, symbols)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{libraryNode} (@code{Iir}) – 

@item 
@code{symbols} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.DesignUnit.LibraryClause attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit LibraryClause _parent}@anchor{30d}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.DesignUnit.LibraryClause property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit LibraryClause Parent}@anchor{30e}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn
@end deffn

@geindex UseClause (class in pyGHDL.dom.DesignUnit)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit UseClause}@anchor{308}
@deffn {Class} pyGHDL.dom.DesignUnit.UseClause (useNode, symbols)

@subsubheading Inheritance

@image{inheritance-81bdeec33a0ee1dd2a5bac99cbe188c7a361e6fb,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{useNode} (@code{Iir}) – 

@item 
@code{symbols} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.DesignUnit.UseClause method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit UseClause __init__}@anchor{30f}
@deffn {Method} __init__ (useNode, symbols)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{useNode} (@code{Iir}) – 

@item 
@code{symbols} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.DesignUnit.UseClause attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit UseClause _parent}@anchor{310}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.DesignUnit.UseClause property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit UseClause Parent}@anchor{311}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn
@end deffn

@geindex ContextReference (class in pyGHDL.dom.DesignUnit)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit ContextReference}@anchor{309}
@deffn {Class} pyGHDL.dom.DesignUnit.ContextReference (contextNode, symbols)

@subsubheading Inheritance

@image{inheritance-6a912771954cc30a36ba1441dcab396f9a1468e3,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{contextNode} (@code{Iir}) – 

@item 
@code{symbols} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.DesignUnit.ContextReference method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit ContextReference __init__}@anchor{312}
@deffn {Method} __init__ (contextNode, symbols)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{contextNode} (@code{Iir}) – 

@item 
@code{symbols} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.DesignUnit.ContextReference attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit ContextReference _parent}@anchor{313}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.DesignUnit.ContextReference property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit ContextReference Parent}@anchor{314}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn
@end deffn

@geindex Entity (class in pyGHDL.dom.DesignUnit)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity}@anchor{301}
@deffn {Class} pyGHDL.dom.DesignUnit.Entity (node, identifier, contextItems=None, genericItems=None, portItems=None, declaredItems=None, statements=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-03b696cfbe34bf1d2d7661b2274b92a32490c420,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{contextItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{307,,LibraryClause}@code{ | }@ref{308,,UseClause}@code{ | }@ref{309,,ContextReference}@code{]}) – 

@item 
@code{genericItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}GenericInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.GenericInterfaceItem}@code{]}) – 

@item 
@code{portItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}PortInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.PortInterfaceItem}@code{]}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@code{ConcurrentStatement}@code{]}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.DesignUnit.Entity method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity __init__}@anchor{315}
@deffn {Method} __init__ (node, identifier, contextItems=None, genericItems=None, portItems=None, declaredItems=None, statements=None, documentation=None)

Initializes a design unit.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Identifier (name) of the design unit.

@item 
@code{contextItems} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}[Union@footnote{https://docs.python.org/3/library/typing.html#typing.Union}[@ref{307,,LibraryClause}, @ref{308,,UseClause}, @ref{309,,ContextReference}]]]) – A sequence of library, use or context clauses.

@item 
@code{documentation} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]) – Associated documentation of the design unit.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{genericItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}GenericInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.GenericInterfaceItem}@code{] }@code{| }@code{None}) – 

@item 
@code{portItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}PortInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.PortInterfaceItem}@code{] }@code{| }@code{None}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{ | }@code{None}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _parent}@anchor{316}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex ContextItems (pyGHDL.dom.DesignUnit.Entity property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity ContextItems}@anchor{317}
@deffn {Property} ContextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[@ref{307,,LibraryClause}  |  @ref{308,,UseClause}  |  @ref{309,,ContextReference}]

Read-only property to access the sequence of all context items comprising library, use and context clauses
(@ref{318,,_contextItems}).

@*Returns: 
Sequence of context items.

@end deffn

@geindex ContextReferences (pyGHDL.dom.DesignUnit.Entity property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity ContextReferences}@anchor{319}
@deffn {Property} ContextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.ContextReference}]

Read-only property to access the sequence of context clauses (@ref{31a,,_contextReferences}).

@*Returns: 
Sequence of context clauses.

@end deffn

@geindex Documentation (pyGHDL.dom.DesignUnit.Entity property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity Documentation}@anchor{31b}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.DesignUnit.Entity property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity Identifier}@anchor{31c}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex LibraryReferences (pyGHDL.dom.DesignUnit.Entity property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity LibraryReferences}@anchor{31d}
@deffn {Property} LibraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.LibraryClause}]

Read-only property to access the sequence of library clauses (@ref{31e,,_libraryReferences}).

@*Returns: 
Sequence of library clauses.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.DesignUnit.Entity property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity NormalizedIdentifier}@anchor{31f}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex PackageReferences (pyGHDL.dom.DesignUnit.Entity property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity PackageReferences}@anchor{320}
@deffn {Property} PackageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.UseClause}]

Read-only property to access the sequence of use clauses (@ref{321,,_packageReferences}).

@*Returns: 
Sequence of use clauses.

@end deffn

@geindex Parent (pyGHDL.dom.DesignUnit.Entity property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity Parent}@anchor{322}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __repr__() (pyGHDL.dom.DesignUnit.Entity method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity __repr__}@anchor{323}
@deffn {Method} __repr__ ()

Return repr(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex __str__() (pyGHDL.dom.DesignUnit.Entity method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity __str__}@anchor{324}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex _library (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _library}@anchor{325}
@deffn {Attribute} _library:  Library

The VHDL library, the design unit was analyzed into.
@end deffn

@geindex _contextItems (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _contextItems}@anchor{318}
@deffn {Attribute} _contextItems:  List['ContextUnion']

List of all context items (library, use and context clauses).
@end deffn

@geindex _libraryReferences (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _libraryReferences}@anchor{31e}
@deffn {Attribute} _libraryReferences:  List['LibraryClause']

List of library clauses.
@end deffn

@geindex _packageReferences (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _packageReferences}@anchor{321}
@deffn {Attribute} _packageReferences:  List['UseClause']

List of use clauses.
@end deffn

@geindex _contextReferences (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _contextReferences}@anchor{31a}
@deffn {Attribute} _contextReferences:  List['ContextReference']

List of context clauses.
@end deffn

@geindex _referencedLibraries (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _referencedLibraries}@anchor{326}
@deffn {Attribute} _referencedLibraries:  Dict[str, 'Library']

Referenced libraries based on explicit library clauses or implicit inheritance
@end deffn

@geindex _referencedPackages (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _referencedPackages}@anchor{327}
@deffn {Attribute} _referencedPackages:  Dict[str, Dict[str, 'Package']]

Referenced packages based on explicit use clauses or implicit inheritance
@end deffn

@geindex _referencedContexts (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _referencedContexts}@anchor{328}
@deffn {Attribute} _referencedContexts:  Dict[str, 'Context']

Referenced contexts based on explicit context references or implicit inheritance
@end deffn

@geindex _dependencyVertex (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _dependencyVertex}@anchor{329}
@deffn {Attribute} _dependencyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the dependency graph
@end deffn

@geindex _hierarchyVertex (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _hierarchyVertex}@anchor{32a}
@deffn {Attribute} _hierarchyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the hierarchy graph
@end deffn

@geindex _identifier (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _identifier}@anchor{32b}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _normalizedIdentifier}@anchor{32c}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.DesignUnit.Entity attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Entity _documentation}@anchor{32d}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex Architecture (class in pyGHDL.dom.DesignUnit)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture}@anchor{302}
@deffn {Class} pyGHDL.dom.DesignUnit.Architecture (node, identifier, entity, contextItems=None, declaredItems=None, statements=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-6c6e8c0bbb90b7568610dc099851c726c2203d8c,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{entity} (@ref{32e,,EntitySymbol}) – 

@item 
@code{contextItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{307,,LibraryClause}@code{ | }@ref{308,,UseClause}@code{ | }@ref{309,,ContextReference}@code{]}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@code{ConcurrentStatement}@code{]}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.DesignUnit.Architecture method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture __init__}@anchor{32f}
@deffn {Method} __init__ (node, identifier, entity, contextItems=None, declaredItems=None, statements=None, documentation=None)

Initializes a design unit.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Identifier (name) of the design unit.

@item 
@code{contextItems} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}[Union@footnote{https://docs.python.org/3/library/typing.html#typing.Union}[@ref{307,,LibraryClause}, @ref{308,,UseClause}, @ref{309,,ContextReference}]]]) – A sequence of library, use or context clauses.

@item 
@code{documentation} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]) – Associated documentation of the design unit.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{entity} (@ref{32e,,EntitySymbol}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{ | }@code{None}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}ConcurrentStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Concurrent.html#pyVHDLModel.Concurrent.ConcurrentStatement}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _parent}@anchor{330}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex ContextItems (pyGHDL.dom.DesignUnit.Architecture property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture ContextItems}@anchor{331}
@deffn {Property} ContextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[@ref{307,,LibraryClause}  |  @ref{308,,UseClause}  |  @ref{309,,ContextReference}]

Read-only property to access the sequence of all context items comprising library, use and context clauses
(@ref{332,,_contextItems}).

@*Returns: 
Sequence of context items.

@end deffn

@geindex ContextReferences (pyGHDL.dom.DesignUnit.Architecture property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture ContextReferences}@anchor{333}
@deffn {Property} ContextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.ContextReference}]

Read-only property to access the sequence of context clauses (@ref{334,,_contextReferences}).

@*Returns: 
Sequence of context clauses.

@end deffn

@geindex Documentation (pyGHDL.dom.DesignUnit.Architecture property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture Documentation}@anchor{335}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.DesignUnit.Architecture property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture Identifier}@anchor{336}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex LibraryReferences (pyGHDL.dom.DesignUnit.Architecture property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture LibraryReferences}@anchor{337}
@deffn {Property} LibraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.LibraryClause}]

Read-only property to access the sequence of library clauses (@ref{338,,_libraryReferences}).

@*Returns: 
Sequence of library clauses.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.DesignUnit.Architecture property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture NormalizedIdentifier}@anchor{339}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex PackageReferences (pyGHDL.dom.DesignUnit.Architecture property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture PackageReferences}@anchor{33a}
@deffn {Property} PackageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.UseClause}]

Read-only property to access the sequence of use clauses (@ref{33b,,_packageReferences}).

@*Returns: 
Sequence of use clauses.

@end deffn

@geindex Parent (pyGHDL.dom.DesignUnit.Architecture property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture Parent}@anchor{33c}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __repr__() (pyGHDL.dom.DesignUnit.Architecture method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture __repr__}@anchor{33d}
@deffn {Method} __repr__ ()

Return repr(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex __str__() (pyGHDL.dom.DesignUnit.Architecture method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture __str__}@anchor{33e}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex _library (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _library}@anchor{33f}
@deffn {Attribute} _library:  Library  =  None

The VHDL library, the design unit was analyzed into.
@end deffn

@geindex _contextItems (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _contextItems}@anchor{332}
@deffn {Attribute} _contextItems:  List['ContextUnion']

List of all context items (library, use and context clauses).
@end deffn

@geindex _libraryReferences (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _libraryReferences}@anchor{338}
@deffn {Attribute} _libraryReferences:  List['LibraryClause']

List of library clauses.
@end deffn

@geindex _packageReferences (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _packageReferences}@anchor{33b}
@deffn {Attribute} _packageReferences:  List['UseClause']

List of use clauses.
@end deffn

@geindex _contextReferences (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _contextReferences}@anchor{334}
@deffn {Attribute} _contextReferences:  List['ContextReference']

List of context clauses.
@end deffn

@geindex _referencedLibraries (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _referencedLibraries}@anchor{340}
@deffn {Attribute} _referencedLibraries:  Dict[str, 'Library']

Referenced libraries based on explicit library clauses or implicit inheritance
@end deffn

@geindex _referencedPackages (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _referencedPackages}@anchor{341}
@deffn {Attribute} _referencedPackages:  Dict[str, Dict[str, 'Package']]

Referenced packages based on explicit use clauses or implicit inheritance
@end deffn

@geindex _referencedContexts (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _referencedContexts}@anchor{342}
@deffn {Attribute} _referencedContexts:  Dict[str, 'Context']

Referenced contexts based on explicit context references or implicit inheritance
@end deffn

@geindex _dependencyVertex (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _dependencyVertex}@anchor{343}
@deffn {Attribute} _dependencyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the dependency graph
@end deffn

@geindex _hierarchyVertex (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _hierarchyVertex}@anchor{344}
@deffn {Attribute} _hierarchyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the hierarchy graph
@end deffn

@geindex _identifier (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _identifier}@anchor{345}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _normalizedIdentifier}@anchor{346}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.DesignUnit.Architecture attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Architecture _documentation}@anchor{347}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex Component (class in pyGHDL.dom.DesignUnit)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Component}@anchor{30a}
@deffn {Class} pyGHDL.dom.DesignUnit.Component (node, identifier, genericItems=None, portItems=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-d416acc82d89a70a429be80d48121a897db34421,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{genericItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}GenericInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.GenericInterfaceItem}@code{]}) – 

@item 
@code{portItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}PortInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.PortInterfaceItem}@code{]}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.DesignUnit.Component method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Component __init__}@anchor{348}
@deffn {Method} __init__ (node, identifier, genericItems=None, portItems=None, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{genericItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}GenericInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.GenericInterfaceItem}@code{] }@code{| }@code{None}) – 

@item 
@code{portItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}PortInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.PortInterfaceItem}@code{] }@code{| }@code{None}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.DesignUnit.Component attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Component _parent}@anchor{349}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.DesignUnit.Component property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Component Documentation}@anchor{34a}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.DesignUnit.Component property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Component Identifier}@anchor{34b}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.DesignUnit.Component property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Component NormalizedIdentifier}@anchor{34c}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.DesignUnit.Component property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Component Parent}@anchor{34d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.DesignUnit.Component attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Component _identifier}@anchor{34e}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.DesignUnit.Component attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Component _normalizedIdentifier}@anchor{34f}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.DesignUnit.Component attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Component _documentation}@anchor{350}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex Package (class in pyGHDL.dom.DesignUnit)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package}@anchor{303}
@deffn {Class} pyGHDL.dom.DesignUnit.Package (node, identifier, contextItems=None, genericItems=None, declaredItems=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-5bdb3c1856333443ebe67e6eaa560916e045a021,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{contextItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{307,,LibraryClause}@code{ | }@ref{308,,UseClause}@code{ | }@ref{309,,ContextReference}@code{]}) – 

@item 
@code{genericItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}GenericInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.GenericInterfaceItem}@code{]}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.DesignUnit.Package method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package __init__}@anchor{351}
@deffn {Method} __init__ (node, identifier, contextItems=None, genericItems=None, declaredItems=None, documentation=None)

Initializes a design unit.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Identifier (name) of the design unit.

@item 
@code{contextItems} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}[Union@footnote{https://docs.python.org/3/library/typing.html#typing.Union}[@ref{307,,LibraryClause}, @ref{308,,UseClause}, @ref{309,,ContextReference}]]]) – A sequence of library, use or context clauses.

@item 
@code{documentation} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]) – Associated documentation of the design unit.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{genericItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}GenericInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.GenericInterfaceItem}@code{] }@code{| }@code{None}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _parent}@anchor{352}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex ContextItems (pyGHDL.dom.DesignUnit.Package property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package ContextItems}@anchor{353}
@deffn {Property} ContextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[@ref{307,,LibraryClause}  |  @ref{308,,UseClause}  |  @ref{309,,ContextReference}]

Read-only property to access the sequence of all context items comprising library, use and context clauses
(@ref{354,,_contextItems}).

@*Returns: 
Sequence of context items.

@end deffn

@geindex ContextReferences (pyGHDL.dom.DesignUnit.Package property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package ContextReferences}@anchor{355}
@deffn {Property} ContextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.ContextReference}]

Read-only property to access the sequence of context clauses (@ref{356,,_contextReferences}).

@*Returns: 
Sequence of context clauses.

@end deffn

@geindex Documentation (pyGHDL.dom.DesignUnit.Package property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package Documentation}@anchor{357}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.DesignUnit.Package property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package Identifier}@anchor{358}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex LibraryReferences (pyGHDL.dom.DesignUnit.Package property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package LibraryReferences}@anchor{359}
@deffn {Property} LibraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.LibraryClause}]

Read-only property to access the sequence of library clauses (@ref{35a,,_libraryReferences}).

@*Returns: 
Sequence of library clauses.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.DesignUnit.Package property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package NormalizedIdentifier}@anchor{35b}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex PackageReferences (pyGHDL.dom.DesignUnit.Package property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package PackageReferences}@anchor{35c}
@deffn {Property} PackageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.UseClause}]

Read-only property to access the sequence of use clauses (@ref{35d,,_packageReferences}).

@*Returns: 
Sequence of use clauses.

@end deffn

@geindex Parent (pyGHDL.dom.DesignUnit.Package property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package Parent}@anchor{35e}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __repr__() (pyGHDL.dom.DesignUnit.Package method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package __repr__}@anchor{35f}
@deffn {Method} __repr__ ()

Return repr(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex __str__() (pyGHDL.dom.DesignUnit.Package method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package __str__}@anchor{360}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex _library (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _library}@anchor{361}
@deffn {Attribute} _library:  Library

The VHDL library, the design unit was analyzed into.
@end deffn

@geindex _contextItems (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _contextItems}@anchor{354}
@deffn {Attribute} _contextItems:  List['ContextUnion']

List of all context items (library, use and context clauses).
@end deffn

@geindex _libraryReferences (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _libraryReferences}@anchor{35a}
@deffn {Attribute} _libraryReferences:  List['LibraryClause']

List of library clauses.
@end deffn

@geindex _packageReferences (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _packageReferences}@anchor{35d}
@deffn {Attribute} _packageReferences:  List['UseClause']

List of use clauses.
@end deffn

@geindex _contextReferences (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _contextReferences}@anchor{356}
@deffn {Attribute} _contextReferences:  List['ContextReference']

List of context clauses.
@end deffn

@geindex _referencedLibraries (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _referencedLibraries}@anchor{362}
@deffn {Attribute} _referencedLibraries:  Dict[str, 'Library']

Referenced libraries based on explicit library clauses or implicit inheritance
@end deffn

@geindex _referencedPackages (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _referencedPackages}@anchor{363}
@deffn {Attribute} _referencedPackages:  Dict[str, Dict[str, 'Package']]

Referenced packages based on explicit use clauses or implicit inheritance
@end deffn

@geindex _referencedContexts (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _referencedContexts}@anchor{364}
@deffn {Attribute} _referencedContexts:  Dict[str, 'Context']

Referenced contexts based on explicit context references or implicit inheritance
@end deffn

@geindex _dependencyVertex (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _dependencyVertex}@anchor{365}
@deffn {Attribute} _dependencyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the dependency graph
@end deffn

@geindex _hierarchyVertex (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _hierarchyVertex}@anchor{366}
@deffn {Attribute} _hierarchyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the hierarchy graph
@end deffn

@geindex _identifier (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _identifier}@anchor{367}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _normalizedIdentifier}@anchor{368}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.DesignUnit.Package attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Package _documentation}@anchor{369}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex PackageBody (class in pyGHDL.dom.DesignUnit)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody}@anchor{304}
@deffn {Class} pyGHDL.dom.DesignUnit.PackageBody (node, packageSymbol, contextItems=None, declaredItems=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-741204c96ae865b37f1d89c0bf2d3a5314bb9032,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{packageSymbol} (@ref{36a,,PackageSymbol}) – 

@item 
@code{contextItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{307,,LibraryClause}@code{ | }@ref{308,,UseClause}@code{ | }@ref{309,,ContextReference}@code{]}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.DesignUnit.PackageBody method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody __init__}@anchor{36b}
@deffn {Method} __init__ (node, packageSymbol, contextItems=None, declaredItems=None, documentation=None)

Initializes a design unit.

@*Parameters: 

@itemize *

@item 
@code{identifier} – Identifier (name) of the design unit.

@item 
@code{contextItems} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}[Union@footnote{https://docs.python.org/3/library/typing.html#typing.Union}[@ref{307,,LibraryClause}, @ref{308,,UseClause}, @ref{309,,ContextReference}]]]) – A sequence of library, use or context clauses.

@item 
@code{documentation} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]) – Associated documentation of the design unit.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{packageSymbol} (@ref{36a,,PackageSymbol}) – 

@item 
@code{declaredItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _parent}@anchor{36c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex ContextItems (pyGHDL.dom.DesignUnit.PackageBody property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody ContextItems}@anchor{36d}
@deffn {Property} ContextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[@ref{307,,LibraryClause}  |  @ref{308,,UseClause}  |  @ref{309,,ContextReference}]

Read-only property to access the sequence of all context items comprising library, use and context clauses
(@ref{36e,,_contextItems}).

@*Returns: 
Sequence of context items.

@end deffn

@geindex ContextReferences (pyGHDL.dom.DesignUnit.PackageBody property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody ContextReferences}@anchor{36f}
@deffn {Property} ContextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.ContextReference}]

Read-only property to access the sequence of context clauses (@ref{370,,_contextReferences}).

@*Returns: 
Sequence of context clauses.

@end deffn

@geindex Documentation (pyGHDL.dom.DesignUnit.PackageBody property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody Documentation}@anchor{371}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.DesignUnit.PackageBody property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody Identifier}@anchor{372}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex LibraryReferences (pyGHDL.dom.DesignUnit.PackageBody property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody LibraryReferences}@anchor{373}
@deffn {Property} LibraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.LibraryClause}]

Read-only property to access the sequence of library clauses (@ref{374,,_libraryReferences}).

@*Returns: 
Sequence of library clauses.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.DesignUnit.PackageBody property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody NormalizedIdentifier}@anchor{375}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex PackageReferences (pyGHDL.dom.DesignUnit.PackageBody property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody PackageReferences}@anchor{376}
@deffn {Property} PackageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.UseClause}]

Read-only property to access the sequence of use clauses (@ref{377,,_packageReferences}).

@*Returns: 
Sequence of use clauses.

@end deffn

@geindex Parent (pyGHDL.dom.DesignUnit.PackageBody property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody Parent}@anchor{378}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __repr__() (pyGHDL.dom.DesignUnit.PackageBody method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody __repr__}@anchor{379}
@deffn {Method} __repr__ ()

Return repr(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex __str__() (pyGHDL.dom.DesignUnit.PackageBody method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody __str__}@anchor{37a}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex _library (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _library}@anchor{37b}
@deffn {Attribute} _library:  Library

The VHDL library, the design unit was analyzed into.
@end deffn

@geindex _contextItems (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _contextItems}@anchor{36e}
@deffn {Attribute} _contextItems:  List['ContextUnion']

List of all context items (library, use and context clauses).
@end deffn

@geindex _libraryReferences (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _libraryReferences}@anchor{374}
@deffn {Attribute} _libraryReferences:  List['LibraryClause']

List of library clauses.
@end deffn

@geindex _packageReferences (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _packageReferences}@anchor{377}
@deffn {Attribute} _packageReferences:  List['UseClause']

List of use clauses.
@end deffn

@geindex _contextReferences (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _contextReferences}@anchor{370}
@deffn {Attribute} _contextReferences:  List['ContextReference']

List of context clauses.
@end deffn

@geindex _referencedLibraries (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _referencedLibraries}@anchor{37c}
@deffn {Attribute} _referencedLibraries:  Dict[str, 'Library']

Referenced libraries based on explicit library clauses or implicit inheritance
@end deffn

@geindex _referencedPackages (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _referencedPackages}@anchor{37d}
@deffn {Attribute} _referencedPackages:  Dict[str, Dict[str, 'Package']]

Referenced packages based on explicit use clauses or implicit inheritance
@end deffn

@geindex _referencedContexts (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _referencedContexts}@anchor{37e}
@deffn {Attribute} _referencedContexts:  Dict[str, 'Context']

Referenced contexts based on explicit context references or implicit inheritance
@end deffn

@geindex _dependencyVertex (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _dependencyVertex}@anchor{37f}
@deffn {Attribute} _dependencyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the dependency graph
@end deffn

@geindex _hierarchyVertex (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _hierarchyVertex}@anchor{380}
@deffn {Attribute} _hierarchyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the hierarchy graph
@end deffn

@geindex _identifier (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _identifier}@anchor{381}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _normalizedIdentifier}@anchor{382}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.DesignUnit.PackageBody attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageBody _documentation}@anchor{383}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex PackageInstantiation (class in pyGHDL.dom.DesignUnit)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation}@anchor{30b}
@deffn {Class} pyGHDL.dom.DesignUnit.PackageInstantiation (node, identifier, uninstantiatedPackageName, documentation=None)

@subsubheading Inheritance

@image{inheritance-1d5be6499a40f0489d94ffdff8f04c5803706c3d,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{uninstantiatedPackageName} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.DesignUnit.PackageInstantiation method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation __init__}@anchor{384}
@deffn {Method} __init__ (node, identifier, uninstantiatedPackageName, documentation=None)

Initializes a design unit.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Identifier (name) of the design unit.

@item 
@code{contextItems} – A sequence of library, use or context clauses.

@item 
@code{documentation} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]) – Associated documentation of the design unit.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{uninstantiatedPackageName} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _parent}@anchor{385}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex ContextItems (pyGHDL.dom.DesignUnit.PackageInstantiation property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation ContextItems}@anchor{386}
@deffn {Property} ContextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[@ref{307,,LibraryClause}  |  @ref{308,,UseClause}  |  @ref{309,,ContextReference}]

Read-only property to access the sequence of all context items comprising library, use and context clauses
(@ref{387,,_contextItems}).

@*Returns: 
Sequence of context items.

@end deffn

@geindex ContextReferences (pyGHDL.dom.DesignUnit.PackageInstantiation property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation ContextReferences}@anchor{388}
@deffn {Property} ContextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.ContextReference}]

Read-only property to access the sequence of context clauses (@ref{389,,_contextReferences}).

@*Returns: 
Sequence of context clauses.

@end deffn

@geindex Documentation (pyGHDL.dom.DesignUnit.PackageInstantiation property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation Documentation}@anchor{38a}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.DesignUnit.PackageInstantiation property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation Identifier}@anchor{38b}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex LibraryReferences (pyGHDL.dom.DesignUnit.PackageInstantiation property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation LibraryReferences}@anchor{38c}
@deffn {Property} LibraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.LibraryClause}]

Read-only property to access the sequence of library clauses (@ref{38d,,_libraryReferences}).

@*Returns: 
Sequence of library clauses.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.DesignUnit.PackageInstantiation property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation NormalizedIdentifier}@anchor{38e}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex PackageReferences (pyGHDL.dom.DesignUnit.PackageInstantiation property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation PackageReferences}@anchor{38f}
@deffn {Property} PackageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.UseClause}]

Read-only property to access the sequence of use clauses (@ref{390,,_packageReferences}).

@*Returns: 
Sequence of use clauses.

@end deffn

@geindex Parent (pyGHDL.dom.DesignUnit.PackageInstantiation property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation Parent}@anchor{391}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _library (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _library}@anchor{392}
@deffn {Attribute} _library:  Library

The VHDL library, the design unit was analyzed into.
@end deffn

@geindex _contextItems (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _contextItems}@anchor{387}
@deffn {Attribute} _contextItems:  List['ContextUnion']

List of all context items (library, use and context clauses).
@end deffn

@geindex _libraryReferences (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _libraryReferences}@anchor{38d}
@deffn {Attribute} _libraryReferences:  List['LibraryClause']

List of library clauses.
@end deffn

@geindex _packageReferences (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _packageReferences}@anchor{390}
@deffn {Attribute} _packageReferences:  List['UseClause']

List of use clauses.
@end deffn

@geindex _contextReferences (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _contextReferences}@anchor{389}
@deffn {Attribute} _contextReferences:  List['ContextReference']

List of context clauses.
@end deffn

@geindex _referencedLibraries (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _referencedLibraries}@anchor{393}
@deffn {Attribute} _referencedLibraries:  Dict[str, 'Library']

Referenced libraries based on explicit library clauses or implicit inheritance
@end deffn

@geindex _referencedPackages (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _referencedPackages}@anchor{394}
@deffn {Attribute} _referencedPackages:  Dict[str, Dict[str, 'Package']]

Referenced packages based on explicit use clauses or implicit inheritance
@end deffn

@geindex _referencedContexts (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _referencedContexts}@anchor{395}
@deffn {Attribute} _referencedContexts:  Dict[str, 'Context']

Referenced contexts based on explicit context references or implicit inheritance
@end deffn

@geindex _dependencyVertex (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _dependencyVertex}@anchor{396}
@deffn {Attribute} _dependencyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the dependency graph
@end deffn

@geindex _hierarchyVertex (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _hierarchyVertex}@anchor{397}
@deffn {Attribute} _hierarchyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the hierarchy graph
@end deffn

@geindex _identifier (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _identifier}@anchor{398}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _normalizedIdentifier}@anchor{399}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.DesignUnit.PackageInstantiation attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit PackageInstantiation _documentation}@anchor{39a}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex Context (class in pyGHDL.dom.DesignUnit)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context}@anchor{305}
@deffn {Class} pyGHDL.dom.DesignUnit.Context (node, identifier, references=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-b27c97ffc17a8c3ad9d979712cf0840ecbd9ba98,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{references} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{307,,LibraryClause}@code{ | }@ref{308,,UseClause}@code{ | }@ref{309,,ContextReference}@code{]}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.DesignUnit.Context method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context __init__}@anchor{39b}
@deffn {Method} __init__ (node, identifier, references=None, documentation=None)

Initializes a design unit.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Identifier (name) of the design unit.

@item 
@code{contextItems} – A sequence of library, use or context clauses.

@item 
@code{documentation} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]) – Associated documentation of the design unit.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{references} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{307,,LibraryClause}@code{ | }@ref{308,,UseClause}@code{ | }@ref{309,,ContextReference}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _parent}@anchor{39c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex ContextItems (pyGHDL.dom.DesignUnit.Context property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context ContextItems}@anchor{39d}
@deffn {Property} ContextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[@ref{307,,LibraryClause}  |  @ref{308,,UseClause}  |  @ref{309,,ContextReference}]

Read-only property to access the sequence of all context items comprising library, use and context clauses
(@ref{39e,,_contextItems}).

@*Returns: 
Sequence of context items.

@end deffn

@geindex ContextReferences (pyGHDL.dom.DesignUnit.Context property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context ContextReferences}@anchor{39f}
@deffn {Property} ContextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.ContextReference}]

Read-only property to access the sequence of context clauses (@ref{3a0,,_contextReferences}).

@*Returns: 
Sequence of context clauses.

@end deffn

@geindex Documentation (pyGHDL.dom.DesignUnit.Context property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context Documentation}@anchor{3a1}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.DesignUnit.Context property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context Identifier}@anchor{3a2}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex LibraryReferences (pyGHDL.dom.DesignUnit.Context property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context LibraryReferences}@anchor{3a3}
@deffn {Property} LibraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.LibraryClause}]

Read-only property to access the sequence of library clauses (@ref{3a4,,_libraryReferences}).

@*Returns: 
Sequence of library clauses.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.DesignUnit.Context property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context NormalizedIdentifier}@anchor{3a5}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex PackageReferences (pyGHDL.dom.DesignUnit.Context property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context PackageReferences}@anchor{3a6}
@deffn {Property} PackageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.UseClause}]

Read-only property to access the sequence of use clauses (@ref{3a7,,_packageReferences}).

@*Returns: 
Sequence of use clauses.

@end deffn

@geindex Parent (pyGHDL.dom.DesignUnit.Context property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context Parent}@anchor{3a8}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.DesignUnit.Context method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context __str__}@anchor{3a9}
@deffn {Method} __str__ ()

Return str(self).
@end deffn

@geindex _libraryReferences (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _libraryReferences}@anchor{3a4}
@deffn {Attribute} _libraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.LibraryClause}]

List of library clauses.
@end deffn

@geindex _packageReferences (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _packageReferences}@anchor{3a7}
@deffn {Attribute} _packageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.UseClause}]

List of use clauses.
@end deffn

@geindex _contextReferences (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _contextReferences}@anchor{3a0}
@deffn {Attribute} _contextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.ContextReference}]

List of context clauses.
@end deffn

@geindex _library (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _library}@anchor{3aa}
@deffn {Attribute} _library:  Library

The VHDL library, the design unit was analyzed into.
@end deffn

@geindex _contextItems (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _contextItems}@anchor{39e}
@deffn {Attribute} _contextItems:  List['ContextUnion']

List of all context items (library, use and context clauses).
@end deffn

@geindex _referencedLibraries (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _referencedLibraries}@anchor{3ab}
@deffn {Attribute} _referencedLibraries:  Dict[str, 'Library']

Referenced libraries based on explicit library clauses or implicit inheritance
@end deffn

@geindex _referencedPackages (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _referencedPackages}@anchor{3ac}
@deffn {Attribute} _referencedPackages:  Dict[str, Dict[str, 'Package']]

Referenced packages based on explicit use clauses or implicit inheritance
@end deffn

@geindex _referencedContexts (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _referencedContexts}@anchor{3ad}
@deffn {Attribute} _referencedContexts:  Dict[str, 'Context']

Referenced contexts based on explicit context references or implicit inheritance
@end deffn

@geindex _dependencyVertex (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _dependencyVertex}@anchor{3ae}
@deffn {Attribute} _dependencyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the dependency graph
@end deffn

@geindex _hierarchyVertex (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _hierarchyVertex}@anchor{3af}
@deffn {Attribute} _hierarchyVertex:  Vertex[str, 'DesignUnit', None, None]

The vertex in the hierarchy graph
@end deffn

@geindex _identifier (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _identifier}@anchor{3b0}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _normalizedIdentifier}@anchor{3b1}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.DesignUnit.Context attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Context _documentation}@anchor{3b2}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex Configuration (class in pyGHDL.dom.DesignUnit)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration}@anchor{306}
@deffn {Class} pyGHDL.dom.DesignUnit.Configuration (node, identifier, contextItems=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-71385c421bf582263fae665ec42eea8484bcecfd,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{contextItems} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{305,,Context}@code{]}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.DesignUnit.Configuration method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration __init__}@anchor{3b3}
@deffn {Method} __init__ (node, identifier, contextItems=None, documentation=None)

Initializes a design unit.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Identifier (name) of the design unit.

@item 
@code{contextItems} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}[@ref{305,,Context}]]) – A sequence of library, use or context clauses.

@item 
@code{documentation} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]) – Associated documentation of the design unit.

@item 
@code{node} (@code{Iir}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _parent}@anchor{3b4}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex ContextItems (pyGHDL.dom.DesignUnit.Configuration property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration ContextItems}@anchor{3b5}
@deffn {Property} ContextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[@ref{307,,LibraryClause}  |  @ref{308,,UseClause}  |  @ref{309,,ContextReference}]

Read-only property to access the sequence of all context items comprising library, use and context clauses
(@ref{3b6,,_contextItems}).

@*Returns: 
Sequence of context items.

@end deffn

@geindex ContextReferences (pyGHDL.dom.DesignUnit.Configuration property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration ContextReferences}@anchor{3b7}
@deffn {Property} ContextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.ContextReference}]

Read-only property to access the sequence of context clauses (@ref{3b8,,_contextReferences}).

@*Returns: 
Sequence of context clauses.

@end deffn

@geindex Documentation (pyGHDL.dom.DesignUnit.Configuration property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration Documentation}@anchor{3b9}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.DesignUnit.Configuration property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration Identifier}@anchor{3ba}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex LibraryReferences (pyGHDL.dom.DesignUnit.Configuration property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration LibraryReferences}@anchor{3bb}
@deffn {Property} LibraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.LibraryClause}]

Read-only property to access the sequence of library clauses (@ref{3bc,,_libraryReferences}).

@*Returns: 
Sequence of library clauses.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.DesignUnit.Configuration property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration NormalizedIdentifier}@anchor{3bd}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex PackageReferences (pyGHDL.dom.DesignUnit.Configuration property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration PackageReferences}@anchor{3be}
@deffn {Property} PackageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.UseClause}]

Read-only property to access the sequence of use clauses (@ref{3bf,,_packageReferences}).

@*Returns: 
Sequence of use clauses.

@end deffn

@geindex Parent (pyGHDL.dom.DesignUnit.Configuration property)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration Parent}@anchor{3c0}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __repr__() (pyGHDL.dom.DesignUnit.Configuration method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration __repr__}@anchor{3c1}
@deffn {Method} __repr__ ()

Return repr(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex __str__() (pyGHDL.dom.DesignUnit.Configuration method)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration __str__}@anchor{3c2}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn

@geindex _library (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _library}@anchor{3c3}
@deffn {Attribute} _library:  Library

The VHDL library, the design unit was analyzed into.
@end deffn

@geindex _contextItems (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _contextItems}@anchor{3b6}
@deffn {Attribute} _contextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextUnion]

List of all context items (library, use and context clauses).
@end deffn

@geindex _libraryReferences (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _libraryReferences}@anchor{3bc}
@deffn {Attribute} _libraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause]

List of library clauses.
@end deffn

@geindex _packageReferences (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _packageReferences}@anchor{3bf}
@deffn {Attribute} _packageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause]

List of use clauses.
@end deffn

@geindex _contextReferences (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _contextReferences}@anchor{3b8}
@deffn {Attribute} _contextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference]

List of context clauses.
@end deffn

@geindex _referencedLibraries (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _referencedLibraries}@anchor{3c4}
@deffn {Attribute} _referencedLibraries:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Library]

Referenced libraries based on explicit library clauses or implicit inheritance
@end deffn

@geindex _referencedPackages (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _referencedPackages}@anchor{3c5}
@deffn {Attribute} _referencedPackages:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Package]]

Referenced packages based on explicit use clauses or implicit inheritance
@end deffn

@geindex _referencedContexts (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _referencedContexts}@anchor{3c6}
@deffn {Attribute} _referencedContexts:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Context]

Referenced contexts based on explicit context references or implicit inheritance
@end deffn

@geindex _dependencyVertex (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _dependencyVertex}@anchor{3c7}
@deffn {Attribute} _dependencyVertex:  @code{Vertex}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, DesignUnit, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

The vertex in the dependency graph
@end deffn

@geindex _hierarchyVertex (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _hierarchyVertex}@anchor{3c8}
@deffn {Attribute} _hierarchyVertex:  @code{Vertex}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, DesignUnit, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

The vertex in the hierarchy graph
@end deffn

@geindex _identifier (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _identifier}@anchor{3c9}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _normalizedIdentifier}@anchor{3ca}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.DesignUnit.Configuration attribute)
@anchor{pyGHDL/pyGHDL dom DesignUnit pyGHDL dom DesignUnit Configuration _documentation}@anchor{3cb}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Expression,pyGHDL dom InterfaceItem,pyGHDL dom DesignUnit,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Expression doc}@anchor{3cc}@anchor{pyGHDL/pyGHDL dom Expression module-pyGHDL dom Expression}@anchor{b}@anchor{pyGHDL/pyGHDL dom Expression pyghdl-dom-expression}@anchor{3cd}
@subsection @code{pyGHDL.dom.Expression}


@geindex module; pyGHDL.dom.Expression

`Classes'


@itemize -

@item 
@ref{3ce,,InverseExpression}:
A @code{UnaryExpression} is a base-class for all unary expressions.

@item 
@ref{3cf,,IdentityExpression}:
A @code{UnaryExpression} is a base-class for all unary expressions.

@item 
@ref{3d0,,NegationExpression}:
A @code{UnaryExpression} is a base-class for all unary expressions.

@item 
@ref{3d1,,AbsoluteExpression}:
A @code{UnaryExpression} is a base-class for all unary expressions.

@item 
@ref{3d2,,ParenthesisExpression}:
A @code{UnaryExpression} is a base-class for all unary expressions.

@item 
@ref{23a,,TypeConversion}:
A @code{UnaryExpression} is a base-class for all unary expressions.

@item 
@ref{239,,FunctionCall}:
A @code{BaseExpression} is a base-class for all expressions.

@item 
@ref{3d3,,AscendingRangeExpression}:
A @code{BinaryExpression} is a base-class for all binary expressions.

@item 
@ref{3d4,,DescendingRangeExpression}:
A @code{BinaryExpression} is a base-class for all binary expressions.

@item 
@ref{3d5,,AdditionExpression}:
A @code{AddingExpression} is a base-class for all adding expressions.

@item 
@ref{3d6,,SubtractionExpression}:
A @code{AddingExpression} is a base-class for all adding expressions.

@item 
@ref{3d7,,ConcatenationExpression}:
A @code{AddingExpression} is a base-class for all adding expressions.

@item 
@ref{3d8,,MultiplyExpression}:
A @code{MultiplyingExpression} is a base-class for all multiplying expressions.

@item 
@ref{3d9,,DivisionExpression}:
A @code{MultiplyingExpression} is a base-class for all multiplying expressions.

@item 
@ref{3da,,RemainderExpression}:
A @code{MultiplyingExpression} is a base-class for all multiplying expressions.

@item 
@ref{3db,,ModuloExpression}:
A @code{MultiplyingExpression} is a base-class for all multiplying expressions.

@item 
@ref{3dc,,ExponentiationExpression}:
A @code{MultiplyingExpression} is a base-class for all multiplying expressions.

@item 
@ref{3dd,,AndExpression}:
A @code{LogicalExpression} is a base-class for all logical expressions.

@item 
@ref{3de,,NandExpression}:
A @code{LogicalExpression} is a base-class for all logical expressions.

@item 
@ref{3df,,OrExpression}:
A @code{LogicalExpression} is a base-class for all logical expressions.

@item 
@ref{3e0,,NorExpression}:
A @code{LogicalExpression} is a base-class for all logical expressions.

@item 
@ref{3e1,,XorExpression}:
A @code{LogicalExpression} is a base-class for all logical expressions.

@item 
@ref{3e2,,XnorExpression}:
A @code{LogicalExpression} is a base-class for all logical expressions.

@item 
@ref{3e3,,EqualExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3e4,,UnequalExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3e5,,LessThanExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3e6,,LessEqualExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3e7,,GreaterThanExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3e8,,GreaterEqualExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3e9,,MatchingEqualExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3ea,,MatchingUnequalExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3eb,,MatchingLessThanExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3ec,,MatchingLessEqualExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3ed,,MatchingGreaterThanExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3ee,,MatchingGreaterEqualExpression}:
A @code{RelationalExpression} is a base-class for all shifting expressions.

@item 
@ref{3ef,,ShiftRightLogicExpression}:
A @code{ShiftExpression} is a base-class for all shifting expressions.

@item 
@ref{3f0,,ShiftLeftLogicExpression}:
A @code{ShiftExpression} is a base-class for all shifting expressions.

@item 
@ref{3f1,,ShiftRightArithmeticExpression}:
A @code{ShiftExpression} is a base-class for all shifting expressions.

@item 
@ref{3f2,,ShiftLeftArithmeticExpression}:
A @code{ShiftExpression} is a base-class for all shifting expressions.

@item 
@ref{3f3,,RotateRightExpression}:
A @code{ShiftExpression} is a base-class for all shifting expressions.

@item 
@ref{3f4,,RotateLeftExpression}:
A @code{ShiftExpression} is a base-class for all shifting expressions.

@item 
@ref{238,,QualifiedExpression}:
A @code{BaseExpression} is a base-class for all expressions.

@item 
@ref{3f5,,SubtypeAllocation}:
A @code{BaseExpression} is a base-class for all expressions.

@item 
@ref{3f6,,QualifiedExpressionAllocation}:
A @code{BaseExpression} is a base-class for all expressions.

@item 
@ref{3f7,,Aggregate}:
A @code{BaseExpression} is a base-class for all expressions.
@end itemize


__________________________________________________________________


`Classes'

@geindex InverseExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression InverseExpression}@anchor{3ce}
@deffn {Class} pyGHDL.dom.Expression.InverseExpression (node, operand)

@subsubheading Inheritance

@image{inheritance-ce54138d27c8577be7e89681c4095cefdde012a0,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.InverseExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression InverseExpression __init__}@anchor{3f8}
@deffn {Method} __init__ (node, operand)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.InverseExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression InverseExpression _parent}@anchor{3f9}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.InverseExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression InverseExpression Parent}@anchor{3fa}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.InverseExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression InverseExpression __str__}@anchor{3fb}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex IdentityExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression IdentityExpression}@anchor{3cf}
@deffn {Class} pyGHDL.dom.Expression.IdentityExpression (node, operand)

@subsubheading Inheritance

@image{inheritance-70dc6c3afaf7698c8a88e3ecb18fc769157b2778,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.IdentityExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression IdentityExpression __init__}@anchor{3fc}
@deffn {Method} __init__ (node, operand)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.IdentityExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression IdentityExpression _parent}@anchor{3fd}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.IdentityExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression IdentityExpression Parent}@anchor{3fe}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.IdentityExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression IdentityExpression __str__}@anchor{3ff}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex NegationExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NegationExpression}@anchor{3d0}
@deffn {Class} pyGHDL.dom.Expression.NegationExpression (node, operand)

@subsubheading Inheritance

@image{inheritance-b7a49bcfa57ad0bb06974920431008919692ea55,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.NegationExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NegationExpression __init__}@anchor{400}
@deffn {Method} __init__ (node, operand)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.NegationExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NegationExpression _parent}@anchor{401}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.NegationExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NegationExpression Parent}@anchor{402}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.NegationExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NegationExpression __str__}@anchor{403}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex AbsoluteExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AbsoluteExpression}@anchor{3d1}
@deffn {Class} pyGHDL.dom.Expression.AbsoluteExpression (node, operand)

@subsubheading Inheritance

@image{inheritance-503e0eba9c000567ab11d86eba815e25c8486e24,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.AbsoluteExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AbsoluteExpression __init__}@anchor{404}
@deffn {Method} __init__ (node, operand)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.AbsoluteExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AbsoluteExpression _parent}@anchor{405}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.AbsoluteExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AbsoluteExpression Parent}@anchor{406}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.AbsoluteExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AbsoluteExpression __str__}@anchor{407}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex ParenthesisExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ParenthesisExpression}@anchor{3d2}
@deffn {Class} pyGHDL.dom.Expression.ParenthesisExpression (node, operand)

@subsubheading Inheritance

@image{inheritance-28245ec7c6d778f1a93ed1bbb3c1c49f68d20858,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.ParenthesisExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ParenthesisExpression __init__}@anchor{408}
@deffn {Method} __init__ (node, operand)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.ParenthesisExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ParenthesisExpression _parent}@anchor{409}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.ParenthesisExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ParenthesisExpression Parent}@anchor{40a}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.ParenthesisExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ParenthesisExpression __str__}@anchor{40b}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex TypeConversion (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression TypeConversion}@anchor{23a}
@deffn {Class} pyGHDL.dom.Expression.TypeConversion (node, operand)

@subsubheading Inheritance

@image{inheritance-dbe198afeecd32883fb86722b0612f8d838f65b2,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.TypeConversion method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression TypeConversion __init__}@anchor{40c}
@deffn {Method} __init__ (node, operand)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.TypeConversion attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression TypeConversion _parent}@anchor{40d}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.TypeConversion property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression TypeConversion Parent}@anchor{40e}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.TypeConversion method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression TypeConversion __str__}@anchor{40f}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex FunctionCall (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression FunctionCall}@anchor{239}
@deffn {Class} pyGHDL.dom.Expression.FunctionCall (node, operand)

@subsubheading Inheritance

@image{inheritance-765eabc2f579f1a3030889146c7696a1b844a20d,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.FunctionCall method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression FunctionCall __init__}@anchor{410}
@deffn {Method} __init__ (node, operand)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.FunctionCall attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression FunctionCall _parent}@anchor{411}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.FunctionCall property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression FunctionCall Parent}@anchor{412}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn
@end deffn

@geindex AscendingRangeExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AscendingRangeExpression}@anchor{3d3}
@deffn {Class} pyGHDL.dom.Expression.AscendingRangeExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-c34b07d97015082016ac0ea0fb29f3bc9437e74b,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.AscendingRangeExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AscendingRangeExpression __init__}@anchor{413}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.AscendingRangeExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AscendingRangeExpression _parent}@anchor{414}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.AscendingRangeExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AscendingRangeExpression Parent}@anchor{415}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.AscendingRangeExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AscendingRangeExpression __str__}@anchor{416}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex DescendingRangeExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression DescendingRangeExpression}@anchor{3d4}
@deffn {Class} pyGHDL.dom.Expression.DescendingRangeExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-849bfe3181e5b40262bb591b27785ffc61164249,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.DescendingRangeExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression DescendingRangeExpression __init__}@anchor{417}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.DescendingRangeExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression DescendingRangeExpression _parent}@anchor{418}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.DescendingRangeExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression DescendingRangeExpression Parent}@anchor{419}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.DescendingRangeExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression DescendingRangeExpression __str__}@anchor{41a}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex AdditionExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AdditionExpression}@anchor{3d5}
@deffn {Class} pyGHDL.dom.Expression.AdditionExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-de30f8c458c5378ffa316d6a3a109a25191f0f27,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.AdditionExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AdditionExpression __init__}@anchor{41b}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.AdditionExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AdditionExpression _parent}@anchor{41c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.AdditionExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AdditionExpression Parent}@anchor{41d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.AdditionExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AdditionExpression __str__}@anchor{41e}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex SubtractionExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression SubtractionExpression}@anchor{3d6}
@deffn {Class} pyGHDL.dom.Expression.SubtractionExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-ba88b0c27be15ec39e04fda4ed63be6b32d7f480,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.SubtractionExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression SubtractionExpression __init__}@anchor{41f}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.SubtractionExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression SubtractionExpression _parent}@anchor{420}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.SubtractionExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression SubtractionExpression Parent}@anchor{421}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.SubtractionExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression SubtractionExpression __str__}@anchor{422}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex ConcatenationExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ConcatenationExpression}@anchor{3d7}
@deffn {Class} pyGHDL.dom.Expression.ConcatenationExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-e43896cbab465c1077c1c3fcd03d8765c0580ad1,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.ConcatenationExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ConcatenationExpression __init__}@anchor{423}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.ConcatenationExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ConcatenationExpression _parent}@anchor{424}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.ConcatenationExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ConcatenationExpression Parent}@anchor{425}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.ConcatenationExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ConcatenationExpression __str__}@anchor{426}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex MultiplyExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MultiplyExpression}@anchor{3d8}
@deffn {Class} pyGHDL.dom.Expression.MultiplyExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-0dd334e9e0f66a327fa776566578baab471bc58a,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.MultiplyExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MultiplyExpression __init__}@anchor{427}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.MultiplyExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MultiplyExpression _parent}@anchor{428}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.MultiplyExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MultiplyExpression Parent}@anchor{429}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.MultiplyExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MultiplyExpression __str__}@anchor{42a}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex DivisionExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression DivisionExpression}@anchor{3d9}
@deffn {Class} pyGHDL.dom.Expression.DivisionExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-90276c25c2e4223c2138f2f79a50074c26e96b72,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.DivisionExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression DivisionExpression __init__}@anchor{42b}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.DivisionExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression DivisionExpression _parent}@anchor{42c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.DivisionExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression DivisionExpression Parent}@anchor{42d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.DivisionExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression DivisionExpression __str__}@anchor{42e}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex RemainderExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RemainderExpression}@anchor{3da}
@deffn {Class} pyGHDL.dom.Expression.RemainderExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-c7a0703cb41b751ea8f3e67a4dc73f825b709276,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.RemainderExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RemainderExpression __init__}@anchor{42f}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.RemainderExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RemainderExpression _parent}@anchor{430}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.RemainderExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RemainderExpression Parent}@anchor{431}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.RemainderExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RemainderExpression __str__}@anchor{432}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex ModuloExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ModuloExpression}@anchor{3db}
@deffn {Class} pyGHDL.dom.Expression.ModuloExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-f15fd1cba0496b90122a4612d14b44a0d5aad851,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.ModuloExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ModuloExpression __init__}@anchor{433}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.ModuloExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ModuloExpression _parent}@anchor{434}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.ModuloExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ModuloExpression Parent}@anchor{435}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.ModuloExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ModuloExpression __str__}@anchor{436}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex ExponentiationExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ExponentiationExpression}@anchor{3dc}
@deffn {Class} pyGHDL.dom.Expression.ExponentiationExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-dd914c6b8e3adf15c72ec6bf3461857e5e5c0a58,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.ExponentiationExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ExponentiationExpression __init__}@anchor{437}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.ExponentiationExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ExponentiationExpression _parent}@anchor{438}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.ExponentiationExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ExponentiationExpression Parent}@anchor{439}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.ExponentiationExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ExponentiationExpression __str__}@anchor{43a}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex AndExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AndExpression}@anchor{3dd}
@deffn {Class} pyGHDL.dom.Expression.AndExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-7292ddf3fdfa14c5fed69974c7c7826c91da9728,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.AndExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AndExpression __init__}@anchor{43b}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.AndExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AndExpression _parent}@anchor{43c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.AndExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AndExpression Parent}@anchor{43d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.AndExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression AndExpression __str__}@anchor{43e}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex NandExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NandExpression}@anchor{3de}
@deffn {Class} pyGHDL.dom.Expression.NandExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-a726894cf8f1c8b5736076def014739e985b80ec,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.NandExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NandExpression __init__}@anchor{43f}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.NandExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NandExpression _parent}@anchor{440}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.NandExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NandExpression Parent}@anchor{441}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.NandExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NandExpression __str__}@anchor{442}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex OrExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression OrExpression}@anchor{3df}
@deffn {Class} pyGHDL.dom.Expression.OrExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-44ba10383d9991481f4865549b13ffc225a2f4e8,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.OrExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression OrExpression __init__}@anchor{443}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.OrExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression OrExpression _parent}@anchor{444}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.OrExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression OrExpression Parent}@anchor{445}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.OrExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression OrExpression __str__}@anchor{446}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex NorExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NorExpression}@anchor{3e0}
@deffn {Class} pyGHDL.dom.Expression.NorExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-f4dee7daa5b301356b5dc390813870748545bf60,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.NorExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NorExpression __init__}@anchor{447}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.NorExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NorExpression _parent}@anchor{448}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.NorExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NorExpression Parent}@anchor{449}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.NorExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression NorExpression __str__}@anchor{44a}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex XorExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression XorExpression}@anchor{3e1}
@deffn {Class} pyGHDL.dom.Expression.XorExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-684bd1d8fcf1d1fcbcae53ff477523a02cbc7bbd,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.XorExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression XorExpression __init__}@anchor{44b}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.XorExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression XorExpression _parent}@anchor{44c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.XorExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression XorExpression Parent}@anchor{44d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.XorExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression XorExpression __str__}@anchor{44e}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex XnorExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression XnorExpression}@anchor{3e2}
@deffn {Class} pyGHDL.dom.Expression.XnorExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-c5809c2d78d6ffc642ed3552df041b7d49f9e96e,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.XnorExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression XnorExpression __init__}@anchor{44f}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.XnorExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression XnorExpression _parent}@anchor{450}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.XnorExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression XnorExpression Parent}@anchor{451}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.XnorExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression XnorExpression __str__}@anchor{452}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex EqualExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression EqualExpression}@anchor{3e3}
@deffn {Class} pyGHDL.dom.Expression.EqualExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-902bc484f9e03fbac32eacdac8b466ba4f8ab2f2,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.EqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression EqualExpression __init__}@anchor{453}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.EqualExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression EqualExpression _parent}@anchor{454}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.EqualExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression EqualExpression Parent}@anchor{455}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.EqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression EqualExpression __str__}@anchor{456}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex UnequalExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression UnequalExpression}@anchor{3e4}
@deffn {Class} pyGHDL.dom.Expression.UnequalExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-4f1003ce0c82f36530e08577b98fb18fb20169f7,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.UnequalExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression UnequalExpression __init__}@anchor{457}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.UnequalExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression UnequalExpression _parent}@anchor{458}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.UnequalExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression UnequalExpression Parent}@anchor{459}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.UnequalExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression UnequalExpression __str__}@anchor{45a}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex LessThanExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression LessThanExpression}@anchor{3e5}
@deffn {Class} pyGHDL.dom.Expression.LessThanExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-57210126837236821e60f41224d2351858f6b30a,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.LessThanExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression LessThanExpression __init__}@anchor{45b}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.LessThanExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression LessThanExpression _parent}@anchor{45c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.LessThanExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression LessThanExpression Parent}@anchor{45d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.LessThanExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression LessThanExpression __str__}@anchor{45e}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex LessEqualExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression LessEqualExpression}@anchor{3e6}
@deffn {Class} pyGHDL.dom.Expression.LessEqualExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-d2db9e2ed963030ca60c1ff5a38172bd40c0cb73,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.LessEqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression LessEqualExpression __init__}@anchor{45f}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.LessEqualExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression LessEqualExpression _parent}@anchor{460}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.LessEqualExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression LessEqualExpression Parent}@anchor{461}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.LessEqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression LessEqualExpression __str__}@anchor{462}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex GreaterThanExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression GreaterThanExpression}@anchor{3e7}
@deffn {Class} pyGHDL.dom.Expression.GreaterThanExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-9fa4068947a0561bd106e2412e68d86bb2ff3706,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.GreaterThanExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression GreaterThanExpression __init__}@anchor{463}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.GreaterThanExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression GreaterThanExpression _parent}@anchor{464}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.GreaterThanExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression GreaterThanExpression Parent}@anchor{465}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.GreaterThanExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression GreaterThanExpression __str__}@anchor{466}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex GreaterEqualExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression GreaterEqualExpression}@anchor{3e8}
@deffn {Class} pyGHDL.dom.Expression.GreaterEqualExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-607cf2b5d729d989605b06e4f836f66963e89e3c,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.GreaterEqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression GreaterEqualExpression __init__}@anchor{467}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.GreaterEqualExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression GreaterEqualExpression _parent}@anchor{468}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.GreaterEqualExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression GreaterEqualExpression Parent}@anchor{469}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.GreaterEqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression GreaterEqualExpression __str__}@anchor{46a}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex MatchingEqualExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingEqualExpression}@anchor{3e9}
@deffn {Class} pyGHDL.dom.Expression.MatchingEqualExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-1add7399c44da00146dea6bb3e862323d4058b06,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.MatchingEqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingEqualExpression __init__}@anchor{46b}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.MatchingEqualExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingEqualExpression _parent}@anchor{46c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.MatchingEqualExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingEqualExpression Parent}@anchor{46d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.MatchingEqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingEqualExpression __str__}@anchor{46e}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex MatchingUnequalExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingUnequalExpression}@anchor{3ea}
@deffn {Class} pyGHDL.dom.Expression.MatchingUnequalExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-c37c549d30eb2ef6bdd4b89f1fa203314aef1cfe,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.MatchingUnequalExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingUnequalExpression __init__}@anchor{46f}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.MatchingUnequalExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingUnequalExpression _parent}@anchor{470}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.MatchingUnequalExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingUnequalExpression Parent}@anchor{471}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.MatchingUnequalExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingUnequalExpression __str__}@anchor{472}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex MatchingLessThanExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingLessThanExpression}@anchor{3eb}
@deffn {Class} pyGHDL.dom.Expression.MatchingLessThanExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-cb614f64dceac69bb5c29f77e921059b883d00be,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.MatchingLessThanExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingLessThanExpression __init__}@anchor{473}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.MatchingLessThanExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingLessThanExpression _parent}@anchor{474}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.MatchingLessThanExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingLessThanExpression Parent}@anchor{475}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.MatchingLessThanExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingLessThanExpression __str__}@anchor{476}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex MatchingLessEqualExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingLessEqualExpression}@anchor{3ec}
@deffn {Class} pyGHDL.dom.Expression.MatchingLessEqualExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-32cfbe333acf6441b1410ff47b6aa4cbc115ab5d,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.MatchingLessEqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingLessEqualExpression __init__}@anchor{477}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.MatchingLessEqualExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingLessEqualExpression _parent}@anchor{478}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.MatchingLessEqualExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingLessEqualExpression Parent}@anchor{479}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.MatchingLessEqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingLessEqualExpression __str__}@anchor{47a}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex MatchingGreaterThanExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingGreaterThanExpression}@anchor{3ed}
@deffn {Class} pyGHDL.dom.Expression.MatchingGreaterThanExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-67c4a1dff8eec930f054fbc5245c9d8ab0e55cba,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.MatchingGreaterThanExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingGreaterThanExpression __init__}@anchor{47b}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.MatchingGreaterThanExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingGreaterThanExpression _parent}@anchor{47c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.MatchingGreaterThanExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingGreaterThanExpression Parent}@anchor{47d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.MatchingGreaterThanExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingGreaterThanExpression __str__}@anchor{47e}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex MatchingGreaterEqualExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingGreaterEqualExpression}@anchor{3ee}
@deffn {Class} pyGHDL.dom.Expression.MatchingGreaterEqualExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-89ba6556a8112d03e52766914de5dab970343eae,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.MatchingGreaterEqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingGreaterEqualExpression __init__}@anchor{47f}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.MatchingGreaterEqualExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingGreaterEqualExpression _parent}@anchor{480}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.MatchingGreaterEqualExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingGreaterEqualExpression Parent}@anchor{481}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.MatchingGreaterEqualExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression MatchingGreaterEqualExpression __str__}@anchor{482}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex ShiftRightLogicExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftRightLogicExpression}@anchor{3ef}
@deffn {Class} pyGHDL.dom.Expression.ShiftRightLogicExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-ded386fbf70f3ad0b4a7f14278aee3aa8e65ec7c,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.ShiftRightLogicExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftRightLogicExpression __init__}@anchor{483}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.ShiftRightLogicExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftRightLogicExpression _parent}@anchor{484}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.ShiftRightLogicExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftRightLogicExpression Parent}@anchor{485}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.ShiftRightLogicExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftRightLogicExpression __str__}@anchor{486}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex ShiftLeftLogicExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftLeftLogicExpression}@anchor{3f0}
@deffn {Class} pyGHDL.dom.Expression.ShiftLeftLogicExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-a0a394b947e406ed1cbddfa6ab22dbd7c2f942d1,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.ShiftLeftLogicExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftLeftLogicExpression __init__}@anchor{487}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.ShiftLeftLogicExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftLeftLogicExpression _parent}@anchor{488}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.ShiftLeftLogicExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftLeftLogicExpression Parent}@anchor{489}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.ShiftLeftLogicExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftLeftLogicExpression __str__}@anchor{48a}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex ShiftRightArithmeticExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftRightArithmeticExpression}@anchor{3f1}
@deffn {Class} pyGHDL.dom.Expression.ShiftRightArithmeticExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-a41db154da802ced7a3bcb4fabdc64586a7eebef,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.ShiftRightArithmeticExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftRightArithmeticExpression __init__}@anchor{48b}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.ShiftRightArithmeticExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftRightArithmeticExpression _parent}@anchor{48c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.ShiftRightArithmeticExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftRightArithmeticExpression Parent}@anchor{48d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.ShiftRightArithmeticExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftRightArithmeticExpression __str__}@anchor{48e}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex ShiftLeftArithmeticExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftLeftArithmeticExpression}@anchor{3f2}
@deffn {Class} pyGHDL.dom.Expression.ShiftLeftArithmeticExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-7c424f115aaff61201f12781f0555bd5d10084c2,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.ShiftLeftArithmeticExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftLeftArithmeticExpression __init__}@anchor{48f}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.ShiftLeftArithmeticExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftLeftArithmeticExpression _parent}@anchor{490}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.ShiftLeftArithmeticExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftLeftArithmeticExpression Parent}@anchor{491}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.ShiftLeftArithmeticExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression ShiftLeftArithmeticExpression __str__}@anchor{492}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex RotateRightExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RotateRightExpression}@anchor{3f3}
@deffn {Class} pyGHDL.dom.Expression.RotateRightExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-3b361002a4914c44035b1ce7130cd1c22aa16347,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.RotateRightExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RotateRightExpression __init__}@anchor{493}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.RotateRightExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RotateRightExpression _parent}@anchor{494}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.RotateRightExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RotateRightExpression Parent}@anchor{495}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.RotateRightExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RotateRightExpression __str__}@anchor{496}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex RotateLeftExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RotateLeftExpression}@anchor{3f4}
@deffn {Class} pyGHDL.dom.Expression.RotateLeftExpression (node, left, right)

@subsubheading Inheritance

@image{inheritance-dfbb14562441738e8f2d06da6e0b7ee35871e8d5,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.RotateLeftExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RotateLeftExpression __init__}@anchor{497}
@deffn {Method} __init__ (node, left, right)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{left} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{right} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.RotateLeftExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RotateLeftExpression _parent}@anchor{498}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.RotateLeftExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RotateLeftExpression Parent}@anchor{499}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.RotateLeftExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression RotateLeftExpression __str__}@anchor{49a}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex QualifiedExpression (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression QualifiedExpression}@anchor{238}
@deffn {Class} pyGHDL.dom.Expression.QualifiedExpression (node, subtype, operand)

@subsubheading Inheritance

@image{inheritance-2c6ba1f161e3158f963eb4a8ca1bc9bd1da9c5a2,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.QualifiedExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression QualifiedExpression __init__}@anchor{49b}
@deffn {Method} __init__ (node, subtype, operand)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{operand} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.QualifiedExpression attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression QualifiedExpression _parent}@anchor{49c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.QualifiedExpression property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression QualifiedExpression Parent}@anchor{49d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.QualifiedExpression method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression QualifiedExpression __str__}@anchor{49e}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex SubtypeAllocation (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression SubtypeAllocation}@anchor{3f5}
@deffn {Class} pyGHDL.dom.Expression.SubtypeAllocation (node, subtype)

@subsubheading Inheritance

@image{inheritance-a5077807d042ab34464b4bd3b1c9a9a9987ac190,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.SubtypeAllocation method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression SubtypeAllocation __init__}@anchor{49f}
@deffn {Method} __init__ (node, subtype)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.SubtypeAllocation attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression SubtypeAllocation _parent}@anchor{4a0}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.SubtypeAllocation property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression SubtypeAllocation Parent}@anchor{4a1}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.SubtypeAllocation method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression SubtypeAllocation __str__}@anchor{4a2}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex QualifiedExpressionAllocation (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression QualifiedExpressionAllocation}@anchor{3f6}
@deffn {Class} pyGHDL.dom.Expression.QualifiedExpressionAllocation (node, qualifiedExpression)

@subsubheading Inheritance

@image{inheritance-fb01579e04820755e5be6d02b66fd9e0024ba8bf,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{qualifiedExpression} (@ref{238,,QualifiedExpression}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.QualifiedExpressionAllocation method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression QualifiedExpressionAllocation __init__}@anchor{4a3}
@deffn {Method} __init__ (node, qualifiedExpression)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{qualifiedExpression} (@ref{238,,QualifiedExpression}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.QualifiedExpressionAllocation attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression QualifiedExpressionAllocation _parent}@anchor{4a4}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.QualifiedExpressionAllocation property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression QualifiedExpressionAllocation Parent}@anchor{4a5}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.QualifiedExpressionAllocation method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression QualifiedExpressionAllocation __str__}@anchor{4a6}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex Aggregate (class in pyGHDL.dom.Expression)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression Aggregate}@anchor{3f7}
@deffn {Class} pyGHDL.dom.Expression.Aggregate (node, elements)

@subsubheading Inheritance

@image{inheritance-372e560d285d98a86bb829b5f9c00d1422f30d42,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{elements} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}AggregateElement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Expression.html#pyVHDLModel.Expression.AggregateElement}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Expression.Aggregate method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression Aggregate __init__}@anchor{4a7}
@deffn {Method} __init__ (node, elements)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{elements} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}AggregateElement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Expression.html#pyVHDLModel.Expression.AggregateElement}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Expression.Aggregate attribute)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression Aggregate _parent}@anchor{4a8}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Expression.Aggregate property)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression Aggregate Parent}@anchor{4a9}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Expression.Aggregate method)
@anchor{pyGHDL/pyGHDL dom Expression pyGHDL dom Expression Aggregate __str__}@anchor{4aa}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom InterfaceItem,pyGHDL dom Literal,pyGHDL dom Expression,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom InterfaceItem doc}@anchor{4ab}@anchor{pyGHDL/pyGHDL dom InterfaceItem module-pyGHDL dom InterfaceItem}@anchor{f}@anchor{pyGHDL/pyGHDL dom InterfaceItem pyghdl-dom-interfaceitem}@anchor{4ac}
@subsection @code{pyGHDL.dom.InterfaceItem}


@geindex module; pyGHDL.dom.InterfaceItem

`Classes'


@itemize -

@item 
@ref{4ad,,GenericConstantInterfaceItem}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{4ae,,GenericTypeInterfaceItem}:
@code{BaseType} is the base-class of all type entities in this model.

@item 
@ref{4af,,GenericPackageInterfaceItem}:
A @code{GenericInterfaceItem} is a mixin class for all generic interface items.

@item 
@ref{4b0,,GenericProcedureInterfaceItem}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{4b1,,GenericFunctionInterfaceItem}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{4b2,,PortSignalInterfaceItem}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{4b3,,ParameterConstantInterfaceItem}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{4b4,,ParameterVariableInterfaceItem}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{4b5,,ParameterSignalInterfaceItem}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{4b6,,ParameterFileInterfaceItem}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple
@end itemize


__________________________________________________________________


`Classes'

@geindex GenericConstantInterfaceItem (class in pyGHDL.dom.InterfaceItem)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericConstantInterfaceItem}@anchor{4ad}
@deffn {Class} pyGHDL.dom.InterfaceItem.GenericConstantInterfaceItem (node, identifiers, mode, subtype, defaultExpression, documentation=None)

@subsubheading Inheritance

@image{inheritance-cdea8d331d3781446a7adca99513c1330f08095a,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{mode} (Mode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Mode}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.InterfaceItem.GenericConstantInterfaceItem method)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericConstantInterfaceItem __init__}@anchor{4b7}
@deffn {Method} __init__ (node, identifiers, mode, subtype, defaultExpression, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{mode} (Mode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Mode}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.InterfaceItem.GenericConstantInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericConstantInterfaceItem _parent}@anchor{4b8}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.InterfaceItem.GenericConstantInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericConstantInterfaceItem Documentation}@anchor{4b9}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.InterfaceItem.GenericConstantInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericConstantInterfaceItem Identifiers}@anchor{4ba}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.InterfaceItem.GenericConstantInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericConstantInterfaceItem NormalizedIdentifiers}@anchor{4bb}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.InterfaceItem.GenericConstantInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericConstantInterfaceItem Parent}@anchor{4bc}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.InterfaceItem.GenericConstantInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericConstantInterfaceItem _identifiers}@anchor{4bd}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.InterfaceItem.GenericConstantInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericConstantInterfaceItem _normalizedIdentifiers}@anchor{4be}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.InterfaceItem.GenericConstantInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericConstantInterfaceItem _documentation}@anchor{4bf}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex GenericTypeInterfaceItem (class in pyGHDL.dom.InterfaceItem)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericTypeInterfaceItem}@anchor{4ae}
@deffn {Class} pyGHDL.dom.InterfaceItem.GenericTypeInterfaceItem (node, identifier, documentation=None)

@subsubheading Inheritance

@image{inheritance-2d56bbf3d62bcb11d8cb7bf172c5ed44ddbb4b63,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.InterfaceItem.GenericTypeInterfaceItem method)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericTypeInterfaceItem __init__}@anchor{4c0}
@deffn {Method} __init__ (node, identifier, documentation=None)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.InterfaceItem.GenericTypeInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericTypeInterfaceItem _parent}@anchor{4c1}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.InterfaceItem.GenericTypeInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericTypeInterfaceItem Documentation}@anchor{4c2}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.InterfaceItem.GenericTypeInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericTypeInterfaceItem Identifier}@anchor{4c3}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.InterfaceItem.GenericTypeInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericTypeInterfaceItem NormalizedIdentifier}@anchor{4c4}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.InterfaceItem.GenericTypeInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericTypeInterfaceItem Parent}@anchor{4c5}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.InterfaceItem.GenericTypeInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericTypeInterfaceItem _identifier}@anchor{4c6}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.InterfaceItem.GenericTypeInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericTypeInterfaceItem _normalizedIdentifier}@anchor{4c7}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.InterfaceItem.GenericTypeInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericTypeInterfaceItem _documentation}@anchor{4c8}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex GenericPackageInterfaceItem (class in pyGHDL.dom.InterfaceItem)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericPackageInterfaceItem}@anchor{4af}
@deffn {Class} pyGHDL.dom.InterfaceItem.GenericPackageInterfaceItem (node, name, documentation=None)

@subsubheading Inheritance

@image{inheritance-992b6d0e95f6d3a9b3427e15457b449c8d43183b,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{name} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.InterfaceItem.GenericPackageInterfaceItem method)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericPackageInterfaceItem __init__}@anchor{4c9}
@deffn {Method} __init__ (node, name, documentation=None)

Initializes a documented entity.

@*Parameters: 

@itemize *

@item 
@code{documentation} (Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]) – Documentation of a model entity.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{name} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex Documentation (pyGHDL.dom.InterfaceItem.GenericPackageInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericPackageInterfaceItem Documentation}@anchor{4ca}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex _documentation (pyGHDL.dom.InterfaceItem.GenericPackageInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericPackageInterfaceItem _documentation}@anchor{4cb}
@deffn {Attribute} _documentation:  Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex GenericProcedureInterfaceItem (class in pyGHDL.dom.InterfaceItem)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericProcedureInterfaceItem}@anchor{4b0}
@deffn {Class} pyGHDL.dom.InterfaceItem.GenericProcedureInterfaceItem (node, identifier, documentation=None)

@subsubheading Inheritance

@image{inheritance-2176ab9c07ea334677a5a631c630ad813a8be20e,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.InterfaceItem.GenericProcedureInterfaceItem method)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericProcedureInterfaceItem __init__}@anchor{4cc}
@deffn {Method} __init__ (node, identifier, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.InterfaceItem.GenericProcedureInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericProcedureInterfaceItem _parent}@anchor{4cd}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.InterfaceItem.GenericProcedureInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericProcedureInterfaceItem Documentation}@anchor{4ce}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.InterfaceItem.GenericProcedureInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericProcedureInterfaceItem Identifier}@anchor{4cf}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.InterfaceItem.GenericProcedureInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericProcedureInterfaceItem NormalizedIdentifier}@anchor{4d0}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.InterfaceItem.GenericProcedureInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericProcedureInterfaceItem Parent}@anchor{4d1}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.InterfaceItem.GenericProcedureInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericProcedureInterfaceItem _identifier}@anchor{4d2}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.InterfaceItem.GenericProcedureInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericProcedureInterfaceItem _normalizedIdentifier}@anchor{4d3}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.InterfaceItem.GenericProcedureInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericProcedureInterfaceItem _documentation}@anchor{4d4}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex GenericFunctionInterfaceItem (class in pyGHDL.dom.InterfaceItem)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericFunctionInterfaceItem}@anchor{4b1}
@deffn {Class} pyGHDL.dom.InterfaceItem.GenericFunctionInterfaceItem (node, identifier, documentation=None)

@subsubheading Inheritance

@image{inheritance-14ee7b5b6dcf5b5817622f514b41f645c5829b42,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.InterfaceItem.GenericFunctionInterfaceItem method)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericFunctionInterfaceItem __init__}@anchor{4d5}
@deffn {Method} __init__ (node, identifier, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.InterfaceItem.GenericFunctionInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericFunctionInterfaceItem _parent}@anchor{4d6}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.InterfaceItem.GenericFunctionInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericFunctionInterfaceItem Documentation}@anchor{4d7}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.InterfaceItem.GenericFunctionInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericFunctionInterfaceItem Identifier}@anchor{4d8}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.InterfaceItem.GenericFunctionInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericFunctionInterfaceItem NormalizedIdentifier}@anchor{4d9}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.InterfaceItem.GenericFunctionInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericFunctionInterfaceItem Parent}@anchor{4da}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.InterfaceItem.GenericFunctionInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericFunctionInterfaceItem _identifier}@anchor{4db}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.InterfaceItem.GenericFunctionInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericFunctionInterfaceItem _normalizedIdentifier}@anchor{4dc}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.InterfaceItem.GenericFunctionInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem GenericFunctionInterfaceItem _documentation}@anchor{4dd}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex PortSignalInterfaceItem (class in pyGHDL.dom.InterfaceItem)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem PortSignalInterfaceItem}@anchor{4b2}
@deffn {Class} pyGHDL.dom.InterfaceItem.PortSignalInterfaceItem (node, identifiers, mode, subtype, defaultExpression=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-05b3b35a2002c90cc760d3c8f7eae77d6da6320d,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{mode} (Mode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Mode}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.InterfaceItem.PortSignalInterfaceItem method)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem PortSignalInterfaceItem __init__}@anchor{4de}
@deffn {Method} __init__ (node, identifiers, mode, subtype, defaultExpression=None, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{mode} (Mode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Mode}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.InterfaceItem.PortSignalInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem PortSignalInterfaceItem _parent}@anchor{4df}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.InterfaceItem.PortSignalInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem PortSignalInterfaceItem Documentation}@anchor{4e0}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.InterfaceItem.PortSignalInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem PortSignalInterfaceItem Identifiers}@anchor{4e1}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.InterfaceItem.PortSignalInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem PortSignalInterfaceItem NormalizedIdentifiers}@anchor{4e2}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.InterfaceItem.PortSignalInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem PortSignalInterfaceItem Parent}@anchor{4e3}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.InterfaceItem.PortSignalInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem PortSignalInterfaceItem _identifiers}@anchor{4e4}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.InterfaceItem.PortSignalInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem PortSignalInterfaceItem _normalizedIdentifiers}@anchor{4e5}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.InterfaceItem.PortSignalInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem PortSignalInterfaceItem _documentation}@anchor{4e6}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex ParameterConstantInterfaceItem (class in pyGHDL.dom.InterfaceItem)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterConstantInterfaceItem}@anchor{4b3}
@deffn {Class} pyGHDL.dom.InterfaceItem.ParameterConstantInterfaceItem (node, identifiers, mode, subtype, defaultExpression=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-c8395fec1ad82de678853733f59eac8d12da0098,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{mode} (Mode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Mode}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.InterfaceItem.ParameterConstantInterfaceItem method)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterConstantInterfaceItem __init__}@anchor{4e7}
@deffn {Method} __init__ (node, identifiers, mode, subtype, defaultExpression=None, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{mode} (Mode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Mode}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.InterfaceItem.ParameterConstantInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterConstantInterfaceItem _parent}@anchor{4e8}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.InterfaceItem.ParameterConstantInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterConstantInterfaceItem Documentation}@anchor{4e9}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.InterfaceItem.ParameterConstantInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterConstantInterfaceItem Identifiers}@anchor{4ea}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.InterfaceItem.ParameterConstantInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterConstantInterfaceItem NormalizedIdentifiers}@anchor{4eb}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.InterfaceItem.ParameterConstantInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterConstantInterfaceItem Parent}@anchor{4ec}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.InterfaceItem.ParameterConstantInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterConstantInterfaceItem _identifiers}@anchor{4ed}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.InterfaceItem.ParameterConstantInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterConstantInterfaceItem _normalizedIdentifiers}@anchor{4ee}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.InterfaceItem.ParameterConstantInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterConstantInterfaceItem _documentation}@anchor{4ef}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex ParameterVariableInterfaceItem (class in pyGHDL.dom.InterfaceItem)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterVariableInterfaceItem}@anchor{4b4}
@deffn {Class} pyGHDL.dom.InterfaceItem.ParameterVariableInterfaceItem (node, identifiers, mode, subtype, defaultExpression=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-414b30a02235fb50ff3dbd3948aa1b3c39cdd6c6,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{mode} (Mode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Mode}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.InterfaceItem.ParameterVariableInterfaceItem method)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterVariableInterfaceItem __init__}@anchor{4f0}
@deffn {Method} __init__ (node, identifiers, mode, subtype, defaultExpression=None, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{mode} (Mode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Mode}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.InterfaceItem.ParameterVariableInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterVariableInterfaceItem _parent}@anchor{4f1}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.InterfaceItem.ParameterVariableInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterVariableInterfaceItem Documentation}@anchor{4f2}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.InterfaceItem.ParameterVariableInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterVariableInterfaceItem Identifiers}@anchor{4f3}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.InterfaceItem.ParameterVariableInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterVariableInterfaceItem NormalizedIdentifiers}@anchor{4f4}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.InterfaceItem.ParameterVariableInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterVariableInterfaceItem Parent}@anchor{4f5}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.InterfaceItem.ParameterVariableInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterVariableInterfaceItem _identifiers}@anchor{4f6}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.InterfaceItem.ParameterVariableInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterVariableInterfaceItem _normalizedIdentifiers}@anchor{4f7}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.InterfaceItem.ParameterVariableInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterVariableInterfaceItem _documentation}@anchor{4f8}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex ParameterSignalInterfaceItem (class in pyGHDL.dom.InterfaceItem)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterSignalInterfaceItem}@anchor{4b5}
@deffn {Class} pyGHDL.dom.InterfaceItem.ParameterSignalInterfaceItem (node, identifiers, mode, subtype, defaultExpression=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-90ebd41543d91b997286cc530c3362df96001ddb,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{mode} (Mode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Mode}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.InterfaceItem.ParameterSignalInterfaceItem method)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterSignalInterfaceItem __init__}@anchor{4f9}
@deffn {Method} __init__ (node, identifiers, mode, subtype, defaultExpression=None, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{mode} (Mode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Mode}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.InterfaceItem.ParameterSignalInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterSignalInterfaceItem _parent}@anchor{4fa}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.InterfaceItem.ParameterSignalInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterSignalInterfaceItem Documentation}@anchor{4fb}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.InterfaceItem.ParameterSignalInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterSignalInterfaceItem Identifiers}@anchor{4fc}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.InterfaceItem.ParameterSignalInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterSignalInterfaceItem NormalizedIdentifiers}@anchor{4fd}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.InterfaceItem.ParameterSignalInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterSignalInterfaceItem Parent}@anchor{4fe}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.InterfaceItem.ParameterSignalInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterSignalInterfaceItem _identifiers}@anchor{4ff}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.InterfaceItem.ParameterSignalInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterSignalInterfaceItem _normalizedIdentifiers}@anchor{500}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.InterfaceItem.ParameterSignalInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterSignalInterfaceItem _documentation}@anchor{501}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex ParameterFileInterfaceItem (class in pyGHDL.dom.InterfaceItem)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterFileInterfaceItem}@anchor{4b6}
@deffn {Class} pyGHDL.dom.InterfaceItem.ParameterFileInterfaceItem (node, identifiers, subtype, documentation=None)

@subsubheading Inheritance

@image{inheritance-9be7ccb351acb108d48b34f85eb52d994c3413be,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.InterfaceItem.ParameterFileInterfaceItem method)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterFileInterfaceItem __init__}@anchor{502}
@deffn {Method} __init__ (node, identifiers, subtype, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.InterfaceItem.ParameterFileInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterFileInterfaceItem _parent}@anchor{503}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.InterfaceItem.ParameterFileInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterFileInterfaceItem Documentation}@anchor{504}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.InterfaceItem.ParameterFileInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterFileInterfaceItem Identifiers}@anchor{505}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.InterfaceItem.ParameterFileInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterFileInterfaceItem NormalizedIdentifiers}@anchor{506}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.InterfaceItem.ParameterFileInterfaceItem property)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterFileInterfaceItem Parent}@anchor{507}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.InterfaceItem.ParameterFileInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterFileInterfaceItem _identifiers}@anchor{508}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.InterfaceItem.ParameterFileInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterFileInterfaceItem _normalizedIdentifiers}@anchor{509}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.InterfaceItem.ParameterFileInterfaceItem attribute)
@anchor{pyGHDL/pyGHDL dom InterfaceItem pyGHDL dom InterfaceItem ParameterFileInterfaceItem _documentation}@anchor{50a}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Literal,pyGHDL dom Misc,pyGHDL dom InterfaceItem,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Literal doc}@anchor{50b}@anchor{pyGHDL/pyGHDL dom Literal module-pyGHDL dom Literal}@anchor{10}@anchor{pyGHDL/pyGHDL dom Literal pyghdl-dom-literal}@anchor{50c}
@subsection @code{pyGHDL.dom.Literal}


@geindex module; pyGHDL.dom.Literal

`Classes'


@itemize -

@item 
@ref{50d,,NullLiteral}:
A @code{Literal} is a base-class for all literals.

@item 
@ref{50e,,EnumerationLiteral}:
A @code{Literal} is a base-class for all literals.

@item 
@ref{50f,,IntegerLiteral}:
A @code{NumericLiteral} is a base-class for all numeric literals.

@item 
@ref{510,,FloatingPointLiteral}:
A @code{NumericLiteral} is a base-class for all numeric literals.

@item 
@ref{511,,PhysicalIntegerLiteral}:
A @code{NumericLiteral} is a base-class for all numeric literals.

@item 
@ref{512,,PhysicalFloatingLiteral}:
A @code{NumericLiteral} is a base-class for all numeric literals.

@item 
@ref{513,,CharacterLiteral}:
A @code{Literal} is a base-class for all literals.

@item 
@ref{514,,StringLiteral}:
A @code{Literal} is a base-class for all literals.
@end itemize


__________________________________________________________________


`Classes'

@geindex NullLiteral (class in pyGHDL.dom.Literal)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal NullLiteral}@anchor{50d}
@deffn {Class} pyGHDL.dom.Literal.NullLiteral (node)

@subsubheading Inheritance

@image{inheritance-b177e839ed2bb358a66956dfdfe92414e20371e4,,,[graphviz],png}

@*Parameters: 
@code{node} (@code{Iir}) – 


@geindex __init__() (pyGHDL.dom.Literal.NullLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal NullLiteral __init__}@anchor{515}
@deffn {Method} __init__ (node)

Initializes a VHDL model entity.

@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex _parent (pyGHDL.dom.Literal.NullLiteral attribute)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal NullLiteral _parent}@anchor{516}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Literal.NullLiteral property)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal NullLiteral Parent}@anchor{517}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Literal.NullLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal NullLiteral __str__}@anchor{518}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex EnumerationLiteral (class in pyGHDL.dom.Literal)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal EnumerationLiteral}@anchor{50e}
@deffn {Class} pyGHDL.dom.Literal.EnumerationLiteral (node, value)

@subsubheading Inheritance

@image{inheritance-4ec4df0c982707c6ce7ecb3edd45fdc4a0246401,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Literal.EnumerationLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal EnumerationLiteral __init__}@anchor{519}
@deffn {Method} __init__ (node, value)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Literal.EnumerationLiteral attribute)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal EnumerationLiteral _parent}@anchor{51a}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Literal.EnumerationLiteral property)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal EnumerationLiteral Parent}@anchor{51b}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Literal.EnumerationLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal EnumerationLiteral __str__}@anchor{51c}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex IntegerLiteral (class in pyGHDL.dom.Literal)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal IntegerLiteral}@anchor{50f}
@deffn {Class} pyGHDL.dom.Literal.IntegerLiteral (node, value)

@subsubheading Inheritance

@image{inheritance-6e8cea2391d07682cd04432ce3b9a5e0731668c6,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Literal.IntegerLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal IntegerLiteral __init__}@anchor{51d}
@deffn {Method} __init__ (node, value)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Literal.IntegerLiteral attribute)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal IntegerLiteral _parent}@anchor{51e}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Literal.IntegerLiteral property)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal IntegerLiteral Parent}@anchor{51f}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Literal.IntegerLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal IntegerLiteral __str__}@anchor{520}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex FloatingPointLiteral (class in pyGHDL.dom.Literal)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal FloatingPointLiteral}@anchor{510}
@deffn {Class} pyGHDL.dom.Literal.FloatingPointLiteral (node, value)

@subsubheading Inheritance

@image{inheritance-10e729ad6b92434e4e411be00fc85cce94bed557,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (float@footnote{https://docs.python.org/3/library/functions.html#float}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Literal.FloatingPointLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal FloatingPointLiteral __init__}@anchor{521}
@deffn {Method} __init__ (node, value)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (float@footnote{https://docs.python.org/3/library/functions.html#float}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Literal.FloatingPointLiteral attribute)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal FloatingPointLiteral _parent}@anchor{522}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Literal.FloatingPointLiteral property)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal FloatingPointLiteral Parent}@anchor{523}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Literal.FloatingPointLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal FloatingPointLiteral __str__}@anchor{524}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex PhysicalIntegerLiteral (class in pyGHDL.dom.Literal)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal PhysicalIntegerLiteral}@anchor{511}
@deffn {Class} pyGHDL.dom.Literal.PhysicalIntegerLiteral (node, value, unitName)

@subsubheading Inheritance

@image{inheritance-e68be1318d25616e0b6eeba8df278fc6668a22a1,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@item 
@code{unitName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Literal.PhysicalIntegerLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal PhysicalIntegerLiteral __init__}@anchor{525}
@deffn {Method} __init__ (node, value, unitName)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@item 
@code{unitName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Literal.PhysicalIntegerLiteral attribute)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal PhysicalIntegerLiteral _parent}@anchor{526}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Literal.PhysicalIntegerLiteral property)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal PhysicalIntegerLiteral Parent}@anchor{527}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Literal.PhysicalIntegerLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal PhysicalIntegerLiteral __str__}@anchor{528}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex PhysicalFloatingLiteral (class in pyGHDL.dom.Literal)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal PhysicalFloatingLiteral}@anchor{512}
@deffn {Class} pyGHDL.dom.Literal.PhysicalFloatingLiteral (node, value, unitName)

@subsubheading Inheritance

@image{inheritance-bc1da0ca4d6cee379855fb1a7f6d1da30a4920ff,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@item 
@code{unitName} (float@footnote{https://docs.python.org/3/library/functions.html#float}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Literal.PhysicalFloatingLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal PhysicalFloatingLiteral __init__}@anchor{529}
@deffn {Method} __init__ (node, value, unitName)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@item 
@code{unitName} (float@footnote{https://docs.python.org/3/library/functions.html#float}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Literal.PhysicalFloatingLiteral attribute)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal PhysicalFloatingLiteral _parent}@anchor{52a}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Literal.PhysicalFloatingLiteral property)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal PhysicalFloatingLiteral Parent}@anchor{52b}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Literal.PhysicalFloatingLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal PhysicalFloatingLiteral __str__}@anchor{52c}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex CharacterLiteral (class in pyGHDL.dom.Literal)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal CharacterLiteral}@anchor{513}
@deffn {Class} pyGHDL.dom.Literal.CharacterLiteral (node, value)

@subsubheading Inheritance

@image{inheritance-038c3e4e4e5fbe41df8d55e44df03c6d60540a84,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Literal.CharacterLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal CharacterLiteral __init__}@anchor{52d}
@deffn {Method} __init__ (node, value)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Literal.CharacterLiteral attribute)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal CharacterLiteral _parent}@anchor{52e}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Literal.CharacterLiteral property)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal CharacterLiteral Parent}@anchor{52f}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Literal.CharacterLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal CharacterLiteral __str__}@anchor{530}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex StringLiteral (class in pyGHDL.dom.Literal)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal StringLiteral}@anchor{514}
@deffn {Class} pyGHDL.dom.Literal.StringLiteral (node, value)

@subsubheading Inheritance

@image{inheritance-efe3172839b63edb1e6f2da7c2810269133c253a,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Literal.StringLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal StringLiteral __init__}@anchor{531}
@deffn {Method} __init__ (node, value)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{value} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Literal.StringLiteral attribute)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal StringLiteral _parent}@anchor{532}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Literal.StringLiteral property)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal StringLiteral Parent}@anchor{533}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Literal.StringLiteral method)
@anchor{pyGHDL/pyGHDL dom Literal pyGHDL dom Literal StringLiteral __str__}@anchor{534}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Misc,pyGHDL dom Names,pyGHDL dom Literal,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Misc doc}@anchor{535}@anchor{pyGHDL/pyGHDL dom Misc module-pyGHDL dom Misc}@anchor{11}@anchor{pyGHDL/pyGHDL dom Misc pyghdl-dom-misc}@anchor{536}
@subsection @code{pyGHDL.dom.Misc}


@geindex module; pyGHDL.dom.Misc

@cartouche
@quotation Todo 
Add a module documentation.
@end quotation
@end cartouche

`Classes'


@itemize -

@item 
@ref{537,,Alias}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple
@end itemize


__________________________________________________________________


`Classes'

@geindex Alias (class in pyGHDL.dom.Misc)
@anchor{pyGHDL/pyGHDL dom Misc pyGHDL dom Misc Alias}@anchor{537}
@deffn {Class} pyGHDL.dom.Misc.Alias (node, aliasName, documentation=None)

@subsubheading Inheritance

@image{inheritance-f4e3a269dea7ec30f52dc9d1c52e5cacce3208a4,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{aliasName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Misc.Alias method)
@anchor{pyGHDL/pyGHDL dom Misc pyGHDL dom Misc Alias __init__}@anchor{538}
@deffn {Method} __init__ (node, aliasName, documentation=None)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{aliasName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Misc.Alias attribute)
@anchor{pyGHDL/pyGHDL dom Misc pyGHDL dom Misc Alias _parent}@anchor{539}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Misc.Alias property)
@anchor{pyGHDL/pyGHDL dom Misc pyGHDL dom Misc Alias Documentation}@anchor{53a}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Misc.Alias property)
@anchor{pyGHDL/pyGHDL dom Misc pyGHDL dom Misc Alias Identifier}@anchor{53b}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Misc.Alias property)
@anchor{pyGHDL/pyGHDL dom Misc pyGHDL dom Misc Alias NormalizedIdentifier}@anchor{53c}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Misc.Alias property)
@anchor{pyGHDL/pyGHDL dom Misc pyGHDL dom Misc Alias Parent}@anchor{53d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Misc.Alias attribute)
@anchor{pyGHDL/pyGHDL dom Misc pyGHDL dom Misc Alias _identifier}@anchor{53e}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Misc.Alias attribute)
@anchor{pyGHDL/pyGHDL dom Misc pyGHDL dom Misc Alias _normalizedIdentifier}@anchor{53f}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Misc.Alias attribute)
@anchor{pyGHDL/pyGHDL dom Misc pyGHDL dom Misc Alias _documentation}@anchor{540}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Names,pyGHDL dom NonStandard,pyGHDL dom Misc,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Names doc}@anchor{541}@anchor{pyGHDL/pyGHDL dom Names module-pyGHDL dom Names}@anchor{12}@anchor{pyGHDL/pyGHDL dom Names pyghdl-dom-names}@anchor{542}
@subsection @code{pyGHDL.dom.Names}


@geindex module; pyGHDL.dom.Names

`Classes'


@itemize -

@item 
@ref{543,,SimpleName}:
A `simple name' is a name made from a single word.

@item 
@ref{544,,ParenthesisName}:
@code{Name} is the base-class for all `names' in the VHDL language model.

@item 
@ref{545,,IndexedName}:
@code{Name} is the base-class for all `names' in the VHDL language model.

@item 
@ref{546,,SlicedName}:
@code{Name} is the base-class for all `names' in the VHDL language model.

@item 
@ref{547,,SelectedName}:
A `selected name' is a name made from multiple words separated by a dot (@code{.}).

@item 
@ref{548,,AttributeName}:
@code{Name} is the base-class for all `names' in the VHDL language model.

@item 
@ref{549,,AllName}:
The `all name' represents the reserved word @code{all} used in names.

@item 
@ref{54a,,OpenName}:
The `open name' represents the reserved word @code{open}.
@end itemize


__________________________________________________________________


`Classes'

@geindex SimpleName (class in pyGHDL.dom.Names)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SimpleName}@anchor{543}
@deffn {Class} pyGHDL.dom.Names.SimpleName (node, identifier)

@subsubheading Inheritance

@image{inheritance-707011e971008cd0a91b1ad728d464ba3063d09c,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Names.SimpleName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SimpleName __init__}@anchor{54b}
@deffn {Method} __init__ (node, identifier)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Names.SimpleName attribute)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SimpleName _parent}@anchor{54c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Names.SimpleName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SimpleName HasPrefix}@anchor{54d}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @ref{543,,simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Names.SimpleName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SimpleName Identifier}@anchor{54e}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Names.SimpleName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SimpleName NormalizedIdentifier}@anchor{54f}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Names.SimpleName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SimpleName Parent}@anchor{550}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Names.SimpleName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SimpleName Prefix}@anchor{551}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Names.SimpleName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SimpleName Root}@anchor{552}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @ref{543,,simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Names.SimpleName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SimpleName __str__}@anchor{553}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex ParenthesisName (class in pyGHDL.dom.Names)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names ParenthesisName}@anchor{544}
@deffn {Class} pyGHDL.dom.Names.ParenthesisName (node, prefix, associations)

@subsubheading Inheritance

@image{inheritance-c7c52ded249a2faeae0944011fc10bae7d3deff8,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{prefix} (Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 

@item 
@code{associations} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Names.ParenthesisName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names ParenthesisName __init__}@anchor{554}
@deffn {Method} __init__ (node, prefix, associations)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{prefix} (Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 

@item 
@code{associations} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Names.ParenthesisName attribute)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names ParenthesisName _parent}@anchor{555}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Names.ParenthesisName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names ParenthesisName HasPrefix}@anchor{556}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @ref{543,,simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Names.ParenthesisName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names ParenthesisName Identifier}@anchor{557}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Names.ParenthesisName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names ParenthesisName NormalizedIdentifier}@anchor{558}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Names.ParenthesisName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names ParenthesisName Parent}@anchor{559}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Names.ParenthesisName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names ParenthesisName Prefix}@anchor{55a}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Names.ParenthesisName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names ParenthesisName Root}@anchor{55b}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @ref{543,,simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Names.ParenthesisName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names ParenthesisName __str__}@anchor{55c}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex IndexedName (class in pyGHDL.dom.Names)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names IndexedName}@anchor{545}
@deffn {Class} pyGHDL.dom.Names.IndexedName (node, identifier)

@subsubheading Inheritance

@image{inheritance-4e6237061a9efa0db617e5ca210b3ea0d42846b7,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Names.IndexedName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names IndexedName __init__}@anchor{55d}
@deffn {Method} __init__ (node, identifier)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Names.IndexedName attribute)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names IndexedName _parent}@anchor{55e}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Names.IndexedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names IndexedName HasPrefix}@anchor{55f}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @ref{543,,simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Names.IndexedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names IndexedName Identifier}@anchor{560}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Names.IndexedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names IndexedName NormalizedIdentifier}@anchor{561}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Names.IndexedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names IndexedName Parent}@anchor{562}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Names.IndexedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names IndexedName Prefix}@anchor{563}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Names.IndexedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names IndexedName Root}@anchor{564}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @ref{543,,simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn
@end deffn

@geindex SlicedName (class in pyGHDL.dom.Names)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SlicedName}@anchor{546}
@deffn {Class} pyGHDL.dom.Names.SlicedName (node, identifier)

@subsubheading Inheritance

@image{inheritance-dbe300ee87b4b9008000a9cd2c5a4594e3c18587,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Names.SlicedName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SlicedName __init__}@anchor{565}
@deffn {Method} __init__ (node, identifier)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Names.SlicedName attribute)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SlicedName _parent}@anchor{566}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Names.SlicedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SlicedName HasPrefix}@anchor{567}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @ref{543,,simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Names.SlicedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SlicedName Identifier}@anchor{568}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Names.SlicedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SlicedName NormalizedIdentifier}@anchor{569}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Names.SlicedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SlicedName Parent}@anchor{56a}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Names.SlicedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SlicedName Prefix}@anchor{56b}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Names.SlicedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SlicedName Root}@anchor{56c}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @ref{543,,simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn
@end deffn

@geindex SelectedName (class in pyGHDL.dom.Names)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SelectedName}@anchor{547}
@deffn {Class} pyGHDL.dom.Names.SelectedName (node, identifier, prefix)

@subsubheading Inheritance

@image{inheritance-f44c6d56cdd7d737637a0b081825b812749fc088,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Names.SelectedName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SelectedName __init__}@anchor{56d}
@deffn {Method} __init__ (node, identifier, prefix)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Names.SelectedName attribute)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SelectedName _parent}@anchor{56e}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Names.SelectedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SelectedName HasPrefix}@anchor{56f}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @ref{543,,simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Names.SelectedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SelectedName Identifier}@anchor{570}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Names.SelectedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SelectedName NormalizedIdentifier}@anchor{571}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Names.SelectedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SelectedName Parent}@anchor{572}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Names.SelectedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SelectedName Prefix}@anchor{573}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Names.SelectedName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SelectedName Root}@anchor{574}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @ref{543,,simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Names.SelectedName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names SelectedName __str__}@anchor{575}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex AttributeName (class in pyGHDL.dom.Names)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AttributeName}@anchor{548}
@deffn {Class} pyGHDL.dom.Names.AttributeName (node, identifier, prefix)

@subsubheading Inheritance

@image{inheritance-4fed09063c90400ed0008b8878c9b2d2ef91f82b,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Names.AttributeName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AttributeName __init__}@anchor{576}
@deffn {Method} __init__ (node, identifier, prefix)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Names.AttributeName attribute)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AttributeName _parent}@anchor{577}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Names.AttributeName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AttributeName HasPrefix}@anchor{578}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @ref{543,,simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Names.AttributeName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AttributeName Identifier}@anchor{579}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Names.AttributeName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AttributeName NormalizedIdentifier}@anchor{57a}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Names.AttributeName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AttributeName Parent}@anchor{57b}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Names.AttributeName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AttributeName Prefix}@anchor{57c}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Names.AttributeName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AttributeName Root}@anchor{57d}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @ref{543,,simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Names.AttributeName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AttributeName __str__}@anchor{57e}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex AllName (class in pyGHDL.dom.Names)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AllName}@anchor{549}
@deffn {Class} pyGHDL.dom.Names.AllName (node, prefix)

@subsubheading Inheritance

@image{inheritance-af43c3569aeba37f0151aaa54cb3111cc5b4eea7,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{prefix} (Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Names.AllName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AllName __init__}@anchor{57f}
@deffn {Method} __init__ (node, prefix)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{prefix} (Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Names.AllName attribute)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AllName _parent}@anchor{580}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Names.AllName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AllName HasPrefix}@anchor{581}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @ref{543,,simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Names.AllName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AllName Identifier}@anchor{582}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Names.AllName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AllName NormalizedIdentifier}@anchor{583}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Names.AllName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AllName Parent}@anchor{584}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Names.AllName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AllName Prefix}@anchor{585}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Names.AllName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AllName Root}@anchor{586}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @ref{543,,simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Names.AllName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names AllName __str__}@anchor{587}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex OpenName (class in pyGHDL.dom.Names)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names OpenName}@anchor{54a}
@deffn {Class} pyGHDL.dom.Names.OpenName (node)

@subsubheading Inheritance

@image{inheritance-5ecfeb442035cec18a80bc7500c7bc5b3e0abc30,,,[graphviz],png}

@*Parameters: 
@code{node} (@code{Iir}) – 


@geindex __init__() (pyGHDL.dom.Names.OpenName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names OpenName __init__}@anchor{588}
@deffn {Method} __init__ (node)

Initializes a VHDL model entity.

@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex _parent (pyGHDL.dom.Names.OpenName attribute)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names OpenName _parent}@anchor{589}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Names.OpenName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names OpenName HasPrefix}@anchor{58a}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @ref{543,,simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Names.OpenName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names OpenName Identifier}@anchor{58b}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Names.OpenName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names OpenName NormalizedIdentifier}@anchor{58c}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Names.OpenName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names OpenName Parent}@anchor{58d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Names.OpenName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names OpenName Prefix}@anchor{58e}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Names.OpenName property)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names OpenName Root}@anchor{58f}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @ref{543,,simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Names.OpenName method)
@anchor{pyGHDL/pyGHDL dom Names pyGHDL dom Names OpenName __str__}@anchor{590}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom NonStandard,pyGHDL dom Object,pyGHDL dom Names,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom NonStandard doc}@anchor{591}@anchor{pyGHDL/pyGHDL dom NonStandard module-pyGHDL dom NonStandard}@anchor{13}@anchor{pyGHDL/pyGHDL dom NonStandard pyghdl-dom-nonstandard}@anchor{592}
@subsection @code{pyGHDL.dom.NonStandard}


@geindex module; pyGHDL.dom.NonStandard

@cartouche
@quotation Todo 
Add a module documentation.
@end quotation
@end cartouche

`Classes'


@itemize -

@item 
@ref{593,,Design}:
A @code{Design} represents all loaded and analysed files (see Document@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.html#pyVHDLModel.Document}). It’s the root of this

@item 
@ref{594,,Library}:
A @code{Library} represents a VHDL library. It contains all `primary' and `secondary' design units.

@item 
@ref{595,,Document}:
A @code{Document} represents a sourcefile. It contains `primary' and `secondary' design units.
@end itemize


__________________________________________________________________


`Classes'

@geindex Design (class in pyGHDL.dom.NonStandard)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design}@anchor{593}
@deffn {Class} pyGHDL.dom.NonStandard.Design

@subsubheading Inheritance

@image{inheritance-5f07b45fdd00de4c6c790f7b32030cda1b643499,,,[graphviz],png}

@geindex __init__() (pyGHDL.dom.NonStandard.Design method)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design __init__}@anchor{596}
@deffn {Method} __init__ ()

Initializes a VHDL design.

@*Parameters: 
@code{name} – Name of the design.

@end deffn

@geindex __ghdl_init() (pyGHDL.dom.NonStandard.Design method)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design __ghdl_init}@anchor{597}
@deffn {Method} __ghdl_init ()

Initialization: set options and then load libraries.
@end deffn

@geindex _parent (pyGHDL.dom.NonStandard.Design attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design _parent}@anchor{598}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documents (pyGHDL.dom.NonStandard.Design property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design Documents}@anchor{599}
@deffn {Property} Documents:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[Document@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.html#pyVHDLModel.Document}]

Returns a list of all documents (files) loaded for this design.
@end deffn

@geindex Libraries (pyGHDL.dom.NonStandard.Design property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design Libraries}@anchor{59a}
@deffn {Property} Libraries:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Library@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.html#pyVHDLModel.Library}]

Returns a list of all libraries specified for this design.
@end deffn

@geindex Parent (pyGHDL.dom.NonStandard.Design property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design Parent}@anchor{59b}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex name (pyGHDL.dom.NonStandard.Design attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design name}@anchor{59c}
@deffn {Attribute} name:  Optional@footnote{https://docs.python.org/3/library/typing.html#typing.Optional}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Name of the design
@end deffn

@geindex _libraries (pyGHDL.dom.NonStandard.Design attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design _libraries}@anchor{59d}
@deffn {Attribute} _libraries:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, @ref{594,,Library}]

List of all libraries defined for a design.
@end deffn

@geindex _documents (pyGHDL.dom.NonStandard.Design attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design _documents}@anchor{59e}
@deffn {Attribute} _documents:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[@ref{595,,Document}]

List of all documents loaded for a design.
@end deffn

@geindex _dependencyGraph (pyGHDL.dom.NonStandard.Design attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design _dependencyGraph}@anchor{59f}
@deffn {Attribute} _dependencyGraph:  @code{Graph}[None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, DesignUnit@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.DesignUnit}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

The graph of all dependencies in the designs.
@end deffn

@geindex _compileOrderGraph (pyGHDL.dom.NonStandard.Design attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design _compileOrderGraph}@anchor{5a0}
@deffn {Attribute} _compileOrderGraph:  @code{Graph}[None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, @ref{595,,Document}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

A graph derived from dependency graph containing the order of documents for compilation.
@end deffn

@geindex _hierarchyGraph (pyGHDL.dom.NonStandard.Design attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design _hierarchyGraph}@anchor{5a1}
@deffn {Attribute} _hierarchyGraph:  @code{Graph}[None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, DesignUnit@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.DesignUnit}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

A graph derived from dependency graph containing the design hierarchy.
@end deffn

@geindex _toplevel (pyGHDL.dom.NonStandard.Design attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Design _toplevel}@anchor{5a2}
@deffn {Attribute} _toplevel:  Union@footnote{https://docs.python.org/3/library/typing.html#typing.Union}[Entity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Entity}, Configuration@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Configuration}]

When computed, the toplevel design unit is cached in this field.
@end deffn
@end deffn

@geindex Library (class in pyGHDL.dom.NonStandard)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library}@anchor{594}
@deffn {Class} pyGHDL.dom.NonStandard.Library (identifier)

@subsubheading Inheritance

@image{inheritance-cde3ceb4e14a858b6616b0288669fc355215d7ba,,,[graphviz],png}

@*Parameters: 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 


@geindex _parent (pyGHDL.dom.NonStandard.Library attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library _parent}@anchor{5a3}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Architectures (pyGHDL.dom.NonStandard.Library property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library Architectures}@anchor{5a4}
@deffn {Property} Architectures:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Architecture@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Architecture}]]

Returns a list of all architectures declarations declared in this library.
@end deffn

@geindex Configurations (pyGHDL.dom.NonStandard.Library property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library Configurations}@anchor{5a5}
@deffn {Property} Configurations:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Configuration@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Configuration}]

Returns a list of all configuration declarations declared in this library.
@end deffn

@geindex Contexts (pyGHDL.dom.NonStandard.Library property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library Contexts}@anchor{5a6}
@deffn {Property} Contexts:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Context@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Context}]

Returns a list of all context declarations declared in this library.
@end deffn

@geindex Entities (pyGHDL.dom.NonStandard.Library property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library Entities}@anchor{5a7}
@deffn {Property} Entities:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Entity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Entity}]

Returns a list of all entity declarations declared in this library.
@end deffn

@geindex Identifier (pyGHDL.dom.NonStandard.Library property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library Identifier}@anchor{5a8}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.NonStandard.Library property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library NormalizedIdentifier}@anchor{5a9}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex PackageBodies (pyGHDL.dom.NonStandard.Library property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library PackageBodies}@anchor{5aa}
@deffn {Property} PackageBodies:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  PackageBody@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.PackageBody}]

Returns a list of all package body declarations declared in this library.
@end deffn

@geindex Packages (pyGHDL.dom.NonStandard.Library property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library Packages}@anchor{5ab}
@deffn {Property} Packages:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Package@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Package}]

Returns a list of all package declarations declared in this library.
@end deffn

@geindex Parent (pyGHDL.dom.NonStandard.Library property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library Parent}@anchor{5ac}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __init__() (pyGHDL.dom.NonStandard.Library method)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library __init__}@anchor{5ad}
@deffn {Method} __init__ (identifier)

Initializes a VHDL model entity.

@*Parameters: 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@end deffn

@geindex __str__() (pyGHDL.dom.NonStandard.Library method)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library __str__}@anchor{5ae}
@deffn {Method} __str__ ()

Return str(self).
@end deffn

@geindex _contexts (pyGHDL.dom.NonStandard.Library attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library _contexts}@anchor{5af}
@deffn {Attribute} _contexts:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Context@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Context}]

Dictionary of all contexts defined in a library.
@end deffn

@geindex _configurations (pyGHDL.dom.NonStandard.Library attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library _configurations}@anchor{5b0}
@deffn {Attribute} _configurations:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Configuration@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Configuration}]

Dictionary of all configurations defined in a library.
@end deffn

@geindex _entities (pyGHDL.dom.NonStandard.Library attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library _entities}@anchor{5b1}
@deffn {Attribute} _entities:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Entity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Entity}]

Dictionary of all entities defined in a library.
@end deffn

@geindex _architectures (pyGHDL.dom.NonStandard.Library attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library _architectures}@anchor{5b2}
@deffn {Attribute} _architectures:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Architecture@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Architecture}]]

Dictionary of all architectures defined in a library.
@end deffn

@geindex _packages (pyGHDL.dom.NonStandard.Library attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library _packages}@anchor{5b3}
@deffn {Attribute} _packages:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Package@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Package}]

Dictionary of all packages defined in a library.
@end deffn

@geindex _packageBodies (pyGHDL.dom.NonStandard.Library attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library _packageBodies}@anchor{5b4}
@deffn {Attribute} _packageBodies:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, PackageBody@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.PackageBody}]

Dictionary of all package bodies defined in a library.
@end deffn

@geindex _identifier (pyGHDL.dom.NonStandard.Library attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library _identifier}@anchor{5b5}
@deffn {Attribute} _identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.NonStandard.Library attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Library _normalizedIdentifier}@anchor{5b6}
@deffn {Attribute} _normalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized (lower case) identifier of a model entity.
@end deffn
@end deffn

@geindex Document (class in pyGHDL.dom.NonStandard)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document}@anchor{595}
@deffn {Class} pyGHDL.dom.NonStandard.Document (path, sourceCode=None, vhdlVersion=VHDLVersion.VHDL2008, dontParse=False, dontTranslate=False)

@subsubheading Inheritance

@image{inheritance-c3e8d970479dc44b2bea21f84d4d77e10bdbadba,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{path} (Path@footnote{https://docs.python.org/3/library/pathlib.html#pathlib.Path}) – 

@item 
@code{sourceCode} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{vhdlVersion} (VHDLVersion@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.html#pyVHDLModel.VHDLVersion}) – 

@item 
@code{dontParse} (bool@footnote{https://docs.python.org/3/library/functions.html#bool}) – 

@item 
@code{dontTranslate} (bool@footnote{https://docs.python.org/3/library/functions.html#bool}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.NonStandard.Document method)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document __init__}@anchor{5b7}
@deffn {Method} __init__ (path, sourceCode=None, vhdlVersion=VHDLVersion.VHDL2008, dontParse=False, dontTranslate=False)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{path} (Path@footnote{https://docs.python.org/3/library/pathlib.html#pathlib.Path}) – 

@item 
@code{sourceCode} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 

@item 
@code{vhdlVersion} (VHDLVersion@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.html#pyVHDLModel.VHDLVersion}) – 

@item 
@code{dontParse} (bool@footnote{https://docs.python.org/3/library/functions.html#bool}) – 

@item 
@code{dontTranslate} (bool@footnote{https://docs.python.org/3/library/functions.html#bool}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _parent}@anchor{5b8}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Architectures (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document Architectures}@anchor{5b9}
@deffn {Property} Architectures:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Architecture@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Architecture}]]

Returns a list of all architecture declarations found in this document.
@end deffn

@geindex Configurations (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document Configurations}@anchor{5ba}
@deffn {Property} Configurations:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Configuration@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Configuration}]

Returns a list of all configuration declarations found in this document.
@end deffn

@geindex Contexts (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document Contexts}@anchor{5bb}
@deffn {Property} Contexts:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Context@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Context}]

Returns a list of all context declarations found in this document.
@end deffn

@geindex DesignUnits (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document DesignUnits}@anchor{5bc}
@deffn {Property} DesignUnits:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[DesignUnit@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.DesignUnit}]

Returns a list of all design units declarations found in this document.
@end deffn

@geindex Documentation (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document Documentation}@anchor{5bd}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Entities (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document Entities}@anchor{5be}
@deffn {Property} Entities:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Entity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Entity}]

Returns a list of all entity declarations found in this document.
@end deffn

@geindex PackageBodies (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document PackageBodies}@anchor{5bf}
@deffn {Property} PackageBodies:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  PackageBody@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.PackageBody}]

Returns a list of all package body declarations found in this document.
@end deffn

@geindex Packages (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document Packages}@anchor{5c0}
@deffn {Property} Packages:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  Package@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.Package}]

Returns a list of all package declarations found in this document.
@end deffn

@geindex Parent (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document Parent}@anchor{5c1}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex VerificationModes (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document VerificationModes}@anchor{5c2}
@deffn {Property} VerificationModes:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  VerificationMode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.PSLModel.html#pyVHDLModel.PSLModel.VerificationMode}]

Returns a list of all verification mode declarations found in this document.
@end deffn

@geindex VerificationProperties (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document VerificationProperties}@anchor{5c3}
@deffn {Property} VerificationProperties:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  VerificationProperty@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.PSLModel.html#pyVHDLModel.PSLModel.VerificationProperty}]

Returns a list of all verification property declarations found in this document.
@end deffn

@geindex VerificationUnits (pyGHDL.dom.NonStandard.Document property)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document VerificationUnits}@anchor{5c4}
@deffn {Property} VerificationUnits:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str},  VerificationUnit@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.PSLModel.html#pyVHDLModel.PSLModel.VerificationUnit}]

Returns a list of all verification unit declarations found in this document.
@end deffn

@geindex _path (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _path}@anchor{5c5}
@deffn {Attribute} _path:  Path

path to the document. @code{None} if virtual document.
@end deffn

@geindex _designUnits (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _designUnits}@anchor{5c6}
@deffn {Attribute} _designUnits:  List[DesignUnit]

List of all design units defined in a document.
@end deffn

@geindex _contexts (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _contexts}@anchor{5c7}
@deffn {Attribute} _contexts:  Dict[str, Context]

Dictionary of all contexts defined in a document.
@end deffn

@geindex _configurations (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _configurations}@anchor{5c8}
@deffn {Attribute} _configurations:  Dict[str, Configuration]

Dictionary of all configurations defined in a document.
@end deffn

@geindex _entities (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _entities}@anchor{5c9}
@deffn {Attribute} _entities:  Dict[str, Entity]

Dictionary of all entities defined in a document.
@end deffn

@geindex _architectures (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _architectures}@anchor{5ca}
@deffn {Attribute} _architectures:  Dict[str, Dict[str, Architecture]]

Dictionary of all architectures defined in a document.
@end deffn

@geindex _packages (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _packages}@anchor{5cb}
@deffn {Attribute} _packages:  Dict[str, Package]

Dictionary of all packages defined in a document.
@end deffn

@geindex _packageBodies (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _packageBodies}@anchor{5cc}
@deffn {Attribute} _packageBodies:  Dict[str, PackageBody]

Dictionary of all package bodies defined in a document.
@end deffn

@geindex _verificationUnits (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _verificationUnits}@anchor{5cd}
@deffn {Attribute} _verificationUnits:  Dict[str, VerificationUnit]

Dictionary of all PSL verification units defined in a document.
@end deffn

@geindex _verificationProperties (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _verificationProperties}@anchor{5ce}
@deffn {Attribute} _verificationProperties:  Dict[str, VerificationProperty]

Dictionary of all PSL verification properties defined in a document.
@end deffn

@geindex _verificationModes (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _verificationModes}@anchor{5cf}
@deffn {Attribute} _verificationModes:  Dict[str, VerificationMode]

Dictionary of all PSL verification modes defined in a document.
@end deffn

@geindex _documentation (pyGHDL.dom.NonStandard.Document attribute)
@anchor{pyGHDL/pyGHDL dom NonStandard pyGHDL dom NonStandard Document _documentation}@anchor{5d0}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Object,pyGHDL dom PSL,pyGHDL dom NonStandard,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Object doc}@anchor{5d1}@anchor{pyGHDL/pyGHDL dom Object module-pyGHDL dom Object}@anchor{14}@anchor{pyGHDL/pyGHDL dom Object pyghdl-dom-object}@anchor{5d2}
@subsection @code{pyGHDL.dom.Object}


@geindex module; pyGHDL.dom.Object

`Classes'


@itemize -

@item 
@ref{5d3,,Constant}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{5d4,,DeferredConstant}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{5d5,,Variable}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{5d6,,SharedVariable}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{5d7,,Signal}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{5d8,,File}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple
@end itemize


__________________________________________________________________


`Classes'

@geindex Constant (class in pyGHDL.dom.Object)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Constant}@anchor{5d3}
@deffn {Class} pyGHDL.dom.Object.Constant (node, identifiers, subtype, defaultExpression, documentation=None)

@subsubheading Inheritance

@image{inheritance-a5bea9944dfb463f9de9c0135fb3f6da4767b1e9,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Object.Constant method)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Constant __init__}@anchor{5d9}
@deffn {Method} __init__ (node, identifiers, subtype, defaultExpression, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Object.Constant attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Constant _parent}@anchor{5da}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Object.Constant property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Constant Documentation}@anchor{5db}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.Object.Constant property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Constant Identifiers}@anchor{5dc}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.Object.Constant property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Constant NormalizedIdentifiers}@anchor{5dd}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.Object.Constant property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Constant Parent}@anchor{5de}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.Object.Constant attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Constant _identifiers}@anchor{5df}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.Object.Constant attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Constant _normalizedIdentifiers}@anchor{5e0}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.Object.Constant attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Constant _documentation}@anchor{5e1}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex DeferredConstant (class in pyGHDL.dom.Object)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object DeferredConstant}@anchor{5d4}
@deffn {Class} pyGHDL.dom.Object.DeferredConstant (node, identifiers, subtype, documentation=None)

@subsubheading Inheritance

@image{inheritance-af6fbbc50e4b1b43040eb61893d7614d60da7dc1,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Object.DeferredConstant method)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object DeferredConstant __init__}@anchor{5e2}
@deffn {Method} __init__ (node, identifiers, subtype, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Object.DeferredConstant attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object DeferredConstant _parent}@anchor{5e3}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Object.DeferredConstant property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object DeferredConstant Documentation}@anchor{5e4}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.Object.DeferredConstant property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object DeferredConstant Identifiers}@anchor{5e5}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.Object.DeferredConstant property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object DeferredConstant NormalizedIdentifiers}@anchor{5e6}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.Object.DeferredConstant property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object DeferredConstant Parent}@anchor{5e7}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.Object.DeferredConstant attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object DeferredConstant _identifiers}@anchor{5e8}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.Object.DeferredConstant attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object DeferredConstant _normalizedIdentifiers}@anchor{5e9}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.Object.DeferredConstant attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object DeferredConstant _documentation}@anchor{5ea}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex Variable (class in pyGHDL.dom.Object)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Variable}@anchor{5d5}
@deffn {Class} pyGHDL.dom.Object.Variable (node, identifiers, subtype, defaultExpression, documentation=None)

@subsubheading Inheritance

@image{inheritance-bf58688464468feb5f29441ff88956b0a445c481,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Object.Variable method)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Variable __init__}@anchor{5eb}
@deffn {Method} __init__ (node, identifiers, subtype, defaultExpression, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Object.Variable attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Variable _parent}@anchor{5ec}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Object.Variable property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Variable Documentation}@anchor{5ed}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.Object.Variable property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Variable Identifiers}@anchor{5ee}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.Object.Variable property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Variable NormalizedIdentifiers}@anchor{5ef}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.Object.Variable property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Variable Parent}@anchor{5f0}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.Object.Variable attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Variable _identifiers}@anchor{5f1}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.Object.Variable attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Variable _normalizedIdentifiers}@anchor{5f2}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.Object.Variable attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Variable _documentation}@anchor{5f3}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex SharedVariable (class in pyGHDL.dom.Object)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object SharedVariable}@anchor{5d6}
@deffn {Class} pyGHDL.dom.Object.SharedVariable (node, identifiers, subtype, documentation=None)

@subsubheading Inheritance

@image{inheritance-f92b5d0c1d74213e1dddc96a0ed773d03cd8f817,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Object.SharedVariable method)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object SharedVariable __init__}@anchor{5f4}
@deffn {Method} __init__ (node, identifiers, subtype, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Object.SharedVariable attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object SharedVariable _parent}@anchor{5f5}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Object.SharedVariable property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object SharedVariable Documentation}@anchor{5f6}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.Object.SharedVariable property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object SharedVariable Identifiers}@anchor{5f7}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.Object.SharedVariable property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object SharedVariable NormalizedIdentifiers}@anchor{5f8}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.Object.SharedVariable property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object SharedVariable Parent}@anchor{5f9}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.Object.SharedVariable attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object SharedVariable _identifiers}@anchor{5fa}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.Object.SharedVariable attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object SharedVariable _normalizedIdentifiers}@anchor{5fb}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.Object.SharedVariable attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object SharedVariable _documentation}@anchor{5fc}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex Signal (class in pyGHDL.dom.Object)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Signal}@anchor{5d7}
@deffn {Class} pyGHDL.dom.Object.Signal (node, identifiers, subtype, defaultExpression, documentation=None)

@subsubheading Inheritance

@image{inheritance-771ed94c2d504151d16519b9f6bdf42500d16143,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Object.Signal method)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Signal __init__}@anchor{5fd}
@deffn {Method} __init__ (node, identifiers, subtype, defaultExpression, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{defaultExpression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Object.Signal attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Signal _parent}@anchor{5fe}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Object.Signal property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Signal Documentation}@anchor{5ff}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.Object.Signal property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Signal Identifiers}@anchor{600}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.Object.Signal property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Signal NormalizedIdentifiers}@anchor{601}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.Object.Signal property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Signal Parent}@anchor{602}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.Object.Signal attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Signal _identifiers}@anchor{603}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.Object.Signal attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Signal _normalizedIdentifiers}@anchor{604}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.Object.Signal attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object Signal _documentation}@anchor{605}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex File (class in pyGHDL.dom.Object)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object File}@anchor{5d8}
@deffn {Class} pyGHDL.dom.Object.File (node, identifiers, subtype, documentation=None)

@subsubheading Inheritance

@image{inheritance-09612fe36a493844a7df4bfa2c886f8ba3069e36,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Object.File method)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object File __init__}@anchor{606}
@deffn {Method} __init__ (node, identifiers, subtype, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Object.File attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object File _parent}@anchor{607}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Object.File property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object File Documentation}@anchor{608}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifiers (pyGHDL.dom.Object.File property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object File Identifiers}@anchor{609}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.Object.File property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object File NormalizedIdentifiers}@anchor{60a}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.Object.File property)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object File Parent}@anchor{60b}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.Object.File attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object File _identifiers}@anchor{60c}
@deffn {Attribute} _identifiers:  Tuple[str]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.Object.File attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object File _normalizedIdentifiers}@anchor{60d}
@deffn {Attribute} _normalizedIdentifiers:  Tuple[str]

A list of normalized (lower case) identifiers.
@end deffn

@geindex _documentation (pyGHDL.dom.Object.File attribute)
@anchor{pyGHDL/pyGHDL dom Object pyGHDL dom Object File _documentation}@anchor{60e}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom PSL,pyGHDL dom Range,pyGHDL dom Object,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom PSL doc}@anchor{60f}@anchor{pyGHDL/pyGHDL dom PSL module-pyGHDL dom PSL}@anchor{15}@anchor{pyGHDL/pyGHDL dom PSL pyghdl-dom-psl}@anchor{610}
@subsection @code{pyGHDL.dom.PSL}


@geindex module; pyGHDL.dom.PSL

This module contains all DOM classes for VHDL’s design units (@code{context},
@code{architecture}, @code{package},
@code{package body}, @code{context} and
@code{configuration}.

`Classes'


@itemize -

@item 
@ref{611,,VerificationUnit}:
A @code{PrimaryUnit} is a base-class for all primary units.

@item 
@ref{612,,VerificationProperty}:
A @code{PrimaryUnit} is a base-class for all primary units.

@item 
@ref{613,,VerificationMode}:
A @code{PrimaryUnit} is a base-class for all primary units.

@item 
@ref{614,,DefaultClock}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple
@end itemize


__________________________________________________________________


`Classes'

@geindex VerificationUnit (class in pyGHDL.dom.PSL)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit}@anchor{611}
@deffn {Class} pyGHDL.dom.PSL.VerificationUnit (node, identifier)

@subsubheading Inheritance

@image{inheritance-c76502dfc5c629bca46d3ae2c20d344f716d2201,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.PSL.VerificationUnit method)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit __init__}@anchor{615}
@deffn {Method} __init__ (node, identifier)

Initializes a design unit.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Identifier (name) of the design unit.

@item 
@code{contextItems} – A sequence of library, use or context clauses.

@item 
@code{documentation} – Associated documentation of the design unit.

@item 
@code{node} (@code{Iir}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _parent}@anchor{616}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex ContextItems (pyGHDL.dom.PSL.VerificationUnit property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit ContextItems}@anchor{617}
@deffn {Property} ContextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[@ref{307,,LibraryClause}  |  @ref{308,,UseClause}  |  @ref{309,,ContextReference}]

Read-only property to access the sequence of all context items comprising library, use and context clauses
(@ref{618,,_contextItems}).

@*Returns: 
Sequence of context items.

@end deffn

@geindex ContextReferences (pyGHDL.dom.PSL.VerificationUnit property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit ContextReferences}@anchor{619}
@deffn {Property} ContextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.ContextReference}]

Read-only property to access the sequence of context clauses (@ref{61a,,_contextReferences}).

@*Returns: 
Sequence of context clauses.

@end deffn

@geindex Documentation (pyGHDL.dom.PSL.VerificationUnit property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit Documentation}@anchor{61b}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.PSL.VerificationUnit property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit Identifier}@anchor{61c}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex LibraryReferences (pyGHDL.dom.PSL.VerificationUnit property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit LibraryReferences}@anchor{61d}
@deffn {Property} LibraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.LibraryClause}]

Read-only property to access the sequence of library clauses (@ref{61e,,_libraryReferences}).

@*Returns: 
Sequence of library clauses.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.PSL.VerificationUnit property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit NormalizedIdentifier}@anchor{61f}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex PackageReferences (pyGHDL.dom.PSL.VerificationUnit property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit PackageReferences}@anchor{620}
@deffn {Property} PackageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.UseClause}]

Read-only property to access the sequence of use clauses (@ref{621,,_packageReferences}).

@*Returns: 
Sequence of use clauses.

@end deffn

@geindex Parent (pyGHDL.dom.PSL.VerificationUnit property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit Parent}@anchor{622}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _library (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _library}@anchor{623}
@deffn {Attribute} _library:  Library

The VHDL library, the design unit was analyzed into.
@end deffn

@geindex _contextItems (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _contextItems}@anchor{618}
@deffn {Attribute} _contextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextUnion]

List of all context items (library, use and context clauses).
@end deffn

@geindex _libraryReferences (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _libraryReferences}@anchor{61e}
@deffn {Attribute} _libraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause]

List of library clauses.
@end deffn

@geindex _packageReferences (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _packageReferences}@anchor{621}
@deffn {Attribute} _packageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause]

List of use clauses.
@end deffn

@geindex _contextReferences (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _contextReferences}@anchor{61a}
@deffn {Attribute} _contextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference]

List of context clauses.
@end deffn

@geindex _referencedLibraries (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _referencedLibraries}@anchor{624}
@deffn {Attribute} _referencedLibraries:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Library]

Referenced libraries based on explicit library clauses or implicit inheritance
@end deffn

@geindex _referencedPackages (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _referencedPackages}@anchor{625}
@deffn {Attribute} _referencedPackages:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Package]]

Referenced packages based on explicit use clauses or implicit inheritance
@end deffn

@geindex _referencedContexts (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _referencedContexts}@anchor{626}
@deffn {Attribute} _referencedContexts:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Context]

Referenced contexts based on explicit context references or implicit inheritance
@end deffn

@geindex _dependencyVertex (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _dependencyVertex}@anchor{627}
@deffn {Attribute} _dependencyVertex:  @code{Vertex}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, DesignUnit, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

The vertex in the dependency graph
@end deffn

@geindex _hierarchyVertex (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _hierarchyVertex}@anchor{628}
@deffn {Attribute} _hierarchyVertex:  @code{Vertex}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, DesignUnit, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

The vertex in the hierarchy graph
@end deffn

@geindex _identifier (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _identifier}@anchor{629}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _normalizedIdentifier}@anchor{62a}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.PSL.VerificationUnit attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationUnit _documentation}@anchor{62b}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex VerificationProperty (class in pyGHDL.dom.PSL)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty}@anchor{612}
@deffn {Class} pyGHDL.dom.PSL.VerificationProperty (node, identifier)

@subsubheading Inheritance

@image{inheritance-ac862b7ba53d6be9632b17775a02e9c420e30ea0,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.PSL.VerificationProperty method)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty __init__}@anchor{62c}
@deffn {Method} __init__ (node, identifier)

Initializes a design unit.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Identifier (name) of the design unit.

@item 
@code{contextItems} – A sequence of library, use or context clauses.

@item 
@code{documentation} – Associated documentation of the design unit.

@item 
@code{node} (@code{Iir}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _parent}@anchor{62d}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex ContextItems (pyGHDL.dom.PSL.VerificationProperty property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty ContextItems}@anchor{62e}
@deffn {Property} ContextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[@ref{307,,LibraryClause}  |  @ref{308,,UseClause}  |  @ref{309,,ContextReference}]

Read-only property to access the sequence of all context items comprising library, use and context clauses
(@ref{62f,,_contextItems}).

@*Returns: 
Sequence of context items.

@end deffn

@geindex ContextReferences (pyGHDL.dom.PSL.VerificationProperty property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty ContextReferences}@anchor{630}
@deffn {Property} ContextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.ContextReference}]

Read-only property to access the sequence of context clauses (@ref{631,,_contextReferences}).

@*Returns: 
Sequence of context clauses.

@end deffn

@geindex Documentation (pyGHDL.dom.PSL.VerificationProperty property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty Documentation}@anchor{632}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.PSL.VerificationProperty property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty Identifier}@anchor{633}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex LibraryReferences (pyGHDL.dom.PSL.VerificationProperty property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty LibraryReferences}@anchor{634}
@deffn {Property} LibraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.LibraryClause}]

Read-only property to access the sequence of library clauses (@ref{635,,_libraryReferences}).

@*Returns: 
Sequence of library clauses.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.PSL.VerificationProperty property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty NormalizedIdentifier}@anchor{636}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex PackageReferences (pyGHDL.dom.PSL.VerificationProperty property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty PackageReferences}@anchor{637}
@deffn {Property} PackageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.UseClause}]

Read-only property to access the sequence of use clauses (@ref{638,,_packageReferences}).

@*Returns: 
Sequence of use clauses.

@end deffn

@geindex Parent (pyGHDL.dom.PSL.VerificationProperty property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty Parent}@anchor{639}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _library (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _library}@anchor{63a}
@deffn {Attribute} _library:  Library

The VHDL library, the design unit was analyzed into.
@end deffn

@geindex _contextItems (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _contextItems}@anchor{62f}
@deffn {Attribute} _contextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextUnion]

List of all context items (library, use and context clauses).
@end deffn

@geindex _libraryReferences (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _libraryReferences}@anchor{635}
@deffn {Attribute} _libraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause]

List of library clauses.
@end deffn

@geindex _packageReferences (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _packageReferences}@anchor{638}
@deffn {Attribute} _packageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause]

List of use clauses.
@end deffn

@geindex _contextReferences (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _contextReferences}@anchor{631}
@deffn {Attribute} _contextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference]

List of context clauses.
@end deffn

@geindex _referencedLibraries (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _referencedLibraries}@anchor{63b}
@deffn {Attribute} _referencedLibraries:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Library]

Referenced libraries based on explicit library clauses or implicit inheritance
@end deffn

@geindex _referencedPackages (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _referencedPackages}@anchor{63c}
@deffn {Attribute} _referencedPackages:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Package]]

Referenced packages based on explicit use clauses or implicit inheritance
@end deffn

@geindex _referencedContexts (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _referencedContexts}@anchor{63d}
@deffn {Attribute} _referencedContexts:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Context]

Referenced contexts based on explicit context references or implicit inheritance
@end deffn

@geindex _dependencyVertex (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _dependencyVertex}@anchor{63e}
@deffn {Attribute} _dependencyVertex:  @code{Vertex}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, DesignUnit, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

The vertex in the dependency graph
@end deffn

@geindex _hierarchyVertex (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _hierarchyVertex}@anchor{63f}
@deffn {Attribute} _hierarchyVertex:  @code{Vertex}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, DesignUnit, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

The vertex in the hierarchy graph
@end deffn

@geindex _identifier (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _identifier}@anchor{640}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _normalizedIdentifier}@anchor{641}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.PSL.VerificationProperty attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationProperty _documentation}@anchor{642}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex VerificationMode (class in pyGHDL.dom.PSL)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode}@anchor{613}
@deffn {Class} pyGHDL.dom.PSL.VerificationMode (node, identifier)

@subsubheading Inheritance

@image{inheritance-1db36fd725ace0579a796ccd997853f4c407f036,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.PSL.VerificationMode method)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode __init__}@anchor{643}
@deffn {Method} __init__ (node, identifier)

Initializes a design unit.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Identifier (name) of the design unit.

@item 
@code{contextItems} – A sequence of library, use or context clauses.

@item 
@code{documentation} – Associated documentation of the design unit.

@item 
@code{node} (@code{Iir}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _parent}@anchor{644}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex ContextItems (pyGHDL.dom.PSL.VerificationMode property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode ContextItems}@anchor{645}
@deffn {Property} ContextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[@ref{307,,LibraryClause}  |  @ref{308,,UseClause}  |  @ref{309,,ContextReference}]

Read-only property to access the sequence of all context items comprising library, use and context clauses
(@ref{646,,_contextItems}).

@*Returns: 
Sequence of context items.

@end deffn

@geindex ContextReferences (pyGHDL.dom.PSL.VerificationMode property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode ContextReferences}@anchor{647}
@deffn {Property} ContextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.ContextReference}]

Read-only property to access the sequence of context clauses (@ref{648,,_contextReferences}).

@*Returns: 
Sequence of context clauses.

@end deffn

@geindex Documentation (pyGHDL.dom.PSL.VerificationMode property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode Documentation}@anchor{649}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.PSL.VerificationMode property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode Identifier}@anchor{64a}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex LibraryReferences (pyGHDL.dom.PSL.VerificationMode property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode LibraryReferences}@anchor{64b}
@deffn {Property} LibraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.LibraryClause}]

Read-only property to access the sequence of library clauses (@ref{64c,,_libraryReferences}).

@*Returns: 
Sequence of library clauses.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.PSL.VerificationMode property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode NormalizedIdentifier}@anchor{64d}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex PackageReferences (pyGHDL.dom.PSL.VerificationMode property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode PackageReferences}@anchor{64e}
@deffn {Property} PackageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.DesignUnit.html#pyVHDLModel.DesignUnit.UseClause}]

Read-only property to access the sequence of use clauses (@ref{64f,,_packageReferences}).

@*Returns: 
Sequence of use clauses.

@end deffn

@geindex Parent (pyGHDL.dom.PSL.VerificationMode property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode Parent}@anchor{650}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _library (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _library}@anchor{651}
@deffn {Attribute} _library:  Library

The VHDL library, the design unit was analyzed into.
@end deffn

@geindex _contextItems (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _contextItems}@anchor{646}
@deffn {Attribute} _contextItems:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextUnion]

List of all context items (library, use and context clauses).
@end deffn

@geindex _libraryReferences (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _libraryReferences}@anchor{64c}
@deffn {Attribute} _libraryReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[LibraryClause]

List of library clauses.
@end deffn

@geindex _packageReferences (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _packageReferences}@anchor{64f}
@deffn {Attribute} _packageReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[UseClause]

List of use clauses.
@end deffn

@geindex _contextReferences (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _contextReferences}@anchor{648}
@deffn {Attribute} _contextReferences:  List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[ContextReference]

List of context clauses.
@end deffn

@geindex _referencedLibraries (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _referencedLibraries}@anchor{652}
@deffn {Attribute} _referencedLibraries:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Library]

Referenced libraries based on explicit library clauses or implicit inheritance
@end deffn

@geindex _referencedPackages (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _referencedPackages}@anchor{653}
@deffn {Attribute} _referencedPackages:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Package]]

Referenced packages based on explicit use clauses or implicit inheritance
@end deffn

@geindex _referencedContexts (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _referencedContexts}@anchor{654}
@deffn {Attribute} _referencedContexts:  Dict@footnote{https://docs.python.org/3/library/typing.html#typing.Dict}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, Context]

Referenced contexts based on explicit context references or implicit inheritance
@end deffn

@geindex _dependencyVertex (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _dependencyVertex}@anchor{655}
@deffn {Attribute} _dependencyVertex:  @code{Vertex}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, DesignUnit, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

The vertex in the dependency graph
@end deffn

@geindex _hierarchyVertex (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _hierarchyVertex}@anchor{656}
@deffn {Attribute} _hierarchyVertex:  @code{Vertex}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}, DesignUnit, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

The vertex in the hierarchy graph
@end deffn

@geindex _identifier (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _identifier}@anchor{657}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _normalizedIdentifier}@anchor{658}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.PSL.VerificationMode attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL VerificationMode _documentation}@anchor{659}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex DefaultClock (class in pyGHDL.dom.PSL)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL DefaultClock}@anchor{614}
@deffn {Class} pyGHDL.dom.PSL.DefaultClock (node, identifier)

@subsubheading Inheritance

@image{inheritance-edfb11d6eebcf24ac38dc60f62a2dc699f988ccc,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.PSL.DefaultClock method)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL DefaultClock __init__}@anchor{65a}
@deffn {Method} __init__ (node, identifier)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.PSL.DefaultClock attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL DefaultClock _parent}@anchor{65b}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Identifier (pyGHDL.dom.PSL.DefaultClock property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL DefaultClock Identifier}@anchor{65c}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.PSL.DefaultClock property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL DefaultClock NormalizedIdentifier}@anchor{65d}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.PSL.DefaultClock property)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL DefaultClock Parent}@anchor{65e}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.PSL.DefaultClock attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL DefaultClock _identifier}@anchor{65f}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.PSL.DefaultClock attribute)
@anchor{pyGHDL/pyGHDL dom PSL pyGHDL dom PSL DefaultClock _normalizedIdentifier}@anchor{660}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Range,pyGHDL dom Sequential,pyGHDL dom PSL,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Range doc}@anchor{661}@anchor{pyGHDL/pyGHDL dom Range module-pyGHDL dom Range}@anchor{16}@anchor{pyGHDL/pyGHDL dom Range pyghdl-dom-range}@anchor{662}
@subsection @code{pyGHDL.dom.Range}


@geindex module; pyGHDL.dom.Range

`Classes'


@itemize -

@item 
@ref{243,,Range}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple
@end itemize


__________________________________________________________________


`Classes'

@geindex Range (class in pyGHDL.dom.Range)
@anchor{pyGHDL/pyGHDL dom Range pyGHDL dom Range Range}@anchor{243}
@deffn {Class} pyGHDL.dom.Range.Range (leftBound, rightBound, direction)

@subsubheading Inheritance

@image{inheritance-f6bc8b6da0c0b3a872c7a6fabf634702465a8f35,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{leftBound} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{rightBound} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{direction} (Direction@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Direction}) – 
@end itemize


@geindex _parent (pyGHDL.dom.Range.Range attribute)
@anchor{pyGHDL/pyGHDL dom Range pyGHDL dom Range Range _parent}@anchor{663}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Range.Range property)
@anchor{pyGHDL/pyGHDL dom Range pyGHDL dom Range Range Parent}@anchor{664}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __init__() (pyGHDL.dom.Range.Range method)
@anchor{pyGHDL/pyGHDL dom Range pyGHDL dom Range Range __init__}@anchor{665}
@deffn {Method} __init__ (leftBound, rightBound, direction)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{leftBound} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{rightBound} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{direction} (Direction@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Direction}) – 
@end itemize

@end deffn

@geindex __str__() (pyGHDL.dom.Range.Range method)
@anchor{pyGHDL/pyGHDL dom Range pyGHDL dom Range Range __str__}@anchor{666}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Sequential,pyGHDL dom Subprogram,pyGHDL dom Range,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Sequential doc}@anchor{667}@anchor{pyGHDL/pyGHDL dom Sequential module-pyGHDL dom Sequential}@anchor{17}@anchor{pyGHDL/pyGHDL dom Sequential pyghdl-dom-sequential}@anchor{668}
@subsection @code{pyGHDL.dom.Sequential}


@geindex module; pyGHDL.dom.Sequential

`Classes'


@itemize -

@item 
@ref{669,,IfBranch}:
A @code{Branch} is a base-class for all branches in a if statement.

@item 
@ref{66a,,ElsifBranch}:
A @code{Branch} is a base-class for all branches in a if statement.

@item 
@ref{66b,,ElseBranch}:
A @code{Branch} is a base-class for all branches in a if statement.

@item 
@ref{66c,,IfStatement}:
A @code{CompoundStatement} is a base-class for all compound statements.

@item 
@ref{66d,,IndexedChoice}:
A @code{SequentialChoice} is a base-class for all sequential choices (in case statements).

@item 
@ref{66e,,RangedChoice}:
A @code{SequentialChoice} is a base-class for all sequential choices (in case statements).

@item 
@ref{66f,,Case}:
A @code{Case} is a base-class for all cases.

@item 
@ref{670,,OthersCase}:
A @code{Case} is a base-class for all cases.

@item 
@ref{671,,CaseStatement}:
A @code{CompoundStatement} is a base-class for all compound statements.

@item 
@ref{672,,ForLoopStatement}:
A @code{LoopStatement} is a base-class for all loop statements.

@item 
@ref{673,,SequentialSimpleSignalAssignment}:
A @code{SequentialStatement} is a base-class for all sequential statements.

@item 
@ref{674,,SequentialProcedureCall}:
A @code{SequentialStatement} is a base-class for all sequential statements.

@item 
@ref{675,,SequentialAssertStatement}:
A @code{SequentialStatement} is a base-class for all sequential statements.

@item 
@ref{676,,SequentialReportStatement}:
A @code{SequentialStatement} is a base-class for all sequential statements.

@item 
@ref{677,,NullStatement}:
A @code{SequentialStatement} is a base-class for all sequential statements.

@item 
@ref{678,,WaitStatement}:
A @code{SequentialStatement} is a base-class for all sequential statements.
@end itemize


__________________________________________________________________


`Classes'

@geindex IfBranch (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfBranch}@anchor{669}
@deffn {Class} pyGHDL.dom.Sequential.IfBranch (branchNode, condition, statements=None)

@subsubheading Inheritance

@image{inheritance-4818b08fc1a12e8ff564db6c36275532c9ecb107,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.IfBranch method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfBranch __init__}@anchor{679}
@deffn {Method} __init__ (branchNode, condition, statements=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.IfBranch attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfBranch _parent}@anchor{67a}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Sequential.IfBranch property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfBranch Parent}@anchor{67b}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn
@end deffn

@geindex ElsifBranch (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ElsifBranch}@anchor{66a}
@deffn {Class} pyGHDL.dom.Sequential.ElsifBranch (branchNode, condition, statements=None)

@subsubheading Inheritance

@image{inheritance-8821c7be2ee4032cf91f9e5f07da21e66c7d73f4,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.ElsifBranch method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ElsifBranch __init__}@anchor{67c}
@deffn {Method} __init__ (branchNode, condition, statements=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.ElsifBranch attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ElsifBranch _parent}@anchor{67d}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Sequential.ElsifBranch property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ElsifBranch Parent}@anchor{67e}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn
@end deffn

@geindex ElseBranch (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ElseBranch}@anchor{66b}
@deffn {Class} pyGHDL.dom.Sequential.ElseBranch (branchNode, statements=None)

@subsubheading Inheritance

@image{inheritance-78966a27530b7941e161c4bb588e71fa41974068,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.ElseBranch method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ElseBranch __init__}@anchor{67f}
@deffn {Method} __init__ (branchNode, statements=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{branchNode} (@code{Iir}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.ElseBranch attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ElseBranch _parent}@anchor{680}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Sequential.ElseBranch property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ElseBranch Parent}@anchor{681}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn
@end deffn

@geindex IfStatement (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfStatement}@anchor{66c}
@deffn {Class} pyGHDL.dom.Sequential.IfStatement (ifNode, ifBranch, elsifBranches=None, elseBranch=None, label=None)

@subsubheading Inheritance

@image{inheritance-8fed2fdfde8a2cb627d3edc4c68d28d04dcee02a,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{ifNode} (@code{Iir}) – 

@item 
@code{ifBranch} (@ref{669,,IfBranch}) – 

@item 
@code{elsifBranches} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{66a,,ElsifBranch}@code{]}) – 

@item 
@code{elseBranch} (@ref{66b,,ElseBranch}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.IfStatement method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfStatement __init__}@anchor{682}
@deffn {Method} __init__ (ifNode, ifBranch, elsifBranches=None, elseBranch=None, label=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{ifNode} (@code{Iir}) – 

@item 
@code{ifBranch} (@ref{669,,IfBranch}) – 

@item 
@code{elsifBranches} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{66a,,ElsifBranch}@code{] }@code{| }@code{None}) – 

@item 
@code{elseBranch} (@ref{66b,,ElseBranch}@code{ | }@code{None}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.IfStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfStatement _parent}@anchor{683}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Sequential.IfStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfStatement Label}@anchor{684}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Sequential.IfStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfStatement NormalizedLabel}@anchor{685}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Sequential.IfStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfStatement Parent}@anchor{686}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Sequential.IfStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfStatement _label}@anchor{687}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Sequential.IfStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IfStatement _normalizedLabel}@anchor{688}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex IndexedChoice (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IndexedChoice}@anchor{66d}
@deffn {Class} pyGHDL.dom.Sequential.IndexedChoice (node, expression)

@subsubheading Inheritance

@image{inheritance-b55984adb544bf985a765f4f8dd6ff6b544ac226,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.IndexedChoice method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IndexedChoice __init__}@anchor{689}
@deffn {Method} __init__ (node, expression)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.IndexedChoice attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IndexedChoice _parent}@anchor{68a}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Sequential.IndexedChoice property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IndexedChoice Parent}@anchor{68b}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Sequential.IndexedChoice method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential IndexedChoice __str__}@anchor{68c}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex RangedChoice (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential RangedChoice}@anchor{66e}
@deffn {Class} pyGHDL.dom.Sequential.RangedChoice (node, rng)

@subsubheading Inheritance

@image{inheritance-3069dc6392605c71a9fd7476e62d6c462eaa63e4,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{rng} (@ref{243,,Range}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.RangedChoice method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential RangedChoice __init__}@anchor{68d}
@deffn {Method} __init__ (node, rng)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{rng} (@ref{243,,Range}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.RangedChoice attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential RangedChoice _parent}@anchor{68e}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Sequential.RangedChoice property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential RangedChoice Parent}@anchor{68f}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Sequential.RangedChoice method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential RangedChoice __str__}@anchor{690}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex Case (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential Case}@anchor{66f}
@deffn {Class} pyGHDL.dom.Sequential.Case (node, choices, statements=None)

@subsubheading Inheritance

@image{inheritance-c4ec02c3c95d2cd3b6d9870f208fc0e5059f6fd5,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{choices} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialChoice@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialChoice}@code{]}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.Case method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential Case __init__}@anchor{691}
@deffn {Method} __init__ (node, choices, statements=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{choices} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialChoice@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialChoice}@code{]}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.Case attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential Case _parent}@anchor{692}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Sequential.Case property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential Case Parent}@anchor{693}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Sequential.Case method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential Case __str__}@anchor{694}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex OthersCase (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential OthersCase}@anchor{670}
@deffn {Class} pyGHDL.dom.Sequential.OthersCase (caseNode, statements=None)

@subsubheading Inheritance

@image{inheritance-572240624be37dea35f7a6f10d4c5eeb6527fcf4,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{caseNode} (@code{Iir}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.OthersCase method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential OthersCase __init__}@anchor{695}
@deffn {Method} __init__ (caseNode, statements=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{caseNode} (@code{Iir}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.OthersCase attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential OthersCase _parent}@anchor{696}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Parent (pyGHDL.dom.Sequential.OthersCase property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential OthersCase Parent}@anchor{697}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex __str__() (pyGHDL.dom.Sequential.OthersCase method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential OthersCase __str__}@anchor{698}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex CaseStatement (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential CaseStatement}@anchor{671}
@deffn {Class} pyGHDL.dom.Sequential.CaseStatement (caseNode, label, expression, cases)

@subsubheading Inheritance

@image{inheritance-69da7a54febba4b0e75e794c0b70968d0cda666e,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{caseNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{cases} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialCase@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialCase}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.CaseStatement method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential CaseStatement __init__}@anchor{699}
@deffn {Method} __init__ (caseNode, label, expression, cases)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{caseNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{expression} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{cases} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialCase@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialCase}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.CaseStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential CaseStatement _parent}@anchor{69a}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Sequential.CaseStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential CaseStatement Label}@anchor{69b}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Sequential.CaseStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential CaseStatement NormalizedLabel}@anchor{69c}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Sequential.CaseStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential CaseStatement Parent}@anchor{69d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Sequential.CaseStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential CaseStatement _label}@anchor{69e}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Sequential.CaseStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential CaseStatement _normalizedLabel}@anchor{69f}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex ForLoopStatement (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ForLoopStatement}@anchor{672}
@deffn {Class} pyGHDL.dom.Sequential.ForLoopStatement (loopNode, loopIndex, rng, statements=None, label=None)

@subsubheading Inheritance

@image{inheritance-a7a0f0820f9ea2cb8dbd5149f94dcc7999db5a5a,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{loopNode} (@code{Iir}) – 

@item 
@code{loopIndex} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{rng} (@ref{243,,Range}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{]}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.ForLoopStatement method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ForLoopStatement __init__}@anchor{6a0}
@deffn {Method} __init__ (loopNode, loopIndex, rng, statements=None, label=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{loopNode} (@code{Iir}) – 

@item 
@code{loopIndex} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{rng} (@ref{243,,Range}) – 

@item 
@code{statements} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}SequentialStatement@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Sequential.html#pyVHDLModel.Sequential.SequentialStatement}@code{] }@code{| }@code{None}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.ForLoopStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ForLoopStatement _parent}@anchor{6a1}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Sequential.ForLoopStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ForLoopStatement Label}@anchor{6a2}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Sequential.ForLoopStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ForLoopStatement NormalizedLabel}@anchor{6a3}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Sequential.ForLoopStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ForLoopStatement Parent}@anchor{6a4}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Sequential.ForLoopStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ForLoopStatement _label}@anchor{6a5}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Sequential.ForLoopStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential ForLoopStatement _normalizedLabel}@anchor{6a6}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex SequentialSimpleSignalAssignment (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialSimpleSignalAssignment}@anchor{673}
@deffn {Class} pyGHDL.dom.Sequential.SequentialSimpleSignalAssignment (assignmentNode, target, waveform, label=None)

@subsubheading Inheritance

@image{inheritance-0e42d7a4eb1dc805fd8e5f1252d64e7fd58cb5a1,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{assignmentNode} (@code{Iir}) – 

@item 
@code{target} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{waveform} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{276,,WaveformElement}@code{]}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.SequentialSimpleSignalAssignment method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialSimpleSignalAssignment __init__}@anchor{6a7}
@deffn {Method} __init__ (assignmentNode, target, waveform, label=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{assignmentNode} (@code{Iir}) – 

@item 
@code{target} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{waveform} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{276,,WaveformElement}@code{]}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.SequentialSimpleSignalAssignment attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialSimpleSignalAssignment _parent}@anchor{6a8}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Sequential.SequentialSimpleSignalAssignment property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialSimpleSignalAssignment Label}@anchor{6a9}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Sequential.SequentialSimpleSignalAssignment property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialSimpleSignalAssignment NormalizedLabel}@anchor{6aa}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Sequential.SequentialSimpleSignalAssignment property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialSimpleSignalAssignment Parent}@anchor{6ab}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Sequential.SequentialSimpleSignalAssignment attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialSimpleSignalAssignment _label}@anchor{6ac}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Sequential.SequentialSimpleSignalAssignment attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialSimpleSignalAssignment _normalizedLabel}@anchor{6ad}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex SequentialProcedureCall (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialProcedureCall}@anchor{674}
@deffn {Class} pyGHDL.dom.Sequential.SequentialProcedureCall (callNode, procedureName, parameterMappings, label=None)

@subsubheading Inheritance

@image{inheritance-dc3fc35041160c0dab6bcb849c2616c9b29133f7,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{callNode} (@code{Iir}) – 

@item 
@code{procedureName} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{parameterMappings} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{266,,ParameterAssociationItem}@code{]}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.SequentialProcedureCall method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialProcedureCall __init__}@anchor{6ae}
@deffn {Method} __init__ (callNode, procedureName, parameterMappings, label=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{callNode} (@code{Iir}) – 

@item 
@code{procedureName} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{parameterMappings} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@ref{266,,ParameterAssociationItem}@code{]}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.SequentialProcedureCall attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialProcedureCall _parent}@anchor{6af}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Sequential.SequentialProcedureCall property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialProcedureCall Label}@anchor{6b0}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Sequential.SequentialProcedureCall property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialProcedureCall NormalizedLabel}@anchor{6b1}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Sequential.SequentialProcedureCall property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialProcedureCall Parent}@anchor{6b2}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Sequential.SequentialProcedureCall attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialProcedureCall _label}@anchor{6b3}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Sequential.SequentialProcedureCall attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialProcedureCall _normalizedLabel}@anchor{6b4}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex SequentialAssertStatement (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialAssertStatement}@anchor{675}
@deffn {Class} pyGHDL.dom.Sequential.SequentialAssertStatement (assertNode, condition, message=None, severity=None, label=None)

@subsubheading Inheritance

@image{inheritance-cb74c33b58c7e37df7f03fc4587e90bb6b4d7de4,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{assertNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{message} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{severity} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.SequentialAssertStatement method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialAssertStatement __init__}@anchor{6b5}
@deffn {Method} __init__ (assertNode, condition, message=None, severity=None, label=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{assertNode} (@code{Iir}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{message} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{severity} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.SequentialAssertStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialAssertStatement _parent}@anchor{6b6}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Sequential.SequentialAssertStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialAssertStatement Label}@anchor{6b7}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Sequential.SequentialAssertStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialAssertStatement NormalizedLabel}@anchor{6b8}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Sequential.SequentialAssertStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialAssertStatement Parent}@anchor{6b9}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Sequential.SequentialAssertStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialAssertStatement _label}@anchor{6ba}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Sequential.SequentialAssertStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialAssertStatement _normalizedLabel}@anchor{6bb}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex SequentialReportStatement (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialReportStatement}@anchor{676}
@deffn {Class} pyGHDL.dom.Sequential.SequentialReportStatement (reportNode, message, severity=None, label=None)

@subsubheading Inheritance

@image{inheritance-91b2f14eb5e69bf9665a645e2d828259b297d148,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{reportNode} (@code{Iir}) – 

@item 
@code{message} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{severity} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.SequentialReportStatement method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialReportStatement __init__}@anchor{6bc}
@deffn {Method} __init__ (reportNode, message, severity=None, label=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{reportNode} (@code{Iir}) – 

@item 
@code{message} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{severity} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.SequentialReportStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialReportStatement _parent}@anchor{6bd}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Sequential.SequentialReportStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialReportStatement Label}@anchor{6be}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Sequential.SequentialReportStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialReportStatement NormalizedLabel}@anchor{6bf}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Sequential.SequentialReportStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialReportStatement Parent}@anchor{6c0}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Sequential.SequentialReportStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialReportStatement _label}@anchor{6c1}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Sequential.SequentialReportStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential SequentialReportStatement _normalizedLabel}@anchor{6c2}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex NullStatement (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential NullStatement}@anchor{677}
@deffn {Class} pyGHDL.dom.Sequential.NullStatement (waitNode, label=None)

@subsubheading Inheritance

@image{inheritance-ca51ee30f1de26f8b28dcfc0c13c5d4222630751,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{waitNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.NullStatement method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential NullStatement __init__}@anchor{6c3}
@deffn {Method} __init__ (waitNode, label=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{waitNode} (@code{Iir}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.NullStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential NullStatement _parent}@anchor{6c4}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Sequential.NullStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential NullStatement Label}@anchor{6c5}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Sequential.NullStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential NullStatement NormalizedLabel}@anchor{6c6}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Sequential.NullStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential NullStatement Parent}@anchor{6c7}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Sequential.NullStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential NullStatement _label}@anchor{6c8}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Sequential.NullStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential NullStatement _normalizedLabel}@anchor{6c9}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@geindex WaitStatement (class in pyGHDL.dom.Sequential)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential WaitStatement}@anchor{678}
@deffn {Class} pyGHDL.dom.Sequential.WaitStatement (waitNode, sensitivityList=None, condition=None, timeout=None, label=None)

@subsubheading Inheritance

@image{inheritance-f9be7367c6b87cadcf42c6fcb6d5a2d1b7902117,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{waitNode} (@code{Iir}) – 

@item 
@code{sensitivityList} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}@code{]}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{timeout} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Sequential.WaitStatement method)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential WaitStatement __init__}@anchor{6ca}
@deffn {Method} __init__ (waitNode, sensitivityList=None, condition=None, timeout=None, label=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{waitNode} (@code{Iir}) – 

@item 
@code{sensitivityList} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}@code{]}) – 

@item 
@code{condition} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{timeout} (@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}) – 

@item 
@code{label} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Sequential.WaitStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential WaitStatement _parent}@anchor{6cb}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Label (pyGHDL.dom.Sequential.WaitStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential WaitStatement Label}@anchor{6cc}
@deffn {Property} Label:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s label.

@*Returns: 
Label of a model entity.

@end deffn

@geindex NormalizedLabel (pyGHDL.dom.Sequential.WaitStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential WaitStatement NormalizedLabel}@anchor{6cd}
@deffn {Property} NormalizedLabel:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s normalized (lower case) label.

@*Returns: 
Normalized label of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Sequential.WaitStatement property)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential WaitStatement Parent}@anchor{6ce}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _label (pyGHDL.dom.Sequential.WaitStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential WaitStatement _label}@anchor{6cf}
@deffn {Attribute} _label:  Nullable[str]

The label of a model entity.
@end deffn

@geindex _normalizedLabel (pyGHDL.dom.Sequential.WaitStatement attribute)
@anchor{pyGHDL/pyGHDL dom Sequential pyGHDL dom Sequential WaitStatement _normalizedLabel}@anchor{6d0}
@deffn {Attribute} _normalizedLabel:  Nullable[str]

The normalized (lower case) label of a model entity.
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Subprogram,pyGHDL dom Symbol,pyGHDL dom Sequential,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Subprogram doc}@anchor{6d1}@anchor{pyGHDL/pyGHDL dom Subprogram module-pyGHDL dom Subprogram}@anchor{18}@anchor{pyGHDL/pyGHDL dom Subprogram pyghdl-dom-subprogram}@anchor{6d2}
@subsection @code{pyGHDL.dom.Subprogram}


@geindex module; pyGHDL.dom.Subprogram

`Classes'


@itemize -

@item 
@ref{6d3,,Function}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{6d4,,Procedure}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple
@end itemize


__________________________________________________________________


`Classes'

@geindex Function (class in pyGHDL.dom.Subprogram)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Function}@anchor{6d3}
@deffn {Class} pyGHDL.dom.Subprogram.Function (node, functionName, returnType, genericItems=None, parameterItems=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-e404c52f32da9d59320ad3eb4c0e5dab6bde1e68,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{functionName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{returnType} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{genericItems} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}GenericInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.GenericInterfaceItem}@code{]}) – 

@item 
@code{parameterItems} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}ParameterInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.ParameterInterfaceItem}@code{]}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Subprogram.Function method)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Function __init__}@anchor{6d5}
@deffn {Method} __init__ (node, functionName, returnType, genericItems=None, parameterItems=None, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{functionName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{returnType} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 

@item 
@code{genericItems} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}GenericInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.GenericInterfaceItem}@code{] }@code{| }@code{None}) – 

@item 
@code{parameterItems} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}ParameterInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.ParameterInterfaceItem}@code{] }@code{| }@code{None}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Subprogram.Function attribute)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Function _parent}@anchor{6d6}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Subprogram.Function property)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Function Documentation}@anchor{6d7}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Subprogram.Function property)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Function Identifier}@anchor{6d8}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Subprogram.Function property)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Function NormalizedIdentifier}@anchor{6d9}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Subprogram.Function property)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Function Parent}@anchor{6da}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Subprogram.Function attribute)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Function _identifier}@anchor{6db}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Subprogram.Function attribute)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Function _normalizedIdentifier}@anchor{6dc}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Subprogram.Function attribute)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Function _documentation}@anchor{6dd}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex Procedure (class in pyGHDL.dom.Subprogram)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Procedure}@anchor{6d4}
@deffn {Class} pyGHDL.dom.Subprogram.Procedure (node, procedureName, genericItems=None, parameterItems=None, documentation=None)

@subsubheading Inheritance

@image{inheritance-fa0991a5d6504e18c5fce8933ff30bfaff90f78f,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{procedureName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{genericItems} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}GenericInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.GenericInterfaceItem}@code{]}) – 

@item 
@code{parameterItems} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}ParameterInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.ParameterInterfaceItem}@code{]}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Subprogram.Procedure method)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Procedure __init__}@anchor{6de}
@deffn {Method} __init__ (node, procedureName, genericItems=None, parameterItems=None, documentation=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{procedureName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{genericItems} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}GenericInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.GenericInterfaceItem}@code{] }@code{| }@code{None}) – 

@item 
@code{parameterItems} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}ParameterInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.ParameterInterfaceItem}@code{] }@code{| }@code{None}) – 

@item 
@code{documentation} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Subprogram.Procedure attribute)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Procedure _parent}@anchor{6df}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Subprogram.Procedure property)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Procedure Documentation}@anchor{6e0}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Subprogram.Procedure property)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Procedure Identifier}@anchor{6e1}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Subprogram.Procedure property)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Procedure NormalizedIdentifier}@anchor{6e2}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Subprogram.Procedure property)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Procedure Parent}@anchor{6e3}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Subprogram.Procedure attribute)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Procedure _identifier}@anchor{6e4}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Subprogram.Procedure attribute)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Procedure _normalizedIdentifier}@anchor{6e5}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Subprogram.Procedure attribute)
@anchor{pyGHDL/pyGHDL dom Subprogram pyGHDL dom Subprogram Procedure _documentation}@anchor{6e6}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Symbol,pyGHDL dom Type,pyGHDL dom Subprogram,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Symbol doc}@anchor{6e7}@anchor{pyGHDL/pyGHDL dom Symbol module-pyGHDL dom Symbol}@anchor{19}@anchor{pyGHDL/pyGHDL dom Symbol pyghdl-dom-symbol}@anchor{6e8}
@subsection @code{pyGHDL.dom.Symbol}


@geindex module; pyGHDL.dom.Symbol

`Classes'


@itemize -

@item 
@ref{6e9,,LibraryReferenceSymbol}:
A library reference in a library clause.

@item 
@ref{6ea,,PackageReferenceSymbol}:
A package reference in a use clause.

@item 
@ref{6eb,,PackageMembersReferenceSymbol}:
A package member reference in a use clause.

@item 
@ref{6ec,,AllPackageMembersReferenceSymbol}:
A package reference in a use clause.

@item 
@ref{6ed,,ContextReferenceSymbol}:
A context reference in a context clause.

@item 
@ref{28e,,EntityInstantiationSymbol}:
An entity reference in a direct entity instantiation.

@item 
@ref{286,,ComponentInstantiationSymbol}:
A component reference in a component instantiation.

@item 
@ref{297,,ConfigurationInstantiationSymbol}:
A configuration reference in a configuration instantiation.

@item 
@ref{32e,,EntitySymbol}:
An entity reference in an architecture declaration.

@item 
@ref{28f,,ArchitectureSymbol}:
An entity reference in an entity instantiation with architecture name.

@item 
@ref{36a,,PackageSymbol}:
A package reference in a package body declaration.

@item 
@ref{6ee,,SimpleSubtypeSymbol}:
A configuration reference in a configuration instantiation.

@item 
@ref{6ef,,ConstrainedScalarSubtypeSymbol}:
A configuration reference in a configuration instantiation.

@item 
@ref{6f0,,ConstrainedCompositeSubtypeSymbol}:
A configuration reference in a configuration instantiation.

@item 
@ref{6f1,,SimpleObjectOrFunctionCallSymbol}:
A configuration reference in a configuration instantiation.

@item 
@ref{6f2,,IndexedObjectOrFunctionCallSymbol}:
A configuration reference in a configuration instantiation.
@end itemize


__________________________________________________________________


`Classes'

@geindex LibraryReferenceSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol LibraryReferenceSymbol}@anchor{6e9}
@deffn {Class} pyGHDL.dom.Symbol.LibraryReferenceSymbol (identifierNode, identifier)

@subsubheading Inheritance

@image{inheritance-373834f8a4652f6fd95b2a86e9b8410a0ebfcd38,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.LibraryReferenceSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol LibraryReferenceSymbol __init__}@anchor{6f3}
@deffn {Method} __init__ (identifierNode, identifier)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.LibraryReferenceSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol LibraryReferenceSymbol _parent}@anchor{6f4}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.LibraryReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol LibraryReferenceSymbol HasPrefix}@anchor{6f5}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.LibraryReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol LibraryReferenceSymbol Identifier}@anchor{6f6}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.LibraryReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol LibraryReferenceSymbol NormalizedIdentifier}@anchor{6f7}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.LibraryReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol LibraryReferenceSymbol Parent}@anchor{6f8}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.LibraryReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol LibraryReferenceSymbol Prefix}@anchor{6f9}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.LibraryReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol LibraryReferenceSymbol Root}@anchor{6fa}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.LibraryReferenceSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol LibraryReferenceSymbol __str__}@anchor{6fb}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex PackageReferenceSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageReferenceSymbol}@anchor{6ea}
@deffn {Class} pyGHDL.dom.Symbol.PackageReferenceSymbol (identifierNode, identifier, prefix)

@subsubheading Inheritance

@image{inheritance-8f2a56220f9132f338f4388b39abcdd347102aa1,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (@ref{6e9,,LibraryReferenceSymbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.PackageReferenceSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageReferenceSymbol __init__}@anchor{6fc}
@deffn {Method} __init__ (identifierNode, identifier, prefix)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (@ref{6e9,,LibraryReferenceSymbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.PackageReferenceSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageReferenceSymbol _parent}@anchor{6fd}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.PackageReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageReferenceSymbol HasPrefix}@anchor{6fe}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.PackageReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageReferenceSymbol Identifier}@anchor{6ff}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.PackageReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageReferenceSymbol NormalizedIdentifier}@anchor{700}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.PackageReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageReferenceSymbol Parent}@anchor{701}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.PackageReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageReferenceSymbol Prefix}@anchor{702}
@deffn {Property} Prefix:  LibraryReferenceSymbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.LibraryReferenceSymbol}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.PackageReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageReferenceSymbol Root}@anchor{703}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.PackageReferenceSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageReferenceSymbol __str__}@anchor{704}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex PackageMembersReferenceSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageMembersReferenceSymbol}@anchor{6eb}
@deffn {Class} pyGHDL.dom.Symbol.PackageMembersReferenceSymbol (identifierNode, identifier, prefix)

@subsubheading Inheritance

@image{inheritance-19e8d830d997bf83d4f6c703fec57d9a586278cc,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (@ref{6ea,,PackageReferenceSymbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.PackageMembersReferenceSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageMembersReferenceSymbol __init__}@anchor{705}
@deffn {Method} __init__ (identifierNode, identifier, prefix)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (@ref{6ea,,PackageReferenceSymbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.PackageMembersReferenceSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageMembersReferenceSymbol _parent}@anchor{706}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.PackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageMembersReferenceSymbol HasPrefix}@anchor{707}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.PackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageMembersReferenceSymbol Identifier}@anchor{708}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.PackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageMembersReferenceSymbol NormalizedIdentifier}@anchor{709}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.PackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageMembersReferenceSymbol Parent}@anchor{70a}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.PackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageMembersReferenceSymbol Prefix}@anchor{70b}
@deffn {Property} Prefix:  PackageReferenceSymbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.PackageReferenceSymbol}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.PackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageMembersReferenceSymbol Root}@anchor{70c}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.PackageMembersReferenceSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageMembersReferenceSymbol __str__}@anchor{70d}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex AllPackageMembersReferenceSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol AllPackageMembersReferenceSymbol}@anchor{6ec}
@deffn {Class} pyGHDL.dom.Symbol.AllPackageMembersReferenceSymbol (identifierNode, prefix)

@subsubheading Inheritance

@image{inheritance-d4ec2593cb4315b4e1aa1f31844dc47dd171f429,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{prefix} (@ref{6ea,,PackageReferenceSymbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.AllPackageMembersReferenceSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol AllPackageMembersReferenceSymbol __init__}@anchor{70e}
@deffn {Method} __init__ (identifierNode, prefix)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{prefix} (@ref{6ea,,PackageReferenceSymbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.AllPackageMembersReferenceSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol AllPackageMembersReferenceSymbol _parent}@anchor{70f}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.AllPackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol AllPackageMembersReferenceSymbol HasPrefix}@anchor{710}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.AllPackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol AllPackageMembersReferenceSymbol Identifier}@anchor{711}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.AllPackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol AllPackageMembersReferenceSymbol NormalizedIdentifier}@anchor{712}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.AllPackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol AllPackageMembersReferenceSymbol Parent}@anchor{713}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.AllPackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol AllPackageMembersReferenceSymbol Prefix}@anchor{714}
@deffn {Property} Prefix:  PackageReferenceSymbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.PackageReferenceSymbol}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.AllPackageMembersReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol AllPackageMembersReferenceSymbol Root}@anchor{715}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.AllPackageMembersReferenceSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol AllPackageMembersReferenceSymbol __str__}@anchor{716}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex ContextReferenceSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ContextReferenceSymbol}@anchor{6ed}
@deffn {Class} pyGHDL.dom.Symbol.ContextReferenceSymbol (identifierNode, identifier, prefix)

@subsubheading Inheritance

@image{inheritance-b0ed8d0e29670cdc0008528da22c8e09903a216e,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (@ref{6e9,,LibraryReferenceSymbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.ContextReferenceSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ContextReferenceSymbol __init__}@anchor{717}
@deffn {Method} __init__ (identifierNode, identifier, prefix)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (@ref{6e9,,LibraryReferenceSymbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.ContextReferenceSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ContextReferenceSymbol _parent}@anchor{718}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.ContextReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ContextReferenceSymbol HasPrefix}@anchor{719}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.ContextReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ContextReferenceSymbol Identifier}@anchor{71a}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.ContextReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ContextReferenceSymbol NormalizedIdentifier}@anchor{71b}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.ContextReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ContextReferenceSymbol Parent}@anchor{71c}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.ContextReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ContextReferenceSymbol Prefix}@anchor{71d}
@deffn {Property} Prefix:  LibraryReferenceSymbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.LibraryReferenceSymbol}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.ContextReferenceSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ContextReferenceSymbol Root}@anchor{71e}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.ContextReferenceSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ContextReferenceSymbol __str__}@anchor{71f}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex EntityInstantiationSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntityInstantiationSymbol}@anchor{28e}
@deffn {Class} pyGHDL.dom.Symbol.EntityInstantiationSymbol (identifierNode, identifier, prefix)

@subsubheading Inheritance

@image{inheritance-56bfb37058ee5e1a239539b3a8e1dda0005e15ed,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (@ref{6e9,,LibraryReferenceSymbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.EntityInstantiationSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntityInstantiationSymbol __init__}@anchor{720}
@deffn {Method} __init__ (identifierNode, identifier, prefix)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (@ref{6e9,,LibraryReferenceSymbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.EntityInstantiationSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntityInstantiationSymbol _parent}@anchor{721}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.EntityInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntityInstantiationSymbol HasPrefix}@anchor{722}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.EntityInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntityInstantiationSymbol Identifier}@anchor{723}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.EntityInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntityInstantiationSymbol NormalizedIdentifier}@anchor{724}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.EntityInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntityInstantiationSymbol Parent}@anchor{725}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.EntityInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntityInstantiationSymbol Prefix}@anchor{726}
@deffn {Property} Prefix:  LibraryReferenceSymbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.LibraryReferenceSymbol}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.EntityInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntityInstantiationSymbol Root}@anchor{727}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.EntityInstantiationSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntityInstantiationSymbol __str__}@anchor{728}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex ComponentInstantiationSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ComponentInstantiationSymbol}@anchor{286}
@deffn {Class} pyGHDL.dom.Symbol.ComponentInstantiationSymbol (identifierNode, identifier)

@subsubheading Inheritance

@image{inheritance-c7394fdd0a0a3c300046eaffbdfc7af6f63d0545,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.ComponentInstantiationSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ComponentInstantiationSymbol __init__}@anchor{729}
@deffn {Method} __init__ (identifierNode, identifier)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.ComponentInstantiationSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ComponentInstantiationSymbol _parent}@anchor{72a}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.ComponentInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ComponentInstantiationSymbol HasPrefix}@anchor{72b}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.ComponentInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ComponentInstantiationSymbol Identifier}@anchor{72c}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.ComponentInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ComponentInstantiationSymbol NormalizedIdentifier}@anchor{72d}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.ComponentInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ComponentInstantiationSymbol Parent}@anchor{72e}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.ComponentInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ComponentInstantiationSymbol Prefix}@anchor{72f}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.ComponentInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ComponentInstantiationSymbol Root}@anchor{730}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.ComponentInstantiationSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ComponentInstantiationSymbol __str__}@anchor{731}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex ConfigurationInstantiationSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConfigurationInstantiationSymbol}@anchor{297}
@deffn {Class} pyGHDL.dom.Symbol.ConfigurationInstantiationSymbol (identifierNode, identifier)

@subsubheading Inheritance

@image{inheritance-fc0f0b02190418a63ae1795c7e596ae4540ef34b,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.ConfigurationInstantiationSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConfigurationInstantiationSymbol __init__}@anchor{732}
@deffn {Method} __init__ (identifierNode, identifier)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.ConfigurationInstantiationSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConfigurationInstantiationSymbol _parent}@anchor{733}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.ConfigurationInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConfigurationInstantiationSymbol HasPrefix}@anchor{734}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.ConfigurationInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConfigurationInstantiationSymbol Identifier}@anchor{735}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.ConfigurationInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConfigurationInstantiationSymbol NormalizedIdentifier}@anchor{736}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.ConfigurationInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConfigurationInstantiationSymbol Parent}@anchor{737}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.ConfigurationInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConfigurationInstantiationSymbol Prefix}@anchor{738}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.ConfigurationInstantiationSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConfigurationInstantiationSymbol Root}@anchor{739}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.ConfigurationInstantiationSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConfigurationInstantiationSymbol __str__}@anchor{73a}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex EntitySymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntitySymbol}@anchor{32e}
@deffn {Class} pyGHDL.dom.Symbol.EntitySymbol (identifierNode, identifier)

@subsubheading Inheritance

@image{inheritance-af30a6531d9740c127967408301cb6e82ac700a1,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.EntitySymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntitySymbol __init__}@anchor{73b}
@deffn {Method} __init__ (identifierNode, identifier)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.EntitySymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntitySymbol _parent}@anchor{73c}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.EntitySymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntitySymbol HasPrefix}@anchor{73d}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.EntitySymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntitySymbol Identifier}@anchor{73e}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.EntitySymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntitySymbol NormalizedIdentifier}@anchor{73f}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.EntitySymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntitySymbol Parent}@anchor{740}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.EntitySymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntitySymbol Prefix}@anchor{741}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.EntitySymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntitySymbol Root}@anchor{742}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.EntitySymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol EntitySymbol __str__}@anchor{743}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex ArchitectureSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ArchitectureSymbol}@anchor{28f}
@deffn {Class} pyGHDL.dom.Symbol.ArchitectureSymbol (identifierNode, identifier, prefix)

@subsubheading Inheritance

@image{inheritance-d31885f3a41415fee3d60218956ce51f3efa99d7,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (@ref{32e,,EntitySymbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.ArchitectureSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ArchitectureSymbol __init__}@anchor{744}
@deffn {Method} __init__ (identifierNode, identifier, prefix)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{prefix} (@ref{32e,,EntitySymbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.ArchitectureSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ArchitectureSymbol _parent}@anchor{745}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.ArchitectureSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ArchitectureSymbol HasPrefix}@anchor{746}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.ArchitectureSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ArchitectureSymbol Identifier}@anchor{747}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.ArchitectureSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ArchitectureSymbol NormalizedIdentifier}@anchor{748}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.ArchitectureSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ArchitectureSymbol Parent}@anchor{749}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.ArchitectureSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ArchitectureSymbol Prefix}@anchor{74a}
@deffn {Property} Prefix:  EntitySymbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.EntitySymbol}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.ArchitectureSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ArchitectureSymbol Root}@anchor{74b}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.ArchitectureSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ArchitectureSymbol __str__}@anchor{74c}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@geindex PackageSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageSymbol}@anchor{36a}
@deffn {Class} pyGHDL.dom.Symbol.PackageSymbol (identifierNode, identifier)

@subsubheading Inheritance

@image{inheritance-33042288126044da4ee22cde9a0224c1c8b186eb,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.PackageSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageSymbol __init__}@anchor{74d}
@deffn {Method} __init__ (identifierNode, identifier)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{identifierNode} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.PackageSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageSymbol _parent}@anchor{74e}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.PackageSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageSymbol HasPrefix}@anchor{74f}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.PackageSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageSymbol Identifier}@anchor{750}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.PackageSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageSymbol NormalizedIdentifier}@anchor{751}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.PackageSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageSymbol Parent}@anchor{752}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.PackageSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageSymbol Prefix}@anchor{753}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.PackageSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageSymbol Root}@anchor{754}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.PackageSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol PackageSymbol __str__}@anchor{755}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex SimpleSubtypeSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleSubtypeSymbol}@anchor{6ee}
@deffn {Class} pyGHDL.dom.Symbol.SimpleSubtypeSymbol (node, subtypeName)

@subsubheading Inheritance

@image{inheritance-04a184a1e8a758fcb799b4eab50a49191afb3647,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtypeName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.SimpleSubtypeSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleSubtypeSymbol __init__}@anchor{756}
@deffn {Method} __init__ (node, subtypeName)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtypeName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.SimpleSubtypeSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleSubtypeSymbol _parent}@anchor{757}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.SimpleSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleSubtypeSymbol HasPrefix}@anchor{758}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.SimpleSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleSubtypeSymbol Identifier}@anchor{759}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.SimpleSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleSubtypeSymbol NormalizedIdentifier}@anchor{75a}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.SimpleSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleSubtypeSymbol Parent}@anchor{75b}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.SimpleSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleSubtypeSymbol Prefix}@anchor{75c}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.SimpleSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleSubtypeSymbol Root}@anchor{75d}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.SimpleSubtypeSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleSubtypeSymbol __str__}@anchor{75e}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex ConstrainedScalarSubtypeSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedScalarSubtypeSymbol}@anchor{6ef}
@deffn {Class} pyGHDL.dom.Symbol.ConstrainedScalarSubtypeSymbol (node, subtypeName, rng=None)

@subsubheading Inheritance

@image{inheritance-731e676bef5ef3473fe3323435eaf513212784bb,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtypeName} (@code{<module 'pyVHDLModel.Name' from '/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyVHDLModel/Name.py'>}) – 

@item 
@code{rng} (@ref{243,,Range}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.ConstrainedScalarSubtypeSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedScalarSubtypeSymbol __init__}@anchor{75f}
@deffn {Method} __init__ (node, subtypeName, rng=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtypeName} (@code{<module 'pyVHDLModel.Name' from '/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyVHDLModel/Name.py'>}) – 

@item 
@code{rng} (@ref{243,,Range}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.ConstrainedScalarSubtypeSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedScalarSubtypeSymbol _parent}@anchor{760}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.ConstrainedScalarSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedScalarSubtypeSymbol HasPrefix}@anchor{761}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.ConstrainedScalarSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedScalarSubtypeSymbol Identifier}@anchor{762}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.ConstrainedScalarSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedScalarSubtypeSymbol NormalizedIdentifier}@anchor{763}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.ConstrainedScalarSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedScalarSubtypeSymbol Parent}@anchor{764}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.ConstrainedScalarSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedScalarSubtypeSymbol Prefix}@anchor{765}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.ConstrainedScalarSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedScalarSubtypeSymbol Root}@anchor{766}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.ConstrainedScalarSubtypeSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedScalarSubtypeSymbol __str__}@anchor{767}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex ConstrainedCompositeSubtypeSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedCompositeSubtypeSymbol}@anchor{6f0}
@deffn {Class} pyGHDL.dom.Symbol.ConstrainedCompositeSubtypeSymbol (node, subtypeName, constraints=None)

@subsubheading Inheritance

@image{inheritance-12525d3f87b163513734b2871b19ca0aeab6a17a,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtypeName} (@code{<module 'pyVHDLModel.Name' from '/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyVHDLModel/Name.py'>}) – 

@item 
@code{constraints} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.ConstrainedCompositeSubtypeSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedCompositeSubtypeSymbol __init__}@anchor{768}
@deffn {Method} __init__ (node, subtypeName, constraints=None)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtypeName} (@code{<module 'pyVHDLModel.Name' from '/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyVHDLModel/Name.py'>}) – 

@item 
@code{constraints} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.ConstrainedCompositeSubtypeSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedCompositeSubtypeSymbol _parent}@anchor{769}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.ConstrainedCompositeSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedCompositeSubtypeSymbol HasPrefix}@anchor{76a}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.ConstrainedCompositeSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedCompositeSubtypeSymbol Identifier}@anchor{76b}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.ConstrainedCompositeSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedCompositeSubtypeSymbol NormalizedIdentifier}@anchor{76c}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.ConstrainedCompositeSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedCompositeSubtypeSymbol Parent}@anchor{76d}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.ConstrainedCompositeSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedCompositeSubtypeSymbol Prefix}@anchor{76e}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.ConstrainedCompositeSubtypeSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedCompositeSubtypeSymbol Root}@anchor{76f}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.ConstrainedCompositeSubtypeSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol ConstrainedCompositeSubtypeSymbol __str__}@anchor{770}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex SimpleObjectOrFunctionCallSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleObjectOrFunctionCallSymbol}@anchor{6f1}
@deffn {Class} pyGHDL.dom.Symbol.SimpleObjectOrFunctionCallSymbol (node, identifier)

@subsubheading Inheritance

@image{inheritance-81e7b015a58b0f46f79e9fab83399f51717285ec,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.SimpleObjectOrFunctionCallSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleObjectOrFunctionCallSymbol __init__}@anchor{771}
@deffn {Method} __init__ (node, identifier)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.SimpleObjectOrFunctionCallSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleObjectOrFunctionCallSymbol _parent}@anchor{772}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.SimpleObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleObjectOrFunctionCallSymbol HasPrefix}@anchor{773}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.SimpleObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleObjectOrFunctionCallSymbol Identifier}@anchor{774}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.SimpleObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleObjectOrFunctionCallSymbol NormalizedIdentifier}@anchor{775}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.SimpleObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleObjectOrFunctionCallSymbol Parent}@anchor{776}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.SimpleObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleObjectOrFunctionCallSymbol Prefix}@anchor{777}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.SimpleObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleObjectOrFunctionCallSymbol Root}@anchor{778}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.SimpleObjectOrFunctionCallSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol SimpleObjectOrFunctionCallSymbol __str__}@anchor{779}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex IndexedObjectOrFunctionCallSymbol (class in pyGHDL.dom.Symbol)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol IndexedObjectOrFunctionCallSymbol}@anchor{6f2}
@deffn {Class} pyGHDL.dom.Symbol.IndexedObjectOrFunctionCallSymbol (node, prefix, indices)

@subsubheading Inheritance

@image{inheritance-7b1727a50727a59f93449e9117e892ad736dc015,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{prefix} (@code{<module 'pyVHDLModel.Name' from '/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyVHDLModel/Name.py'>}) – 

@item 
@code{indices} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Symbol.IndexedObjectOrFunctionCallSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol IndexedObjectOrFunctionCallSymbol __init__}@anchor{77a}
@deffn {Method} __init__ (node, prefix, indices)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{prefix} (@code{<module 'pyVHDLModel.Name' from '/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyVHDLModel/Name.py'>}) – 

@item 
@code{indices} (Iterable@footnote{https://docs.python.org/3/library/typing.html#typing.Iterable}@code{[}@code{BaseExpression}@code{ | }@ref{238,,QualifiedExpression}@code{ | }@ref{239,,FunctionCall}@code{ | }@ref{23a,,TypeConversion}@code{ | }@code{Literal}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Symbol.IndexedObjectOrFunctionCallSymbol attribute)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol IndexedObjectOrFunctionCallSymbol _parent}@anchor{77b}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex HasPrefix (pyGHDL.dom.Symbol.IndexedObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol IndexedObjectOrFunctionCallSymbol HasPrefix}@anchor{77c}
@deffn {Property} HasPrefix:  bool@footnote{https://docs.python.org/3/library/functions.html#bool}

Returns true, if the name has a prefix.

This is true for all names except @code{simple names}.

@*Returns: 
@code{True}, if the name as a prefix.

@end deffn

@geindex Identifier (pyGHDL.dom.Symbol.IndexedObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol IndexedObjectOrFunctionCallSymbol Identifier}@anchor{77d}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The identifier the name is referencing.

@*Returns: 
The referenced identifier.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Symbol.IndexedObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol IndexedObjectOrFunctionCallSymbol NormalizedIdentifier}@anchor{77e}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

The normalized identifier the name is referencing.

@*Returns: 
The referenced identifier (normalized).

@end deffn

@geindex Parent (pyGHDL.dom.Symbol.IndexedObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol IndexedObjectOrFunctionCallSymbol Parent}@anchor{77f}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex Prefix (pyGHDL.dom.Symbol.IndexedObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol IndexedObjectOrFunctionCallSymbol Prefix}@anchor{780}
@deffn {Property} Prefix:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

The name’s prefix in a chain of names.

@*Returns: 
The name left from current name, if not a simple name, otherwise @code{None}.

@end deffn

@geindex Root (pyGHDL.dom.Symbol.IndexedObjectOrFunctionCallSymbol property)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol IndexedObjectOrFunctionCallSymbol Root}@anchor{781}
@deffn {Property} Root:  Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}

The root (left-most) element in a chain of names.

In case the name is a @code{simple name}, the root points to the name itself.

@*Returns: 
The name’s root element.

@end deffn

@geindex __str__() (pyGHDL.dom.Symbol.IndexedObjectOrFunctionCallSymbol method)
@anchor{pyGHDL/pyGHDL dom Symbol pyGHDL dom Symbol IndexedObjectOrFunctionCallSymbol __str__}@anchor{782}
@deffn {Method} __str__ ()

Return str(self).

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom Type,pyGHDL dom _Translate,pyGHDL dom Symbol,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom Type doc}@anchor{783}@anchor{pyGHDL/pyGHDL dom Type module-pyGHDL dom Type}@anchor{1a}@anchor{pyGHDL/pyGHDL dom Type pyghdl-dom-type}@anchor{784}
@subsection @code{pyGHDL.dom.Type}


@geindex module; pyGHDL.dom.Type

`Classes'


@itemize -

@item 
@ref{785,,IncompleteType}:
@code{BaseType} is the base-class of all type entities in this model.

@item 
@ref{786,,EnumeratedType}:
A @code{ScalarType} is a base-class for all scalar types.

@item 
@ref{787,,IntegerType}:
A @code{RangedScalarType} is a base-class for all scalar types with a range.

@item 
@ref{788,,PhysicalType}:
A @code{RangedScalarType} is a base-class for all scalar types with a range.

@item 
@ref{789,,ArrayType}:
A @code{CompositeType} is a base-class for all composite types.

@item 
@ref{78a,,RecordTypeElement}:
@code{ModelEntity} is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple

@item 
@ref{78b,,RecordType}:
A @code{CompositeType} is a base-class for all composite types.

@item 
@ref{78c,,ProtectedType}:
@code{BaseType} is the base-class of all type entities in this model.

@item 
@ref{78d,,ProtectedTypeBody}:
@code{BaseType} is the base-class of all type entities in this model.

@item 
@ref{78e,,AccessType}:
@code{BaseType} is the base-class of all type entities in this model.

@item 
@ref{78f,,FileType}:
@code{BaseType} is the base-class of all type entities in this model.

@item 
@ref{790,,Subtype}:
@code{BaseType} is the base-class of all type entities in this model.
@end itemize


__________________________________________________________________


`Classes'

@geindex IncompleteType (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IncompleteType}@anchor{785}
@deffn {Class} pyGHDL.dom.Type.IncompleteType (node, identifier)

@subsubheading Inheritance

@image{inheritance-ca9e7e80d516ffd540a7bc9e2dde58cab31baa08,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.IncompleteType method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IncompleteType __init__}@anchor{791}
@deffn {Method} __init__ (node, identifier)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Name of the type.

@item 
@code{node} (@code{Iir}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.IncompleteType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IncompleteType _parent}@anchor{792}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Type.IncompleteType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IncompleteType Documentation}@anchor{793}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Type.IncompleteType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IncompleteType Identifier}@anchor{794}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Type.IncompleteType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IncompleteType NormalizedIdentifier}@anchor{795}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Type.IncompleteType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IncompleteType Parent}@anchor{796}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Type.IncompleteType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IncompleteType _identifier}@anchor{797}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Type.IncompleteType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IncompleteType _normalizedIdentifier}@anchor{798}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Type.IncompleteType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IncompleteType _documentation}@anchor{799}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex EnumeratedType (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type EnumeratedType}@anchor{786}
@deffn {Class} pyGHDL.dom.Type.EnumeratedType (node, identifier, literals)

@subsubheading Inheritance

@image{inheritance-7a741f276dfa5aab0a2175d2f93590b9879586ae,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{literals} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}@ref{50e,,EnumerationLiteral}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.EnumeratedType method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type EnumeratedType __init__}@anchor{79a}
@deffn {Method} __init__ (node, identifier, literals)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{literals} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}@ref{50e,,EnumerationLiteral}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.EnumeratedType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type EnumeratedType _parent}@anchor{79b}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Type.EnumeratedType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type EnumeratedType Documentation}@anchor{79c}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Type.EnumeratedType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type EnumeratedType Identifier}@anchor{79d}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Type.EnumeratedType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type EnumeratedType NormalizedIdentifier}@anchor{79e}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Type.EnumeratedType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type EnumeratedType Parent}@anchor{79f}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Type.EnumeratedType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type EnumeratedType _identifier}@anchor{7a0}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Type.EnumeratedType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type EnumeratedType _normalizedIdentifier}@anchor{7a1}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Type.EnumeratedType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type EnumeratedType _documentation}@anchor{7a2}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex IntegerType (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IntegerType}@anchor{787}
@deffn {Class} pyGHDL.dom.Type.IntegerType (node, typeName, rng)

@subsubheading Inheritance

@image{inheritance-7df52b51de4c86a8eec6196b1ac738cbe1b8522d,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{typeName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{rng} (@ref{243,,Range}@code{ | }@ref{7a3,,Name}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.IntegerType method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IntegerType __init__}@anchor{7a4}
@deffn {Method} __init__ (node, typeName, rng)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{typeName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{rng} (@ref{243,,Range}@code{ | }Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.IntegerType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IntegerType _parent}@anchor{7a5}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Type.IntegerType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IntegerType Documentation}@anchor{7a6}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Type.IntegerType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IntegerType Identifier}@anchor{7a7}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Type.IntegerType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IntegerType NormalizedIdentifier}@anchor{7a8}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Type.IntegerType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IntegerType Parent}@anchor{7a9}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Type.IntegerType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IntegerType _identifier}@anchor{7aa}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Type.IntegerType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IntegerType _normalizedIdentifier}@anchor{7ab}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Type.IntegerType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type IntegerType _documentation}@anchor{7ac}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex PhysicalType (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type PhysicalType}@anchor{788}
@deffn {Class} pyGHDL.dom.Type.PhysicalType (node, typeName, rng, primaryUnit, units)

@subsubheading Inheritance

@image{inheritance-adadeac08eeed736c4666528b7dc82c3dc6bff4b,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{typeName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{rng} (@ref{243,,Range}@code{ | }Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 

@item 
@code{primaryUnit} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{units} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{, }@ref{511,,PhysicalIntegerLiteral}@code{]}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.PhysicalType method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type PhysicalType __init__}@anchor{7ad}
@deffn {Method} __init__ (node, typeName, rng, primaryUnit, units)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{typeName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{rng} (@ref{243,,Range}@code{ | }Name@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Name.html#pyVHDLModel.Name.Name}) – 

@item 
@code{primaryUnit} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{units} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{, }@ref{511,,PhysicalIntegerLiteral}@code{]}@code{]}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.PhysicalType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type PhysicalType _parent}@anchor{7ae}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Type.PhysicalType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type PhysicalType Documentation}@anchor{7af}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Type.PhysicalType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type PhysicalType Identifier}@anchor{7b0}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Type.PhysicalType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type PhysicalType NormalizedIdentifier}@anchor{7b1}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Type.PhysicalType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type PhysicalType Parent}@anchor{7b2}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Type.PhysicalType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type PhysicalType _identifier}@anchor{7b3}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Type.PhysicalType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type PhysicalType _normalizedIdentifier}@anchor{7b4}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Type.PhysicalType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type PhysicalType _documentation}@anchor{7b5}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex ArrayType (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ArrayType}@anchor{789}
@deffn {Class} pyGHDL.dom.Type.ArrayType (node, identifier, indices, elementSubtype)

@subsubheading Inheritance

@image{inheritance-acdc3d2cccf2bd2ae9a5f768aaad76f27f2d8be5,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{indices} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}) – 

@item 
@code{elementSubtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.ArrayType method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ArrayType __init__}@anchor{7b6}
@deffn {Method} __init__ (node, identifier, indices, elementSubtype)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{indices} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}) – 

@item 
@code{elementSubtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.ArrayType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ArrayType _parent}@anchor{7b7}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Type.ArrayType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ArrayType Documentation}@anchor{7b8}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Type.ArrayType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ArrayType Identifier}@anchor{7b9}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Type.ArrayType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ArrayType NormalizedIdentifier}@anchor{7ba}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Type.ArrayType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ArrayType Parent}@anchor{7bb}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Type.ArrayType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ArrayType _identifier}@anchor{7bc}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Type.ArrayType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ArrayType _normalizedIdentifier}@anchor{7bd}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Type.ArrayType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ArrayType _documentation}@anchor{7be}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex RecordTypeElement (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordTypeElement}@anchor{78a}
@deffn {Class} pyGHDL.dom.Type.RecordTypeElement (node, identifiers, subtype)

@subsubheading Inheritance

@image{inheritance-9c04aec8105ef93038eeadacbd6c5c542f39f6c5,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.RecordTypeElement method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordTypeElement __init__}@anchor{7bf}
@deffn {Method} __init__ (node, identifiers, subtype)

Initializes a VHDL model entity.

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifiers} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 

@item 
@code{subtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.RecordTypeElement attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordTypeElement _parent}@anchor{7c0}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Identifiers (pyGHDL.dom.Type.RecordTypeElement property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordTypeElement Identifiers}@anchor{7c1}
@deffn {Property} Identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of identifiers (names).

@*Returns: 
Tuple of identifiers.

@end deffn

@geindex NormalizedIdentifiers (pyGHDL.dom.Type.RecordTypeElement property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordTypeElement NormalizedIdentifiers}@anchor{7c2}
@deffn {Property} NormalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

Returns a model entity’s tuple of normalized identifiers (lower case names).

@*Returns: 
Tuple of normalized identifiers.

@end deffn

@geindex Parent (pyGHDL.dom.Type.RecordTypeElement property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordTypeElement Parent}@anchor{7c3}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifiers (pyGHDL.dom.Type.RecordTypeElement attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordTypeElement _identifiers}@anchor{7c4}
@deffn {Attribute} _identifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

A list of identifiers.
@end deffn

@geindex _normalizedIdentifiers (pyGHDL.dom.Type.RecordTypeElement attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordTypeElement _normalizedIdentifiers}@anchor{7c5}
@deffn {Attribute} _normalizedIdentifiers:  Tuple@footnote{https://docs.python.org/3/library/typing.html#typing.Tuple}[str@footnote{https://docs.python.org/3/library/stdtypes.html#str}]

A list of normalized (lower case) identifiers.
@end deffn
@end deffn

@geindex RecordType (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordType}@anchor{78b}
@deffn {Class} pyGHDL.dom.Type.RecordType (node, identifier, elements=None)

@subsubheading Inheritance

@image{inheritance-cfbda24f6cca3449bfa09045a76ab0589d169b76,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{elements} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}@ref{78a,,RecordTypeElement}@code{]}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.RecordType method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordType __init__}@anchor{7c6}
@deffn {Method} __init__ (node, identifier, elements=None)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{elements} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}@ref{78a,,RecordTypeElement}@code{] }@code{| }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.RecordType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordType _parent}@anchor{7c7}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Type.RecordType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordType Documentation}@anchor{7c8}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Type.RecordType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordType Identifier}@anchor{7c9}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Type.RecordType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordType NormalizedIdentifier}@anchor{7ca}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Type.RecordType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordType Parent}@anchor{7cb}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Type.RecordType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordType _identifier}@anchor{7cc}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Type.RecordType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordType _normalizedIdentifier}@anchor{7cd}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Type.RecordType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type RecordType _documentation}@anchor{7ce}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex ProtectedType (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedType}@anchor{78c}
@deffn {Class} pyGHDL.dom.Type.ProtectedType (node, identifier, methods=None)

@subsubheading Inheritance

@image{inheritance-992f896b10d48efd9b4f960b556cc05b973017bd,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{methods} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{ | }Iterator@footnote{https://docs.python.org/3/library/typing.html#typing.Iterator}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.ProtectedType method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedType __init__}@anchor{7cf}
@deffn {Method} __init__ (node, identifier, methods=None)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{methods} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{ | }Iterator@footnote{https://docs.python.org/3/library/typing.html#typing.Iterator}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.ProtectedType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedType _parent}@anchor{7d0}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Type.ProtectedType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedType Documentation}@anchor{7d1}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Type.ProtectedType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedType Identifier}@anchor{7d2}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Type.ProtectedType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedType NormalizedIdentifier}@anchor{7d3}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Type.ProtectedType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedType Parent}@anchor{7d4}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Type.ProtectedType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedType _identifier}@anchor{7d5}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Type.ProtectedType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedType _normalizedIdentifier}@anchor{7d6}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Type.ProtectedType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedType _documentation}@anchor{7d7}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex ProtectedTypeBody (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedTypeBody}@anchor{78d}
@deffn {Class} pyGHDL.dom.Type.ProtectedTypeBody (node, identifier, declaredItems=None)

@subsubheading Inheritance

@image{inheritance-c681b5cbd50c4bf5773877ff92b9b494788b0605,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{declaredItems} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{ | }Iterator@footnote{https://docs.python.org/3/library/typing.html#typing.Iterator}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.ProtectedTypeBody method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedTypeBody __init__}@anchor{7d8}
@deffn {Method} __init__ (node, identifier, declaredItems=None)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{declaredItems} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{ | }Iterator@footnote{https://docs.python.org/3/library/typing.html#typing.Iterator}@code{ | }@code{None}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.ProtectedTypeBody attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedTypeBody _parent}@anchor{7d9}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Type.ProtectedTypeBody property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedTypeBody Documentation}@anchor{7da}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Type.ProtectedTypeBody property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedTypeBody Identifier}@anchor{7db}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Type.ProtectedTypeBody property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedTypeBody NormalizedIdentifier}@anchor{7dc}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Type.ProtectedTypeBody property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedTypeBody Parent}@anchor{7dd}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Type.ProtectedTypeBody attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedTypeBody _identifier}@anchor{7de}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Type.ProtectedTypeBody attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedTypeBody _normalizedIdentifier}@anchor{7df}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Type.ProtectedTypeBody attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type ProtectedTypeBody _documentation}@anchor{7e0}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex AccessType (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type AccessType}@anchor{78e}
@deffn {Class} pyGHDL.dom.Type.AccessType (node, identifier, designatedSubtype)

@subsubheading Inheritance

@image{inheritance-109899fe09d4212ac2d3c4ed907f285ab7f3728d,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{designatedSubtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.AccessType method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type AccessType __init__}@anchor{7e1}
@deffn {Method} __init__ (node, identifier, designatedSubtype)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{designatedSubtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.AccessType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type AccessType _parent}@anchor{7e2}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Type.AccessType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type AccessType Documentation}@anchor{7e3}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Type.AccessType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type AccessType Identifier}@anchor{7e4}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Type.AccessType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type AccessType NormalizedIdentifier}@anchor{7e5}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Type.AccessType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type AccessType Parent}@anchor{7e6}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Type.AccessType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type AccessType _identifier}@anchor{7e7}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Type.AccessType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type AccessType _normalizedIdentifier}@anchor{7e8}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Type.AccessType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type AccessType _documentation}@anchor{7e9}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex FileType (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type FileType}@anchor{78f}
@deffn {Class} pyGHDL.dom.Type.FileType (node, identifier, designatedSubtype)

@subsubheading Inheritance

@image{inheritance-e822380866380d8dfa92409a55dafd8eaea4f981,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{designatedSubtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.FileType method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type FileType __init__}@anchor{7ea}
@deffn {Method} __init__ (node, identifier, designatedSubtype)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{designatedSubtype} (Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.FileType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type FileType _parent}@anchor{7eb}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Type.FileType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type FileType Documentation}@anchor{7ec}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Type.FileType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type FileType Identifier}@anchor{7ed}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Type.FileType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type FileType NormalizedIdentifier}@anchor{7ee}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Type.FileType property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type FileType Parent}@anchor{7ef}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Type.FileType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type FileType _identifier}@anchor{7f0}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Type.FileType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type FileType _normalizedIdentifier}@anchor{7f1}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Type.FileType attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type FileType _documentation}@anchor{7f2}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@geindex Subtype (class in pyGHDL.dom.Type)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type Subtype}@anchor{790}
@deffn {Class} pyGHDL.dom.Type.Subtype (node, subtypeName)

@subsubheading Inheritance

@image{inheritance-ccf63b541c15f4ec9bd51cb9c84cd1ff1d968b01,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtypeName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Type.Subtype method)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type Subtype __init__}@anchor{7f3}
@deffn {Method} __init__ (node, subtypeName)

Initializes underlying @code{BaseType}.

@*Parameters: 

@itemize *

@item 
@code{identifier} – Name of the type.

@item 
@code{node} (@code{Iir}) – 

@item 
@code{subtypeName} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex _parent (pyGHDL.dom.Type.Subtype attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type Subtype _parent}@anchor{7f4}
@deffn {Attribute} _parent:  ModelEntity

Reference to a parent entity in the model.
@end deffn

@geindex Documentation (pyGHDL.dom.Type.Subtype property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type Subtype Documentation}@anchor{7f5}
@deffn {Property} Documentation:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}  |  None@footnote{https://docs.python.org/3/library/constants.html#None}

Returns a model entity’s associated documentation.

@*Returns: 
Associated documentation of a model entity.

@end deffn

@geindex Identifier (pyGHDL.dom.Type.Subtype property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type Subtype Identifier}@anchor{7f6}
@deffn {Property} Identifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s identifier (name).

@*Returns: 
Name of a model entity.

@end deffn

@geindex NormalizedIdentifier (pyGHDL.dom.Type.Subtype property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type Subtype NormalizedIdentifier}@anchor{7f7}
@deffn {Property} NormalizedIdentifier:  str@footnote{https://docs.python.org/3/library/stdtypes.html#str}

Returns a model entity’s normalized identifier (lower case name).

@*Returns: 
Normalized name of a model entity.

@end deffn

@geindex Parent (pyGHDL.dom.Type.Subtype property)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type Subtype Parent}@anchor{7f8}
@deffn {Property} Parent:  ModelEntity@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity}

Returns a reference to the parent entity.

@*Returns: 
Parent entity.

@end deffn

@geindex _identifier (pyGHDL.dom.Type.Subtype attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type Subtype _identifier}@anchor{7f9}
@deffn {Attribute} _identifier:  str

The identifier of a model entity.
@end deffn

@geindex _normalizedIdentifier (pyGHDL.dom.Type.Subtype attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type Subtype _normalizedIdentifier}@anchor{7fa}
@deffn {Attribute} _normalizedIdentifier:  str

The normalized (lower case) identifier of a model entity.
@end deffn

@geindex _documentation (pyGHDL.dom.Type.Subtype attribute)
@anchor{pyGHDL/pyGHDL dom Type pyGHDL dom Type Subtype _documentation}@anchor{7fb}
@deffn {Attribute} _documentation:  Nullable[str]

The associated documentation of a model entity.
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom _Translate,pyGHDL dom _Utils,pyGHDL dom Type,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom _Translate doc}@anchor{7fc}@anchor{pyGHDL/pyGHDL dom _Translate module-pyGHDL dom _Translate}@anchor{5}@anchor{pyGHDL/pyGHDL dom _Translate pyghdl-dom-translate}@anchor{7fd}
@subsection @code{pyGHDL.dom._Translate}


@geindex module; pyGHDL.dom._Translate

`Functions'


@itemize -

@item 
@ref{7fe,,GetNameFromNode()}:
Undocumented.

@item 
@ref{7ff,,GetArrayConstraintsFromSubtypeIndication()}:
Undocumented.

@item 
@ref{800,,GetTypeFromNode()}:
Undocumented.

@item 
@ref{801,,GetAnonymousTypeFromNode()}:
Undocumented.

@item 
@ref{802,,GetSubtypeIndicationFromNode()}:
Undocumented.

@item 
@ref{803,,GetSubtypeIndicationFromIndicationNode()}:
Undocumented.

@item 
@ref{804,,GetSimpleTypeFromNode()}:
Undocumented.

@item 
@ref{805,,GetScalarConstrainedSubtypeFromNode()}:
Undocumented.

@item 
@ref{806,,GetCompositeConstrainedSubtypeFromNode()}:
Undocumented.

@item 
@ref{807,,GetSubtypeFromNode()}:
Undocumented.

@item 
@ref{808,,GetRangeFromNode()}:
Undocumented.

@item 
@ref{809,,GetExpressionFromNode()}:
Undocumented.

@item 
@ref{80a,,GetGenericsFromChainedNodes()}:
Undocumented.

@item 
@ref{80b,,GetPortsFromChainedNodes()}:
Undocumented.

@item 
@ref{80c,,GetParameterFromChainedNodes()}:
Undocumented.
@end itemize


__________________________________________________________________


`Functions'

@geindex GetNameFromNode() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetNameFromNode}@anchor{7fe}
@deffn {Function} pyGHDL.dom._Translate.GetNameFromNode (node)

@*Return type: 
<module ‘pyVHDLModel.Name’ from ‘/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyVHDLModel/Name.py’>


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex GetArrayConstraintsFromSubtypeIndication() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetArrayConstraintsFromSubtypeIndication}@anchor{7ff}
@deffn {Function} pyGHDL.dom._Translate.GetArrayConstraintsFromSubtypeIndication (subtypeIndication)

@*Return type: 
List@footnote{https://docs.python.org/3/library/typing.html#typing.List}


@*Parameters: 
@code{subtypeIndication} (@code{Iir}) – 

@end deffn

@geindex GetTypeFromNode() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetTypeFromNode}@anchor{800}
@deffn {Function} pyGHDL.dom._Translate.GetTypeFromNode (node)

@*Return type: 
BaseType@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Type.html#pyVHDLModel.Type.BaseType}


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex GetAnonymousTypeFromNode() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetAnonymousTypeFromNode}@anchor{801}
@deffn {Function} pyGHDL.dom._Translate.GetAnonymousTypeFromNode (node)

@*Return type: 
BaseType@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Type.html#pyVHDLModel.Type.BaseType}


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex GetSubtypeIndicationFromNode() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetSubtypeIndicationFromNode}@anchor{802}
@deffn {Function} pyGHDL.dom._Translate.GetSubtypeIndicationFromNode (node, entity, name)

@*Return type: 
Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}


@*Parameters: 

@itemize *

@item 
@code{node} (@code{Iir}) – 

@item 
@code{entity} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{name} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex GetSubtypeIndicationFromIndicationNode() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetSubtypeIndicationFromIndicationNode}@anchor{803}
@deffn {Function} pyGHDL.dom._Translate.GetSubtypeIndicationFromIndicationNode (subtypeIndicationNode, entity, name)

@*Return type: 
Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}


@*Parameters: 

@itemize *

@item 
@code{subtypeIndicationNode} (@code{Iir}) – 

@item 
@code{entity} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{name} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 
@end itemize

@end deffn

@geindex GetSimpleTypeFromNode() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetSimpleTypeFromNode}@anchor{804}
@deffn {Function} pyGHDL.dom._Translate.GetSimpleTypeFromNode (subtypeIndicationNode)

@*Return type: 
@ref{6ee,,SimpleSubtypeSymbol}


@*Parameters: 
@code{subtypeIndicationNode} (@code{Iir}) – 

@end deffn

@geindex GetScalarConstrainedSubtypeFromNode() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetScalarConstrainedSubtypeFromNode}@anchor{805}
@deffn {Function} pyGHDL.dom._Translate.GetScalarConstrainedSubtypeFromNode (subtypeIndicationNode)

@*Return type: 
@ref{6ef,,ConstrainedScalarSubtypeSymbol}


@*Parameters: 
@code{subtypeIndicationNode} (@code{Iir}) – 

@end deffn

@geindex GetCompositeConstrainedSubtypeFromNode() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetCompositeConstrainedSubtypeFromNode}@anchor{806}
@deffn {Function} pyGHDL.dom._Translate.GetCompositeConstrainedSubtypeFromNode (subtypeIndicationNode)

@*Return type: 
@ref{6f0,,ConstrainedCompositeSubtypeSymbol}


@*Parameters: 
@code{subtypeIndicationNode} (@code{Iir}) – 

@end deffn

@geindex GetSubtypeFromNode() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetSubtypeFromNode}@anchor{807}
@deffn {Function} pyGHDL.dom._Translate.GetSubtypeFromNode (subtypeNode)

@*Return type: 
Symbol@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Symbol.html#pyVHDLModel.Symbol.Symbol}


@*Parameters: 
@code{subtypeNode} (@code{Iir}) – 

@end deffn

@geindex GetRangeFromNode() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetRangeFromNode}@anchor{808}
@deffn {Function} pyGHDL.dom._Translate.GetRangeFromNode (node)

@*Return type: 
@ref{243,,Range}


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex GetExpressionFromNode() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetExpressionFromNode}@anchor{809}
@deffn {Function} pyGHDL.dom._Translate.GetExpressionFromNode (node)

@*Return type: 
Union@footnote{https://docs.python.org/3/library/typing.html#typing.Union}[BaseExpression@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Expression.html#pyVHDLModel.Expression.BaseExpression}, QualifiedExpression@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Expression.html#pyVHDLModel.Expression.QualifiedExpression}, FunctionCall@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Expression.html#pyVHDLModel.Expression.FunctionCall}, TypeConversion@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Expression.html#pyVHDLModel.Expression.TypeConversion}, Literal@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Expression.html#pyVHDLModel.Expression.Literal}]


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex GetGenericsFromChainedNodes() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetGenericsFromChainedNodes}@anchor{80a}
@deffn {Function} pyGHDL.dom._Translate.GetGenericsFromChainedNodes (nodeChain)

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[GenericInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.GenericInterfaceItem}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]


@*Parameters: 
@code{nodeChain} (@code{Iir}) – 

@end deffn

@geindex GetPortsFromChainedNodes() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetPortsFromChainedNodes}@anchor{80b}
@deffn {Function} pyGHDL.dom._Translate.GetPortsFromChainedNodes (nodeChain)

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[PortInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.PortInterfaceItem}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]


@*Parameters: 
@code{nodeChain} (@code{Iir}) – 

@end deffn

@geindex GetParameterFromChainedNodes() (in module pyGHDL.dom._Translate)
@anchor{pyGHDL/pyGHDL dom _Translate pyGHDL dom _Translate GetParameterFromChainedNodes}@anchor{80c}
@deffn {Function} pyGHDL.dom._Translate.GetParameterFromChainedNodes (nodeChain)

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[ParameterInterfaceItem@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Interface.html#pyVHDLModel.Interface.ParameterInterfaceItem}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]


@*Parameters: 
@code{nodeChain} (@code{Iir}) – 

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom _Utils,pyGHDL dom formatting,pyGHDL dom _Translate,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom _Utils doc}@anchor{80d}@anchor{pyGHDL/pyGHDL dom _Utils module-pyGHDL dom _Utils}@anchor{6}@anchor{pyGHDL/pyGHDL dom _Utils pyghdl-dom-utils}@anchor{80e}
@subsection @code{pyGHDL.dom._Utils}


@geindex module; pyGHDL.dom._Utils

`Functions'


@itemize -

@item 
@ref{80f,,CheckForErrors()}:
Check if an error occurred in libghdl and raise an exception if so.

@item 
@ref{810,,GetIirKindOfNode()}:
Return the kind of a node in the IIR tree.

@item 
@ref{811,,GetNameOfNode()}:
Return the Python string from node @code{node} identifier.

@item 
@ref{812,,GetDocumentationOfNode()}:
Undocumented.

@item 
@ref{813,,GetModeOfNode()}:
Return the mode of a @code{node}.
@end itemize


__________________________________________________________________


`Functions'

@geindex CheckForErrors() (in module pyGHDL.dom._Utils)
@anchor{pyGHDL/pyGHDL dom _Utils pyGHDL dom _Utils CheckForErrors}@anchor{80f}
@deffn {Function} pyGHDL.dom._Utils.CheckForErrors ()

Check if an error occurred in libghdl and raise an exception if so.

`Behavior:'
:rtype: None@footnote{https://docs.python.org/3/library/constants.html#None}


@enumerate 

@item 
read the error buffer and clear it afterwards

@item 
convert it into a list of internal messages for a @code{LibGHDLException}

@item 
raise a @code{DOMException} with a nested @code{LibGHDLException} as a @code{__cause__}.
@end enumerate

@*Raises: 
@ref{814,,DOMException} – If an error occurred in libghdl.


@*Return type: 
None

@end deffn

@geindex GetIirKindOfNode() (in module pyGHDL.dom._Utils)
@anchor{pyGHDL/pyGHDL dom _Utils pyGHDL dom _Utils GetIirKindOfNode}@anchor{810}
@deffn {Function} pyGHDL.dom._Utils.GetIirKindOfNode (node)

Return the kind of a node in the IIR tree.

@*Return type: 
@ref{815,,Iir_Kind}


@*Returns: 
The IIR kind of a node.


@*Raises: 
ValueError@footnote{https://docs.python.org/3/library/exceptions.html#ValueError} – If parameter @code{node} is @ref{816,,Null_Iir}.


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex GetNameOfNode() (in module pyGHDL.dom._Utils)
@anchor{pyGHDL/pyGHDL dom _Utils pyGHDL dom _Utils GetNameOfNode}@anchor{811}
@deffn {Function} pyGHDL.dom._Utils.GetNameOfNode (node)

Return the Python string from node @code{node} identifier.

@*Raises: 
ValueError@footnote{https://docs.python.org/3/library/exceptions.html#ValueError} – If parameter @code{node} is @ref{816,,Null_Iir}.


@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex GetDocumentationOfNode() (in module pyGHDL.dom._Utils)
@anchor{pyGHDL/pyGHDL dom _Utils pyGHDL dom _Utils GetDocumentationOfNode}@anchor{812}
@deffn {Function} pyGHDL.dom._Utils.GetDocumentationOfNode (node)

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex GetModeOfNode() (in module pyGHDL.dom._Utils)
@anchor{pyGHDL/pyGHDL dom _Utils pyGHDL dom _Utils GetModeOfNode}@anchor{813}
@deffn {Function} pyGHDL.dom._Utils.GetModeOfNode (node)

Return the mode of a @code{node}.

@*Raises: 

@itemize *

@item 
ValueError@footnote{https://docs.python.org/3/library/exceptions.html#ValueError} – If parameter @code{node} is @ref{816,,Null_Iir}.

@item 
@ref{814,,DOMException} – If mode returned by libghdl is not known by @code{__MODE_TRANSLATION}.
@end itemize


@*Return type: 
Mode@footnote{https://vhdl.github.io/pyVHDLModel/pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.Mode}


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom formatting,,pyGHDL dom _Utils,pyGHDL dom
@anchor{pyGHDL/pyGHDL dom formatting doc}@anchor{817}@anchor{pyGHDL/pyGHDL dom formatting module-pyGHDL dom formatting}@anchor{c}@anchor{pyGHDL/pyGHDL dom formatting pyghdl-dom-formatting}@anchor{818}
@subsection @code{pyGHDL.dom.formatting}


@geindex module; pyGHDL.dom.formatting

`Submodules'

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@menu
* pyGHDL.dom.formatting.GraphML: pyGHDL dom formatting GraphML. 
* pyGHDL.dom.formatting.prettyprint: pyGHDL dom formatting prettyprint. 

@end menu

@node pyGHDL dom formatting GraphML,pyGHDL dom formatting prettyprint,,pyGHDL dom formatting
@anchor{pyGHDL/pyGHDL dom formatting GraphML doc}@anchor{819}@anchor{pyGHDL/pyGHDL dom formatting GraphML module-pyGHDL dom formatting GraphML}@anchor{d}@anchor{pyGHDL/pyGHDL dom formatting GraphML pyghdl-dom-formatting-graphml}@anchor{81a}
@subsubsection @code{pyGHDL.dom.formatting.GraphML}


@geindex module; pyGHDL.dom.formatting.GraphML

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL dom formatting prettyprint,,pyGHDL dom formatting GraphML,pyGHDL dom formatting
@anchor{pyGHDL/pyGHDL dom formatting prettyprint doc}@anchor{81b}@anchor{pyGHDL/pyGHDL dom formatting prettyprint module-pyGHDL dom formatting prettyprint}@anchor{e}@anchor{pyGHDL/pyGHDL dom formatting prettyprint pyghdl-dom-formatting-prettyprint}@anchor{81c}
@subsubsection @code{pyGHDL.dom.formatting.prettyprint}


@geindex module; pyGHDL.dom.formatting.prettyprint

`Exceptions'


@itemize -

@item 
@ref{81d,,PrettyPrintException}:
Common base class for all non-exit exceptions.
@end itemize

`Classes'


@itemize -

@item 
@ref{81e,,PrettyPrint}:
Undocumented.
@end itemize


__________________________________________________________________


`Exceptions'

@geindex PrettyPrintException
@anchor{pyGHDL/pyGHDL dom formatting prettyprint pyGHDL dom formatting prettyprint PrettyPrintException}@anchor{81d}
@deffn {Exception} pyGHDL.dom.formatting.prettyprint.PrettyPrintException

@subsubheading Inheritance

@image{inheritance-47090c24aedd4f5507bc1e1c7142dc10f7df6dbb,,,[graphviz],png}
@end deffn


__________________________________________________________________


`Classes'

@geindex PrettyPrint (class in pyGHDL.dom.formatting.prettyprint)
@anchor{pyGHDL/pyGHDL dom formatting prettyprint pyGHDL dom formatting prettyprint PrettyPrint}@anchor{81e}
@deffn {Class} pyGHDL.dom.formatting.prettyprint.PrettyPrint

@subsubheading Inheritance

@image{inheritance-475f92f0ee12fff306ad4c2a5704c6c941b8352e,,,[graphviz],png}
@end deffn

`Exceptions'


@itemize -

@item 
@ref{814,,DOMException}:
Common base class for all non-exit exceptions.
@end itemize

`Classes'


@itemize -

@item 
@ref{81f,,Position}:
Represents the source code position of a IIR node in a source file.

@item 
@ref{820,,DOMMixin}:
Undocumented.
@end itemize


__________________________________________________________________


`Exceptions'

@geindex DOMException
@anchor{pyGHDL/pyGHDL dom pyGHDL dom DOMException}@anchor{814}
@deffn {Exception} pyGHDL.dom.DOMException

@subsubheading Inheritance

@image{inheritance-2bb127539a4b800579fc9b9eb7cbebf16765512d,,,[graphviz],png}
@end deffn


__________________________________________________________________


`Classes'

@geindex Position (class in pyGHDL.dom)
@anchor{pyGHDL/pyGHDL dom pyGHDL dom Position}@anchor{81f}
@deffn {Class} pyGHDL.dom.Position (filename, line, column)

Represents the source code position of a IIR node in a source file.

@subsubheading Inheritance

@image{inheritance-7b419a97234df7f2698be7d90864842570396b03,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{filename} (Path@footnote{https://docs.python.org/3/library/pathlib.html#pathlib.Path}) – 

@item 
@code{line} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@item 
@code{column} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 
@end itemize


@geindex __init__() (pyGHDL.dom.Position method)
@anchor{pyGHDL/pyGHDL dom pyGHDL dom Position __init__}@anchor{821}
@deffn {Method} __init__ (filename, line, column)

@*Parameters: 

@itemize *

@item 
@code{filename} (Path@footnote{https://docs.python.org/3/library/pathlib.html#pathlib.Path}) – 

@item 
@code{line} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@item 
@code{column} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 
@end itemize

@end deffn

@geindex parse() (pyGHDL.dom.Position class method)
@anchor{pyGHDL/pyGHDL dom pyGHDL dom Position parse}@anchor{822}
@deffn {Method} classmethod  parse (node)

Return the source code position of a IIR node.

@*Return type: 
@ref{81f,,Position}


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex __str__() (pyGHDL.dom.Position method)
@anchor{pyGHDL/pyGHDL dom pyGHDL dom Position __str__}@anchor{823}
@deffn {Method} __str__ ()

Return str(self).
@end deffn
@end deffn

@geindex DOMMixin (class in pyGHDL.dom)
@anchor{pyGHDL/pyGHDL dom pyGHDL dom DOMMixin}@anchor{820}
@deffn {Class} pyGHDL.dom.DOMMixin (node)

@subsubheading Inheritance

@image{inheritance-9d24f0be099de3ac1b0702cc2107b393e6164922,,,[graphviz],png}

@*Parameters: 
@code{node} (@code{Iir}) – 


@geindex __init__() (pyGHDL.dom.DOMMixin method)
@anchor{pyGHDL/pyGHDL dom pyGHDL dom DOMMixin __init__}@anchor{824}
@deffn {Method} __init__ (node)

@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl,pyGHDL lsp,pyGHDL dom,pyGHDL
@anchor{pyGHDL/pyGHDL libghdl doc}@anchor{825}@anchor{pyGHDL/pyGHDL libghdl module-pyGHDL libghdl}@anchor{1b}@anchor{pyGHDL/pyGHDL libghdl pyghdl-libghdl}@anchor{826}
@section @code{pyGHDL.libghdl}


@geindex module; pyGHDL.libghdl

Python binding and low-level API for shared library @code{libghdl}.

In case of an error, a @ref{827,,LibGHDLException} is raised.

`Submodules'

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@menu
* pyGHDL.libghdl._decorator: pyGHDL libghdl _decorator. 
* pyGHDL.libghdl._types: pyGHDL libghdl _types. 
* pyGHDL.libghdl.errorout: pyGHDL libghdl errorout. 
* pyGHDL.libghdl.errorout_console: pyGHDL libghdl errorout_console. 
* pyGHDL.libghdl.errorout_memory: pyGHDL libghdl errorout_memory. 
* pyGHDL.libghdl.file_comments: pyGHDL libghdl file_comments. 
* pyGHDL.libghdl.files_map: pyGHDL libghdl files_map. 
* pyGHDL.libghdl.files_map_editor: pyGHDL libghdl files_map_editor. 
* pyGHDL.libghdl.flags: pyGHDL libghdl flags. 
* pyGHDL.libghdl.libraries: pyGHDL libghdl libraries. 
* pyGHDL.libghdl.name_table: pyGHDL libghdl name_table. 
* pyGHDL.libghdl.std_names: pyGHDL libghdl std_names. 
* pyGHDL.libghdl.str_table: pyGHDL libghdl str_table. 
* pyGHDL.libghdl.utils: pyGHDL libghdl utils. 
* pyGHDL.libghdl.vhdl: pyGHDL libghdl vhdl. 

@end menu

@node pyGHDL libghdl _decorator,pyGHDL libghdl _types,,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl _decorator doc}@anchor{828}@anchor{pyGHDL/pyGHDL libghdl _decorator module-pyGHDL libghdl _decorator}@anchor{1c}@anchor{pyGHDL/pyGHDL libghdl _decorator pyghdl-libghdl-decorator}@anchor{829}
@subsection @code{pyGHDL.libghdl._decorator}


@geindex module; pyGHDL.libghdl._decorator

`Functions'


@itemize -

@item 
@ref{82a,,EnumLookupTable()}:
Decorator to precalculate an enum lookup table (LUT) for enum position to
@end itemize


__________________________________________________________________


`Functions'

@geindex EnumLookupTable() (in module pyGHDL.libghdl._decorator)
@anchor{pyGHDL/pyGHDL libghdl _decorator pyGHDL libghdl _decorator EnumLookupTable}@anchor{82a}
@deffn {Function} pyGHDL.libghdl._decorator.EnumLookupTable (cls)

Decorator to precalculate an enum lookup table (LUT) for enum position to
enum literal name.

@*Parameters: 
@code{cls} – Enumerator class for which a LUT shall be pre-calculated.


@*Return type: 
Callable@footnote{https://docs.python.org/3/library/typing.html#typing.Callable}

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl _types,pyGHDL libghdl errorout,pyGHDL libghdl _decorator,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl _types doc}@anchor{82b}@anchor{pyGHDL/pyGHDL libghdl _types module-pyGHDL libghdl _types}@anchor{1d}@anchor{pyGHDL/pyGHDL libghdl _types pyghdl-libghdl-types}@anchor{82c}
@subsection @code{pyGHDL.libghdl._types}


@geindex module; pyGHDL.libghdl._types

`Variables'


@itemize -

@item 
@ref{82d,,ErrorIndex}

@item 
@ref{82e,,MessageIdWarnings}

@item 
@ref{82f,,NameId}

@item 
@ref{830,,SourceFileEntry}

@item 
@ref{831,,Iir}

@item 
@ref{832,,IirKind}
@end itemize

`Classes'


@itemize -

@item 
@ref{833,,TriStateType}:
An enumeration.

@item 
@ref{834,,DirectionType}:
An enumeration.
@end itemize


__________________________________________________________________


`Variables'

@geindex ErrorIndex (in module pyGHDL.libghdl._types)
@anchor{pyGHDL/pyGHDL libghdl _types pyGHDL libghdl _types ErrorIndex}@anchor{82d}
@deffn {Data} pyGHDL.libghdl._types.ErrorIndex

Type variable.

Usage:

@example
T = TypeVar('T')  # Can be anything
A = TypeVar('A', str, bytes)  # Must be str or bytes
@end example

Type variables exist primarily for the benefit of static type
checkers.  They serve as the parameters for generic types as well
as for generic function definitions.  See class Generic for more
information on generic types.  Generic functions work as follows:

@quotation


@table @asis

@item def repeat(x: T, n: int) -> List[T]:

‘’’Return a list containing n references to x.’’’
return [x]*n

@item def longest(x: A, y: A) -> A:

‘’’Return the longest of two strings.’’’
return x if len(x) >= len(y) else y
@end table
@end quotation

The latter example’s signature is essentially the overloading
of (str, str) -> str and (bytes, bytes) -> bytes.  Also note
that if the arguments are instances of some subclass of str,
the return type is still plain str.

At runtime, isinstance(x, T) and issubclass(C, T) will raise TypeError.

Type variables defined with covariant=True or contravariant=True
can be used to declare covariant or contravariant generic types.
See PEP 484 for more details. By default generic types are invariant
in all type variables.

Type variables can be introspected. e.g.:

@quotation

T.__name__ == ‘T’
T.__constraints__ == ()
T.__covariant__ == False
T.__contravariant__ = False
A.__constraints__ == (str, bytes)
@end quotation

Note that only type variables defined in global scope can be pickled.

@example
~ErrorIndex
@end example
@end deffn

@geindex MessageIdWarnings (in module pyGHDL.libghdl._types)
@anchor{pyGHDL/pyGHDL libghdl _types pyGHDL libghdl _types MessageIdWarnings}@anchor{82e}
@deffn {Data} pyGHDL.libghdl._types.MessageIdWarnings

Type variable.

Usage:

@example
T = TypeVar('T')  # Can be anything
A = TypeVar('A', str, bytes)  # Must be str or bytes
@end example

Type variables exist primarily for the benefit of static type
checkers.  They serve as the parameters for generic types as well
as for generic function definitions.  See class Generic for more
information on generic types.  Generic functions work as follows:

@quotation


@table @asis

@item def repeat(x: T, n: int) -> List[T]:

‘’’Return a list containing n references to x.’’’
return [x]*n

@item def longest(x: A, y: A) -> A:

‘’’Return the longest of two strings.’’’
return x if len(x) >= len(y) else y
@end table
@end quotation

The latter example’s signature is essentially the overloading
of (str, str) -> str and (bytes, bytes) -> bytes.  Also note
that if the arguments are instances of some subclass of str,
the return type is still plain str.

At runtime, isinstance(x, T) and issubclass(C, T) will raise TypeError.

Type variables defined with covariant=True or contravariant=True
can be used to declare covariant or contravariant generic types.
See PEP 484 for more details. By default generic types are invariant
in all type variables.

Type variables can be introspected. e.g.:

@quotation

T.__name__ == ‘T’
T.__constraints__ == ()
T.__covariant__ == False
T.__contravariant__ = False
A.__constraints__ == (str, bytes)
@end quotation

Note that only type variables defined in global scope can be pickled.

@example
~MessageIdWarnings
@end example
@end deffn

@geindex NameId (in module pyGHDL.libghdl._types)
@anchor{pyGHDL/pyGHDL libghdl _types pyGHDL libghdl _types NameId}@anchor{82f}
@deffn {Data} pyGHDL.libghdl._types.NameId

Type variable.

Usage:

@example
T = TypeVar('T')  # Can be anything
A = TypeVar('A', str, bytes)  # Must be str or bytes
@end example

Type variables exist primarily for the benefit of static type
checkers.  They serve as the parameters for generic types as well
as for generic function definitions.  See class Generic for more
information on generic types.  Generic functions work as follows:

@quotation


@table @asis

@item def repeat(x: T, n: int) -> List[T]:

‘’’Return a list containing n references to x.’’’
return [x]*n

@item def longest(x: A, y: A) -> A:

‘’’Return the longest of two strings.’’’
return x if len(x) >= len(y) else y
@end table
@end quotation

The latter example’s signature is essentially the overloading
of (str, str) -> str and (bytes, bytes) -> bytes.  Also note
that if the arguments are instances of some subclass of str,
the return type is still plain str.

At runtime, isinstance(x, T) and issubclass(C, T) will raise TypeError.

Type variables defined with covariant=True or contravariant=True
can be used to declare covariant or contravariant generic types.
See PEP 484 for more details. By default generic types are invariant
in all type variables.

Type variables can be introspected. e.g.:

@quotation

T.__name__ == ‘T’
T.__constraints__ == ()
T.__covariant__ == False
T.__contravariant__ = False
A.__constraints__ == (str, bytes)
@end quotation

Note that only type variables defined in global scope can be pickled.

@example
~NameId
@end example
@end deffn

@geindex SourceFileEntry (in module pyGHDL.libghdl._types)
@anchor{pyGHDL/pyGHDL libghdl _types pyGHDL libghdl _types SourceFileEntry}@anchor{830}
@deffn {Data} pyGHDL.libghdl._types.SourceFileEntry

Type variable.

Usage:

@example
T = TypeVar('T')  # Can be anything
A = TypeVar('A', str, bytes)  # Must be str or bytes
@end example

Type variables exist primarily for the benefit of static type
checkers.  They serve as the parameters for generic types as well
as for generic function definitions.  See class Generic for more
information on generic types.  Generic functions work as follows:

@quotation


@table @asis

@item def repeat(x: T, n: int) -> List[T]:

‘’’Return a list containing n references to x.’’’
return [x]*n

@item def longest(x: A, y: A) -> A:

‘’’Return the longest of two strings.’’’
return x if len(x) >= len(y) else y
@end table
@end quotation

The latter example’s signature is essentially the overloading
of (str, str) -> str and (bytes, bytes) -> bytes.  Also note
that if the arguments are instances of some subclass of str,
the return type is still plain str.

At runtime, isinstance(x, T) and issubclass(C, T) will raise TypeError.

Type variables defined with covariant=True or contravariant=True
can be used to declare covariant or contravariant generic types.
See PEP 484 for more details. By default generic types are invariant
in all type variables.

Type variables can be introspected. e.g.:

@quotation

T.__name__ == ‘T’
T.__constraints__ == ()
T.__covariant__ == False
T.__contravariant__ = False
A.__constraints__ == (str, bytes)
@end quotation

Note that only type variables defined in global scope can be pickled.

@example
~SourceFileEntry
@end example
@end deffn

@geindex Iir (in module pyGHDL.libghdl._types)
@anchor{pyGHDL/pyGHDL libghdl _types pyGHDL libghdl _types Iir}@anchor{831}
@deffn {Data} pyGHDL.libghdl._types.Iir

Type variable.

Usage:

@example
T = TypeVar('T')  # Can be anything
A = TypeVar('A', str, bytes)  # Must be str or bytes
@end example

Type variables exist primarily for the benefit of static type
checkers.  They serve as the parameters for generic types as well
as for generic function definitions.  See class Generic for more
information on generic types.  Generic functions work as follows:

@quotation


@table @asis

@item def repeat(x: T, n: int) -> List[T]:

‘’’Return a list containing n references to x.’’’
return [x]*n

@item def longest(x: A, y: A) -> A:

‘’’Return the longest of two strings.’’’
return x if len(x) >= len(y) else y
@end table
@end quotation

The latter example’s signature is essentially the overloading
of (str, str) -> str and (bytes, bytes) -> bytes.  Also note
that if the arguments are instances of some subclass of str,
the return type is still plain str.

At runtime, isinstance(x, T) and issubclass(C, T) will raise TypeError.

Type variables defined with covariant=True or contravariant=True
can be used to declare covariant or contravariant generic types.
See PEP 484 for more details. By default generic types are invariant
in all type variables.

Type variables can be introspected. e.g.:

@quotation

T.__name__ == ‘T’
T.__constraints__ == ()
T.__covariant__ == False
T.__contravariant__ = False
A.__constraints__ == (str, bytes)
@end quotation

Note that only type variables defined in global scope can be pickled.

@example
~Iir
@end example
@end deffn

@geindex IirKind (in module pyGHDL.libghdl._types)
@anchor{pyGHDL/pyGHDL libghdl _types pyGHDL libghdl _types IirKind}@anchor{832}
@deffn {Data} pyGHDL.libghdl._types.IirKind

Type variable.

Usage:

@example
T = TypeVar('T')  # Can be anything
A = TypeVar('A', str, bytes)  # Must be str or bytes
@end example

Type variables exist primarily for the benefit of static type
checkers.  They serve as the parameters for generic types as well
as for generic function definitions.  See class Generic for more
information on generic types.  Generic functions work as follows:

@quotation


@table @asis

@item def repeat(x: T, n: int) -> List[T]:

‘’’Return a list containing n references to x.’’’
return [x]*n

@item def longest(x: A, y: A) -> A:

‘’’Return the longest of two strings.’’’
return x if len(x) >= len(y) else y
@end table
@end quotation

The latter example’s signature is essentially the overloading
of (str, str) -> str and (bytes, bytes) -> bytes.  Also note
that if the arguments are instances of some subclass of str,
the return type is still plain str.

At runtime, isinstance(x, T) and issubclass(C, T) will raise TypeError.

Type variables defined with covariant=True or contravariant=True
can be used to declare covariant or contravariant generic types.
See PEP 484 for more details. By default generic types are invariant
in all type variables.

Type variables can be introspected. e.g.:

@quotation

T.__name__ == ‘T’
T.__constraints__ == ()
T.__covariant__ == False
T.__contravariant__ = False
A.__constraints__ == (str, bytes)
@end quotation

Note that only type variables defined in global scope can be pickled.

@example
~IirKind
@end example
@end deffn


__________________________________________________________________


`Classes'

@geindex TriStateType (class in pyGHDL.libghdl._types)
@anchor{pyGHDL/pyGHDL libghdl _types pyGHDL libghdl _types TriStateType}@anchor{833}
@deffn {Class} pyGHDL.libghdl._types.TriStateType (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-091ee53053bb576e957773d92242573237e675bf,,,[graphviz],png}
@end deffn

@geindex DirectionType (class in pyGHDL.libghdl._types)
@anchor{pyGHDL/pyGHDL libghdl _types pyGHDL libghdl _types DirectionType}@anchor{834}
@deffn {Class} pyGHDL.libghdl._types.DirectionType (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-f57da2dfe3464c8685313c14ac1b4f0634065102,,,[graphviz],png}
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl errorout,pyGHDL libghdl errorout_console,pyGHDL libghdl _types,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl errorout doc}@anchor{835}@anchor{pyGHDL/pyGHDL libghdl errorout module-pyGHDL libghdl errorout}@anchor{1e}@anchor{pyGHDL/pyGHDL libghdl errorout pyghdl-libghdl-errorout}@anchor{836}
@subsection @code{pyGHDL.libghdl.errorout}


@geindex module; pyGHDL.libghdl.errorout

`Functions'


@itemize -

@item 
@ref{837,,Enable_Warning()}:
@end itemize

`Classes'


@itemize -

@item 
@ref{838,,Msgid}:
An enumeration.
@end itemize


__________________________________________________________________


`Functions'

@geindex Enable_Warning() (in module pyGHDL.libghdl.errorout)
@anchor{pyGHDL/pyGHDL libghdl errorout pyGHDL libghdl errorout Enable_Warning}@anchor{837}
@deffn {Function} pyGHDL.libghdl.errorout.Enable_Warning (Id, Enable)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{Id} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@item 
@code{Enable} (bool@footnote{https://docs.python.org/3/library/functions.html#bool}) – 
@end itemize

@end deffn


__________________________________________________________________


`Classes'

@geindex Msgid (class in pyGHDL.libghdl.errorout)
@anchor{pyGHDL/pyGHDL libghdl errorout pyGHDL libghdl errorout Msgid}@anchor{838}
@deffn {Class} pyGHDL.libghdl.errorout.Msgid (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-1bd82558051637191852285fef0da12c18dd1005,,,[graphviz],png}
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl errorout_console,pyGHDL libghdl errorout_memory,pyGHDL libghdl errorout,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl errorout_console doc}@anchor{839}@anchor{pyGHDL/pyGHDL libghdl errorout_console module-pyGHDL libghdl errorout_console}@anchor{1f}@anchor{pyGHDL/pyGHDL libghdl errorout_console pyghdl-libghdl-errorout-console}@anchor{83a}
@subsection @code{pyGHDL.libghdl.errorout_console}


@geindex module; pyGHDL.libghdl.errorout_console

`Functions'


@itemize -

@item 
@ref{83b,,Install_Handler()}:
Install the handlers for reporting errors.
@end itemize


__________________________________________________________________


`Functions'

@geindex Install_Handler() (in module pyGHDL.libghdl.errorout_console)
@anchor{pyGHDL/pyGHDL libghdl errorout_console pyGHDL libghdl errorout_console Install_Handler}@anchor{83b}
@deffn {Function} pyGHDL.libghdl.errorout_console.Install_Handler ()

Install the handlers for reporting errors.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl errorout_memory,pyGHDL libghdl file_comments,pyGHDL libghdl errorout_console,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl errorout_memory doc}@anchor{83c}@anchor{pyGHDL/pyGHDL libghdl errorout_memory module-pyGHDL libghdl errorout_memory}@anchor{20}@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyghdl-libghdl-errorout-memory}@anchor{83d}
@subsection @code{pyGHDL.libghdl.errorout_memory}


@geindex module; pyGHDL.libghdl.errorout_memory

`Functions'


@itemize -

@item 
@ref{83e,,Install_Handler()}:
Install the handlers for reporting errors.

@item 
@ref{83f,,Get_Nbr_Messages()}:
Get number of error messages available.

@item 
@ref{840,,Get_Error_Record()}:
Get error messages by index @code{Idy} as structure @ref{841,,Error_Message}.

@item 
@ref{842,,Get_Error_Message()}:
Get error messages by index @code{Idx} as string.

@item 
@ref{843,,Clear_Errors()}:
Remove all error messages.
@end itemize

`Classes'


@itemize -

@item 
@ref{841,,Error_Message}:
Id : Msgid_Type
@end itemize


__________________________________________________________________


`Functions'

@geindex Install_Handler() (in module pyGHDL.libghdl.errorout_memory)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Install_Handler}@anchor{83e}
@deffn {Function} pyGHDL.libghdl.errorout_memory.Install_Handler ()

Install the handlers for reporting errors.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Nbr_Messages() (in module pyGHDL.libghdl.errorout_memory)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Get_Nbr_Messages}@anchor{83f}
@deffn {Function} pyGHDL.libghdl.errorout_memory.Get_Nbr_Messages ()

Get number of error messages available.

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{ErrorIndex}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
Number of messages available.

@end deffn

@geindex Get_Error_Record() (in module pyGHDL.libghdl.errorout_memory)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Get_Error_Record}@anchor{840}
@deffn {Function} pyGHDL.libghdl.errorout_memory.Get_Error_Record (Idx)

Get error messages by index @code{Idy} as structure @ref{841,,Error_Message}.

@*Parameters: 
@code{Idx} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{ErrorIndex}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Index from 1 to @code{Nbr_Messages} See @ref{83f,,Get_Nbr_Messages()}.


@*Return type: 
@ref{841,,Error_Message}


@*Returns: 
Type: @code{Error_Message}

@end deffn

@geindex Get_Error_Message() (in module pyGHDL.libghdl.errorout_memory)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Get_Error_Message}@anchor{842}
@deffn {Function} pyGHDL.libghdl.errorout_memory.Get_Error_Message (Idx)

Get error messages by index @code{Idx} as string.

@*Parameters: 
@code{Idx} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{ErrorIndex}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Index from 1 to @code{Nbr_Messages} See @ref{83f,,Get_Nbr_Messages()}.


@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Returns: 
Error message.

@end deffn

@geindex Clear_Errors() (in module pyGHDL.libghdl.errorout_memory)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Clear_Errors}@anchor{843}
@deffn {Function} pyGHDL.libghdl.errorout_memory.Clear_Errors ()

Remove all error messages.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn


__________________________________________________________________


`Classes'

@geindex Error_Message (class in pyGHDL.libghdl.errorout_memory)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Error_Message}@anchor{841}
@deffn {Class} pyGHDL.libghdl.errorout_memory.Error_Message


@table @asis

@item Id : Msgid_Type

Message error/warning id

@item Group : Group_Type;

Whether this is an single message or a related one.

@item File : Source_File_Entry;

Error soure file.

@item Line : Natural;

The first line is line 1, 0 can be used when line number is not relevant.

@item Offset : Natural;

Offset in the line.  The first character is at offset 0.

@item Length : Natural;

Length of the location (for a range). It is assumed to be on the same line;
use 0 when unknown.
@end table

@subsubheading Inheritance

@image{inheritance-4be8720bb0de6588339607023dd38a8d11526278,,,[graphviz],png}

@geindex __hash__() (pyGHDL.libghdl.errorout_memory.Error_Message method)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Error_Message __hash__}@anchor{844}
@deffn {Method} __hash__ ()

Return hash(self).
@end deffn

@geindex __init__() (pyGHDL.libghdl.errorout_memory.Error_Message method)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Error_Message __init__}@anchor{845}
@deffn {Method} __init__ (*args, **kwargs)
@end deffn

@geindex __new__() (pyGHDL.libghdl.errorout_memory.Error_Message method)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Error_Message __new__}@anchor{846}
@deffn {Method} __new__ (**kwargs)
@end deffn

@geindex __reduce__() (pyGHDL.libghdl.errorout_memory.Error_Message method)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Error_Message __reduce__}@anchor{847}
@deffn {Method} __reduce__ ()

Helper for pickle.
@end deffn

@geindex _b_base_ (pyGHDL.libghdl.errorout_memory.Error_Message attribute)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Error_Message _b_base_}@anchor{848}
@deffn {Attribute} _b_base_

the base object
@end deffn

@geindex _b_needsfree_ (pyGHDL.libghdl.errorout_memory.Error_Message attribute)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Error_Message _b_needsfree_}@anchor{849}
@deffn {Attribute} _b_needsfree_

whether the object owns the memory or not
@end deffn

@geindex _objects (pyGHDL.libghdl.errorout_memory.Error_Message attribute)
@anchor{pyGHDL/pyGHDL libghdl errorout_memory pyGHDL libghdl errorout_memory Error_Message _objects}@anchor{84a}
@deffn {Attribute} _objects

internal objects tree (NEVER CHANGE THIS OBJECT!)
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl file_comments,pyGHDL libghdl files_map,pyGHDL libghdl errorout_memory,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl file_comments doc}@anchor{84b}@anchor{pyGHDL/pyGHDL libghdl file_comments module-pyGHDL libghdl file_comments}@anchor{21}@anchor{pyGHDL/pyGHDL libghdl file_comments pyghdl-libghdl-file-comments}@anchor{84c}
@subsection @code{pyGHDL.libghdl.file_comments}


@geindex module; pyGHDL.libghdl.file_comments

`Variables'


@itemize -

@item 
@ref{84d,,Comment_Index}

@item 
@ref{84e,,No_Comment_Index}
@end itemize

`Functions'


@itemize -

@item 
@ref{84f,,Find_First_Comment()}:
Get the first comment associated to a node.

@item 
@ref{850,,Get_Comment_Start()}:
Get the start of comment

@item 
@ref{851,,Get_Comment_Last()}:
Get the end of comment

@item 
@ref{852,,Get_Next_Comment()}:
Get the next comment
@end itemize


__________________________________________________________________


`Variables'

@geindex Comment_Index (in module pyGHDL.libghdl.file_comments)
@anchor{pyGHDL/pyGHDL libghdl file_comments pyGHDL libghdl file_comments Comment_Index}@anchor{84d}
@deffn {Data} pyGHDL.libghdl.file_comments.Comment_Index

Type variable.

Usage:

@example
T = TypeVar('T')  # Can be anything
A = TypeVar('A', str, bytes)  # Must be str or bytes
@end example

Type variables exist primarily for the benefit of static type
checkers.  They serve as the parameters for generic types as well
as for generic function definitions.  See class Generic for more
information on generic types.  Generic functions work as follows:

@quotation


@table @asis

@item def repeat(x: T, n: int) -> List[T]:

‘’’Return a list containing n references to x.’’’
return [x]*n

@item def longest(x: A, y: A) -> A:

‘’’Return the longest of two strings.’’’
return x if len(x) >= len(y) else y
@end table
@end quotation

The latter example’s signature is essentially the overloading
of (str, str) -> str and (bytes, bytes) -> bytes.  Also note
that if the arguments are instances of some subclass of str,
the return type is still plain str.

At runtime, isinstance(x, T) and issubclass(C, T) will raise TypeError.

Type variables defined with covariant=True or contravariant=True
can be used to declare covariant or contravariant generic types.
See PEP 484 for more details. By default generic types are invariant
in all type variables.

Type variables can be introspected. e.g.:

@quotation

T.__name__ == ‘T’
T.__constraints__ == ()
T.__covariant__ == False
T.__contravariant__ = False
A.__constraints__ == (str, bytes)
@end quotation

Note that only type variables defined in global scope can be pickled.

@example
~Comment_Index
@end example
@end deffn

@geindex No_Comment_Index (in module pyGHDL.libghdl.file_comments)
@anchor{pyGHDL/pyGHDL libghdl file_comments pyGHDL libghdl file_comments No_Comment_Index}@anchor{84e}
@deffn {Data} pyGHDL.libghdl.file_comments.No_Comment_Index

int([x]) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by ‘+’ or ‘-’ and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int(‘0b100’, base=0)
4

@example
0
@end example
@end deffn


__________________________________________________________________


`Functions'

@geindex Find_First_Comment() (in module pyGHDL.libghdl.file_comments)
@anchor{pyGHDL/pyGHDL libghdl file_comments pyGHDL libghdl file_comments Find_First_Comment}@anchor{84f}
@deffn {Function} pyGHDL.libghdl.file_comments.Find_First_Comment (File, N)

Get the first comment associated to a node.
:type N: c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint}
:param N:    Node
:type File: TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})
:param File: Source file for node
:rtype: TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Comment_Index}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})
:return:     The first comment index, or No_Comment_Index if none.

@*Parameters: 

@itemize *

@item 
@code{File} (@code{SourceFileEntry}) – 

@item 
@code{N} (c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint}) – 
@end itemize


@*Return type: 
`Comment_Index'

@end deffn

@geindex Get_Comment_Start() (in module pyGHDL.libghdl.file_comments)
@anchor{pyGHDL/pyGHDL libghdl file_comments pyGHDL libghdl file_comments Get_Comment_Start}@anchor{850}
@deffn {Function} pyGHDL.libghdl.file_comments.Get_Comment_Start (File, Idx)

Get the start of comment

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourcePtr}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 

@itemize *

@item 
@code{File} (@code{SourceFileEntry}) – 

@item 
@code{Idx} (@code{Comment_Index}) – 
@end itemize

@end deffn

@geindex Get_Comment_Last() (in module pyGHDL.libghdl.file_comments)
@anchor{pyGHDL/pyGHDL libghdl file_comments pyGHDL libghdl file_comments Get_Comment_Last}@anchor{851}
@deffn {Function} pyGHDL.libghdl.file_comments.Get_Comment_Last (File, Idx)

Get the end of comment

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourcePtr}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 

@itemize *

@item 
@code{File} (@code{SourceFileEntry}) – 

@item 
@code{Idx} (@code{Comment_Index}) – 
@end itemize

@end deffn

@geindex Get_Next_Comment() (in module pyGHDL.libghdl.file_comments)
@anchor{pyGHDL/pyGHDL libghdl file_comments pyGHDL libghdl file_comments Get_Next_Comment}@anchor{852}
@deffn {Function} pyGHDL.libghdl.file_comments.Get_Next_Comment (File, Idx)

Get the next comment

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Comment_Index}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Parameters: 

@itemize *

@item 
@code{File} (@code{SourceFileEntry}) – 

@item 
@code{Idx} (@code{Comment_Index}) – 
@end itemize

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl files_map,pyGHDL libghdl files_map_editor,pyGHDL libghdl file_comments,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl files_map doc}@anchor{853}@anchor{pyGHDL/pyGHDL libghdl files_map module-pyGHDL libghdl files_map}@anchor{22}@anchor{pyGHDL/pyGHDL libghdl files_map pyghdl-libghdl-files-map}@anchor{854}
@subsection @code{pyGHDL.libghdl.files_map}


@geindex module; pyGHDL.libghdl.files_map

`Variables'


@itemize -

@item 
@ref{855,,EOT}

@item 
@ref{856,,No_Source_File_Entry}

@item 
@ref{857,,No_Location}
@end itemize

`Functions'


@itemize -

@item 
@ref{858,,Location_To_File()}:
Convert @code{Location} to a source file.

@item 
@ref{859,,Location_File_To_Pos()}:
Convert @code{Location} and @code{File} to a position (offset) into the source file.

@item 
@ref{85a,,Location_File_To_Line()}:
Convert @code{Location} and @code{File} to a line number.

@item 
@ref{85b,,Location_File_Line_To_Offset()}:
Get the offset in @code{Line} of @code{Location}.

@item 
@ref{85c,,Location_File_Line_To_Col()}:
Get logical column (with HT expanded) from @code{Location}, @code{File} and

@item 
@ref{85d,,File_To_Location()}:
Convert a @code{File} into a location.

@item 
@ref{85e,,File_Pos_To_Location()}:
Convert a @code{File} and an offset @code{Pos} in the file into a location.

@item 
@ref{85f,,File_Line_To_Position()}:
Convert a @code{File} and @code{Line} into a position.

@item 
@ref{860,,Get_File_Name()}:
Return the name of the file.

@item 
@ref{861,,Get_Directory_Name()}:
Return the directory of the file.

@item 
@ref{862,,Get_File_Buffer()}:
Return a buffer (access to the contents of the file) for a file entry.

@item 
@ref{863,,Get_File_Length()}:
Get the position of the first EOT character.

@item 
@ref{864,,Set_File_Length()}:
Set the length of the file (which is less than the size of the file buffer).

@item 
@ref{865,,Get_Buffer_Length()}:
Get the length of the buffer, including the gap and the two EOT.

@item 
@ref{866,,Reserve_Source_File()}:
Reserve an entry, but do not read any file.

@item 
@ref{867,,Discard_Source_File()}:
Mark @code{File} as unavailable: clear the name and directory.

@item 
@ref{868,,Free_Source_File()}:
Free resources used by @code{File}, but keep the entry.

@item 
@ref{869,,Get_Last_Source_File_Entry()}:
Returns the entry of the last known file.
@end itemize


__________________________________________________________________


`Variables'

@geindex EOT (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map EOT}@anchor{855}
@deffn {Data} pyGHDL.libghdl.files_map.EOT

bytes(iterable_of_ints) -> bytes
bytes(string, encoding[, errors]) -> bytes
bytes(bytes_or_buffer) -> immutable copy of bytes_or_buffer
bytes(int) -> bytes object of size given by the parameter initialized with null bytes
bytes() -> empty bytes object


@table @asis

@item Construct an immutable array of bytes from:


@itemize -

@item 
an iterable yielding integers in range(256)

@item 
a text string encoded using the specified encoding

@item 
any object implementing the buffer API.

@item 
an integer
@end itemize
@end table

@example
b'\x04'
@end example
@end deffn

@geindex No_Source_File_Entry (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map No_Source_File_Entry}@anchor{856}
@deffn {Data} pyGHDL.libghdl.files_map.No_Source_File_Entry

int([x]) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by ‘+’ or ‘-’ and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int(‘0b100’, base=0)
4

@example
0
@end example
@end deffn

@geindex No_Location (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map No_Location}@anchor{857}
@deffn {Data} pyGHDL.libghdl.files_map.No_Location

int([x]) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by ‘+’ or ‘-’ and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int(‘0b100’, base=0)
4

@example
0
@end example
@end deffn


__________________________________________________________________


`Functions'

@geindex Location_To_File() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Location_To_File}@anchor{858}
@deffn {Function} pyGHDL.libghdl.files_map.Location_To_File (Location)

Convert @code{Location} to a source file.

@*Parameters: 
@code{Location} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{LocationType}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Location


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Returns: 
Source file. Return @code{No_Source_File_Entry} if location is incorrect.

@end deffn

@geindex Location_File_To_Pos() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Location_File_To_Pos}@anchor{859}
@deffn {Function} pyGHDL.libghdl.files_map.Location_File_To_Pos (Location, File)

Convert @code{Location} and @code{File} to a position (offset) into the source file.

@*Parameters: 

@itemize *

@item 
@code{Location} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{LocationType}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Location

@item 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file
@end itemize


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Offset

@end deffn

@geindex Location_File_To_Line() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Location_File_To_Line}@anchor{85a}
@deffn {Function} pyGHDL.libghdl.files_map.Location_File_To_Line (Location, File)

Convert @code{Location} and @code{File} to a line number.

@*Parameters: 

@itemize *

@item 
@code{Location} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{LocationType}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Location

@item 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file
@end itemize


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Line number

@end deffn

@geindex Location_File_Line_To_Offset() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Location_File_Line_To_Offset}@anchor{85b}
@deffn {Function} pyGHDL.libghdl.files_map.Location_File_Line_To_Offset (Location, File, Line)

Get the offset in @code{Line} of @code{Location}.

@*Parameters: 

@itemize *

@item 
@code{Location} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{LocationType}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Location

@item 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file

@item 
@code{Line} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – Line number
@end itemize


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Offset

@end deffn

@geindex Location_File_Line_To_Col() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Location_File_Line_To_Col}@anchor{85c}
@deffn {Function} pyGHDL.libghdl.files_map.Location_File_Line_To_Col (Location, File, Line)

Get logical column (with HT expanded) from @code{Location}, @code{File} and
@code{Line}.

@*Parameters: 

@itemize *

@item 
@code{Location} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{LocationType}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Location

@item 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file

@item 
@code{Line} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – Line number
@end itemize


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
logical column (horizontal tabs are expanded)

@end deffn

@geindex File_To_Location() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map File_To_Location}@anchor{85d}
@deffn {Function} pyGHDL.libghdl.files_map.File_To_Location (File)

Convert a @code{File} into a location.

@*Parameters: 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{LocationType}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Returns: 
Location.

@end deffn

@geindex File_Pos_To_Location() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map File_Pos_To_Location}@anchor{85e}
@deffn {Function} pyGHDL.libghdl.files_map.File_Pos_To_Location (File, Pos)

Convert a @code{File} and an offset @code{Pos} in the file into a location.

@*Parameters: 

@itemize *

@item 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file

@item 
@code{Pos} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – Offset in the file
@end itemize


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{LocationType}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Returns: 
Location.

@end deffn

@geindex File_Line_To_Position() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map File_Line_To_Position}@anchor{85f}
@deffn {Function} pyGHDL.libghdl.files_map.File_Line_To_Position (File, Line)

Convert a @code{File} and @code{Line} into a position.

@*Parameters: 

@itemize *

@item 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file

@item 
@code{Line} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – Line number
@end itemize


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Return @code{Source_Ptr_Bad} in case of error (@code{Line} out of bounds).

@end deffn

@geindex Get_File_Name() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Get_File_Name}@anchor{860}
@deffn {Function} pyGHDL.libghdl.files_map.Get_File_Name (File)

Return the name of the file.

@*Parameters: 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file to get the filename from.


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
NameId for the filename.

@end deffn

@geindex Get_Directory_Name() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Get_Directory_Name}@anchor{861}
@deffn {Function} pyGHDL.libghdl.files_map.Get_Directory_Name (File)

Return the directory of the file.

@*Parameters: 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file to get the directory name from.


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
NameId for the directory.

@end deffn

@geindex Get_File_Buffer() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Get_File_Buffer}@anchor{862}
@deffn {Function} pyGHDL.libghdl.files_map.Get_File_Buffer (File)

Return a buffer (access to the contents of the file) for a file entry.

@*Parameters: 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file to get the buffer from.


@*Return type: 
bytes@footnote{https://docs.python.org/3/library/stdtypes.html#bytes}


@*Returns: 
Type: @code{File_Buffer_Ptr}

@end deffn

@geindex Get_File_Length() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Get_File_Length}@anchor{863}
@deffn {Function} pyGHDL.libghdl.files_map.Get_File_Length (File)

Get the position of the first EOT character.

@*Parameters: 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Type: @code{Source_Ptr}

@end deffn

@geindex Set_File_Length() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Set_File_Length}@anchor{864}
@deffn {Function} pyGHDL.libghdl.files_map.Set_File_Length (File, Length)

Set the length of the file (which is less than the size of the file buffer).

Set also append two EOT at the end of the file.

@*Parameters: 

@itemize *

@item 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file

@item 
@code{Length} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – Length for the file. Type: @code{Source_Ptr}
@end itemize


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Buffer_Length() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Get_Buffer_Length}@anchor{865}
@deffn {Function} pyGHDL.libghdl.files_map.Get_Buffer_Length (File)

Get the length of the buffer, including the gap and the two EOT.

@*Parameters: 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Type: @code{Source_Ptr}

@end deffn

@geindex Reserve_Source_File() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Reserve_Source_File}@anchor{866}
@deffn {Function} pyGHDL.libghdl.files_map.Reserve_Source_File (Directory, Name, Length)

Reserve an entry, but do not read any file.

The length should includes the two terminal EOT.

@*Parameters: 

@itemize *

@item 
@code{Directory} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Directory name

@item 
@code{Name} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – File name

@item 
@code{Length} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – Length to reserve. Type: @code{Source_Ptr}
@end itemize


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Returns: 
SourceFile

@end deffn

@geindex Discard_Source_File() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Discard_Source_File}@anchor{867}
@deffn {Function} pyGHDL.libghdl.files_map.Discard_Source_File (File)

Mark @code{File} as unavailable: clear the name and directory.

@cartouche
@quotation Hint 
This is needed before creating a new source file with the same name.
@end quotation
@end cartouche

@*Parameters: 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file to discard.


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Free_Source_File() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Free_Source_File}@anchor{868}
@deffn {Function} pyGHDL.libghdl.files_map.Free_Source_File (File)

Free resources used by @code{File}, but keep the entry.

@cartouche
@quotation Note 
It could be recycled for files that could fit - not implemented.
@end quotation
@end cartouche

@*Parameters: 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – Source file to free.


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Last_Source_File_Entry() (in module pyGHDL.libghdl.files_map)
@anchor{pyGHDL/pyGHDL libghdl files_map pyGHDL libghdl files_map Get_Last_Source_File_Entry}@anchor{869}
@deffn {Function} pyGHDL.libghdl.files_map.Get_Last_Source_File_Entry ()

Returns the entry of the last known file.

@cartouche
@quotation Hint 
This allows creating a table of @code{SourceFileEntry}.
@end quotation
@end cartouche

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Returns: 
Last SourceFileEntry. Type: @code{SourceFileEntry}

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl files_map_editor,pyGHDL libghdl flags,pyGHDL libghdl files_map,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl files_map_editor doc}@anchor{86a}@anchor{pyGHDL/pyGHDL libghdl files_map_editor module-pyGHDL libghdl files_map_editor}@anchor{23}@anchor{pyGHDL/pyGHDL libghdl files_map_editor pyghdl-libghdl-files-map-editor}@anchor{86b}
@subsection @code{pyGHDL.libghdl.files_map_editor}


@geindex module; pyGHDL.libghdl.files_map_editor

`Functions'


@itemize -

@item 
@ref{86c,,Replace_Text()}:
Replace [START; END) by TEXT.

@item 
@ref{86d,,Fill_Text()}:
Replace the content of @code{File} with TEXT.

@item 
@ref{86e,,Check_Buffer_Content()}:
Check that content of @code{File} is STR[1 .. STR_LEN].

@item 
@ref{86f,,Copy_Source_File()}:
Copy content of @code{Src} to @code{Dest}.
@end itemize


__________________________________________________________________


`Functions'

@geindex Replace_Text() (in module pyGHDL.libghdl.files_map_editor)
@anchor{pyGHDL/pyGHDL libghdl files_map_editor pyGHDL libghdl files_map_editor Replace_Text}@anchor{86c}
@deffn {Function} pyGHDL.libghdl.files_map_editor.Replace_Text (File, Start_Line, Start_Offset, End_Line, End_Offset, Text)

Replace [START; END) by TEXT.

@*Parameters: 

@itemize *

@item 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – File where to replace a text section.

@item 
@code{Start_Line} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – undocumented

@item 
@code{Start_Offset} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – undocumented

@item 
@code{End_Line} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – undocumented

@item 
@code{End_Offset} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – undocumented

@item 
@code{Text} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – undocumented
@end itemize


@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Returns: 
Return True in case of success, False in case of failure (the gap is too small).

@end deffn

@geindex Fill_Text() (in module pyGHDL.libghdl.files_map_editor)
@anchor{pyGHDL/pyGHDL libghdl files_map_editor pyGHDL libghdl files_map_editor Fill_Text}@anchor{86d}
@deffn {Function} pyGHDL.libghdl.files_map_editor.Fill_Text (File, Text_Pointer, Text_Length)

Replace the content of @code{File} with TEXT.

@cartouche
@quotation Todo 
Replace @code{Text_Pointer} and @code{Text_Length} with Python string
@end quotation
@end cartouche

@*Parameters: 

@itemize *

@item 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – File where to replace the content.

@item 
@code{Text_Pointer} – Type: @code{File_Buffer_Ptr}

@item 
@code{Text_Length} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – Type: @code{Source_Ptr}
@end itemize


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Check_Buffer_Content() (in module pyGHDL.libghdl.files_map_editor)
@anchor{pyGHDL/pyGHDL libghdl files_map_editor pyGHDL libghdl files_map_editor Check_Buffer_Content}@anchor{86e}
@deffn {Function} pyGHDL.libghdl.files_map_editor.Check_Buffer_Content (File, String_Pointer, String_Length)

Check that content of @code{File} is STR[1 .. STR_LEN].

@cartouche
@quotation Todo 
Replace @code{String_Pointer} and @code{String_Length} with Python string
@end quotation
@end cartouche

@*Parameters: 

@itemize *

@item 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – File to check the content.

@item 
@code{String_Pointer} (c_char_p@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_char_p}) – Type: @code{File_Buffer_Ptr}

@item 
@code{String_Length} (c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint}) – Type: @code{Source_Ptr}
@end itemize


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Copy_Source_File() (in module pyGHDL.libghdl.files_map_editor)
@anchor{pyGHDL/pyGHDL libghdl files_map_editor pyGHDL libghdl files_map_editor Copy_Source_File}@anchor{86f}
@deffn {Function} pyGHDL.libghdl.files_map_editor.Copy_Source_File (Dest, Src)

Copy content of @code{Src} to @code{Dest}.
:rtype: None@footnote{https://docs.python.org/3/library/constants.html#None}

@cartouche
@quotation Warning 
The size of @code{Dest} must be large enough.
@end quotation
@end cartouche

Clear lines table of @code{Dest}.

@*Parameters: 

@itemize *

@item 
@code{Dest} (@code{SourceFileEntry}) – 

@item 
@code{Src} (@code{SourceFileEntry}) – 
@end itemize


@*Return type: 
None

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl flags,pyGHDL libghdl libraries,pyGHDL libghdl files_map_editor,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl flags doc}@anchor{870}@anchor{pyGHDL/pyGHDL libghdl flags module-pyGHDL libghdl flags}@anchor{24}@anchor{pyGHDL/pyGHDL libghdl flags pyghdl-libghdl-flags}@anchor{871}
@subsection @code{pyGHDL.libghdl.flags}


@geindex module; pyGHDL.libghdl.flags

`Variables'


@itemize -

@item 
@ref{872,,Flag_Elocations}

@item 
@ref{873,,Verbose}

@item 
@ref{874,,MB_Comment}

@item 
@ref{875,,Explicit}

@item 
@ref{876,,Relaxed}

@item 
@ref{877,,Flag_Elaborate_With_Outdated}

@item 
@ref{878,,Flag_Force_Analysis}

@item 
@ref{879,,AMS_Vhdl}

@item 
@ref{87a,,Flag_Gather_Comments}
@end itemize

`Classes'


@itemize -

@item 
@ref{87b,,VhdlStandard}:
An enumeration representing libghdl’s internal @code{Vhdl_Std_Type} enumeration type.
@end itemize


__________________________________________________________________


`Variables'

@geindex Flag_Elocations (in module pyGHDL.libghdl.flags)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags Flag_Elocations}@anchor{872}
@deffn {Data} pyGHDL.libghdl.flags.Flag_Elocations

@example
c_bool(False)
@end example
@end deffn

@geindex Verbose (in module pyGHDL.libghdl.flags)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags Verbose}@anchor{873}
@deffn {Data} pyGHDL.libghdl.flags.Verbose

Internal boolean flag representing -v@footnote{https://docs.python.org/3/using/cmdline.html#cmdoption-1}.

@example
c_bool(False)
@end example
@end deffn

@geindex MB_Comment (in module pyGHDL.libghdl.flags)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags MB_Comment}@anchor{874}
@deffn {Data} pyGHDL.libghdl.flags.MB_Comment

Internal boolean flag representing @code{--mb-comment}.

@example
c_bool(False)
@end example
@end deffn

@geindex Explicit (in module pyGHDL.libghdl.flags)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags Explicit}@anchor{875}
@deffn {Data} pyGHDL.libghdl.flags.Explicit

Internal boolean flag representing @code{-fexplicit}.

@example
c_bool(False)
@end example
@end deffn

@geindex Relaxed (in module pyGHDL.libghdl.flags)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags Relaxed}@anchor{876}
@deffn {Data} pyGHDL.libghdl.flags.Relaxed

Internal boolean flag representing @code{-frelaxed}.

@example
c_bool(True)
@end example
@end deffn

@geindex Flag_Elaborate_With_Outdated (in module pyGHDL.libghdl.flags)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags Flag_Elaborate_With_Outdated}@anchor{877}
@deffn {Data} pyGHDL.libghdl.flags.Flag_Elaborate_With_Outdated

@example
c_bool(False)
@end example
@end deffn

@geindex Flag_Force_Analysis (in module pyGHDL.libghdl.flags)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags Flag_Force_Analysis}@anchor{878}
@deffn {Data} pyGHDL.libghdl.flags.Flag_Force_Analysis

@example
c_bool(False)
@end example
@end deffn

@geindex AMS_Vhdl (in module pyGHDL.libghdl.flags)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags AMS_Vhdl}@anchor{879}
@deffn {Data} pyGHDL.libghdl.flags.AMS_Vhdl

Internal boolean flag representing @code{-ams}.

@example
c_bool(False)
@end example
@end deffn

@geindex Flag_Gather_Comments (in module pyGHDL.libghdl.flags)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags Flag_Gather_Comments}@anchor{87a}
@deffn {Data} pyGHDL.libghdl.flags.Flag_Gather_Comments

@example
c_bool(False)
@end example
@end deffn


__________________________________________________________________


`Classes'

@geindex VhdlStandard (class in pyGHDL.libghdl.flags)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags VhdlStandard}@anchor{87b}
@deffn {Class} pyGHDL.libghdl.flags.VhdlStandard (value)

An enumeration representing libghdl’s internal @code{Vhdl_Std_Type} enumeration type.

@subsubheading Inheritance

@image{inheritance-d247c65b85819fa8370549a1e12bbb2d9213ef95,,,[graphviz],png}

@geindex Vhdl_87 (pyGHDL.libghdl.flags.VhdlStandard attribute)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags VhdlStandard Vhdl_87}@anchor{87c}
@deffn {Attribute} Vhdl_87  =  0

VHDL’87
@end deffn

@geindex Vhdl_93 (pyGHDL.libghdl.flags.VhdlStandard attribute)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags VhdlStandard Vhdl_93}@anchor{87d}
@deffn {Attribute} Vhdl_93  =  1

VHDL’93
@end deffn

@geindex Vhdl_00 (pyGHDL.libghdl.flags.VhdlStandard attribute)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags VhdlStandard Vhdl_00}@anchor{87e}
@deffn {Attribute} Vhdl_00  =  2

VHDL’2000
@end deffn

@geindex Vhdl_02 (pyGHDL.libghdl.flags.VhdlStandard attribute)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags VhdlStandard Vhdl_02}@anchor{87f}
@deffn {Attribute} Vhdl_02  =  3

VHDL’2002
@end deffn

@geindex Vhdl_08 (pyGHDL.libghdl.flags.VhdlStandard attribute)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags VhdlStandard Vhdl_08}@anchor{880}
@deffn {Attribute} Vhdl_08  =  4

VHDL’2008
@end deffn

@geindex Vhdl_19 (pyGHDL.libghdl.flags.VhdlStandard attribute)
@anchor{pyGHDL/pyGHDL libghdl flags pyGHDL libghdl flags VhdlStandard Vhdl_19}@anchor{881}
@deffn {Attribute} Vhdl_19  =  5

VHDL’2019
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl libraries,pyGHDL libghdl name_table,pyGHDL libghdl flags,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl libraries doc}@anchor{882}@anchor{pyGHDL/pyGHDL libghdl libraries module-pyGHDL libghdl libraries}@anchor{25}@anchor{pyGHDL/pyGHDL libghdl libraries pyghdl-libghdl-libraries}@anchor{883}
@subsection @code{pyGHDL.libghdl.libraries}


@geindex module; pyGHDL.libghdl.libraries

`Variables'


@itemize -

@item 
@ref{884,,Library_Location}

@item 
@ref{885,,Work_Library}
@end itemize

`Functions'


@itemize -

@item 
@ref{886,,Get_Libraries_Chain()}:
Get the chain of libraries. Can be used only to read (it mustn’t be modified).

@item 
@ref{887,,Add_Design_Unit_Into_Library()}:
Add or replace an design unit in the work library. DECL must not have a chain

@item 
@ref{888,,Purge_Design_File()}:
Remove the same file as @code{Design_File} from work library and all of its units.

@item 
@ref{889,,Find_Entity_For_Component()}:
Find an entity whose name is @code{Name} in any library. 

@item 
@ref{88a,,Get_Library_No_Create()}:
Get the library named @code{Ident}.

@item 
@ref{88b,,Find_Primary_Unit()}:
Just return the design_unit for @code{Name}, or @code{NULL} if not found.
@end itemize


__________________________________________________________________


`Variables'

@geindex Library_Location (in module pyGHDL.libghdl.libraries)
@anchor{pyGHDL/pyGHDL libghdl libraries pyGHDL libghdl libraries Library_Location}@anchor{884}
@deffn {Data} pyGHDL.libghdl.libraries.Library_Location

A location for library declarations (such as library WORK).

Use the property @code{.value} to access the variable’s value.

@example
c_int(1)
@end example
@end deffn

@geindex Work_Library (in module pyGHDL.libghdl.libraries)
@anchor{pyGHDL/pyGHDL libghdl libraries pyGHDL libghdl libraries Work_Library}@anchor{885}
@deffn {Data} pyGHDL.libghdl.libraries.Work_Library

Library declaration for the work library.

@cartouche
@quotation Note 
The identifier of the work_library is @code{work_library_name}, which may be different from ‘WORK’.
@end quotation
@end cartouche

Use the property @code{.value} to access the variable’s value.

@example
c_int(0)
@end example
@end deffn


__________________________________________________________________


`Functions'

@geindex Get_Libraries_Chain() (in module pyGHDL.libghdl.libraries)
@anchor{pyGHDL/pyGHDL libghdl libraries pyGHDL libghdl libraries Get_Libraries_Chain}@anchor{886}
@deffn {Function} pyGHDL.libghdl.libraries.Get_Libraries_Chain ()

Get the chain of libraries. Can be used only to read (it mustn’t be modified).

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir_Library_Declaration}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
undocumented

@end deffn

@geindex Add_Design_Unit_Into_Library() (in module pyGHDL.libghdl.libraries)
@anchor{pyGHDL/pyGHDL libghdl libraries pyGHDL libghdl libraries Add_Design_Unit_Into_Library}@anchor{887}
@deffn {Function} pyGHDL.libghdl.libraries.Add_Design_Unit_Into_Library (Unit, Keep_Obsolete)

Add or replace an design unit in the work library. DECL must not have a chain
(because it may be modified).

If the design_file of UNIT is not already in the library, a new one is created.

Units are always appended to the design_file. Therefore, the order is kept.

@*Parameters: 

@itemize *

@item 
@code{Unit} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir_Design_Unit}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – undocumented

@item 
@code{Keep_Obsolete} (bool@footnote{https://docs.python.org/3/library/functions.html#bool}) – 
If @code{Keep_Obsolete} is True, obsoleted units are
kept in the library.

This is used when a whole design file has to be added
in the library and then processed (without that feature,
redefined units would disappear).

@end itemize


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Purge_Design_File() (in module pyGHDL.libghdl.libraries)
@anchor{pyGHDL/pyGHDL libghdl libraries pyGHDL libghdl libraries Purge_Design_File}@anchor{888}
@deffn {Function} pyGHDL.libghdl.libraries.Purge_Design_File (Design_File)

Remove the same file as @code{Design_File} from work library and all of its units.

@*Parameters: 
@code{Design_File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir_Design_File}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – undocumented


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Find_Entity_For_Component() (in module pyGHDL.libghdl.libraries)
@anchor{pyGHDL/pyGHDL libghdl libraries pyGHDL libghdl libraries Find_Entity_For_Component}@anchor{889}
@deffn {Function} pyGHDL.libghdl.libraries.Find_Entity_For_Component (Name)

Find an entity whose name is @code{Name} in any library. 
If there is no such entity, return @ref{816,,Null_Iir}. 
If there are several entities, return @ref{816,,Null_Iir};

@*Parameters: 
@code{Name} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Entity name to search for.


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir_Design_Unit}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
undocumented

@end deffn

@geindex Get_Library_No_Create() (in module pyGHDL.libghdl.libraries)
@anchor{pyGHDL/pyGHDL libghdl libraries pyGHDL libghdl libraries Get_Library_No_Create}@anchor{88a}
@deffn {Function} pyGHDL.libghdl.libraries.Get_Library_No_Create (Ident)

Get the library named @code{Ident}.

@*Parameters: 
@code{Ident} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Library to look for.


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir_Library_Declaration}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
Return @ref{816,,Null_Iir} if it doesn’t exist.

@end deffn

@geindex Find_Primary_Unit() (in module pyGHDL.libghdl.libraries)
@anchor{pyGHDL/pyGHDL libghdl libraries pyGHDL libghdl libraries Find_Primary_Unit}@anchor{88b}
@deffn {Function} pyGHDL.libghdl.libraries.Find_Primary_Unit (Library, Name)

Just return the design_unit for @code{Name}, or @code{NULL} if not found.

@*Parameters: 

@itemize *

@item 
@code{Library} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir_Library_Declaration}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Library to look in.

@item 
@code{Name} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Primary unit to search for.
@end itemize


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir_Design_Unit}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
undocumented

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl name_table,pyGHDL libghdl std_names,pyGHDL libghdl libraries,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl name_table doc}@anchor{88c}@anchor{pyGHDL/pyGHDL libghdl name_table module-pyGHDL libghdl name_table}@anchor{26}@anchor{pyGHDL/pyGHDL libghdl name_table pyghdl-libghdl-name-table}@anchor{88d}
@subsection @code{pyGHDL.libghdl.name_table}


@geindex module; pyGHDL.libghdl.name_table

`Variables'


@itemize -

@item 
@ref{88e,,Null_Identifier}
@end itemize

`Functions'


@itemize -

@item 
@ref{88f,,Get_Name_Length()}:
Get the length of an identifier denoted by a @code{NameId}.

@item 
@ref{890,,Get_Name_Ptr()}:
Get the string corresponding to identifier ID. The address is valid until

@item 
@ref{891,,Get_Character()}:
Get the string corresponding to character identifier ID.

@item 
@ref{892,,Get_Identifier()}:
Get or create an entry in the name table.
@end itemize


__________________________________________________________________


`Variables'

@geindex Null_Identifier (in module pyGHDL.libghdl.name_table)
@anchor{pyGHDL/pyGHDL libghdl name_table pyGHDL libghdl name_table Null_Identifier}@anchor{88e}
@deffn {Data} pyGHDL.libghdl.name_table.Null_Identifier

int([x]) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by ‘+’ or ‘-’ and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int(‘0b100’, base=0)
4

@example
0
@end example
@end deffn


__________________________________________________________________


`Functions'

@geindex Get_Name_Length() (in module pyGHDL.libghdl.name_table)
@anchor{pyGHDL/pyGHDL libghdl name_table pyGHDL libghdl name_table Get_Name_Length}@anchor{88f}
@deffn {Function} pyGHDL.libghdl.name_table.Get_Name_Length (Id)

Get the length of an identifier denoted by a @code{NameId}.

@*Parameters: 
@code{Id} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – NameId for the identifier to query.


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Length of the identifier.

@end deffn

@geindex Get_Name_Ptr() (in module pyGHDL.libghdl.name_table)
@anchor{pyGHDL/pyGHDL libghdl name_table pyGHDL libghdl name_table Get_Name_Ptr}@anchor{890}
@deffn {Function} pyGHDL.libghdl.name_table.Get_Name_Ptr (Id)

Get the string corresponding to identifier ID. The address is valid until
the next call to Get_Identifier (which may reallocate the string table).
The string is NUL-terminated (this is done by get_identifier).

@*Parameters: 
@code{Id} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – NameId for the identifier to query.


@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Returns: 
Identifier as string.

@end deffn

@geindex Get_Character() (in module pyGHDL.libghdl.name_table)
@anchor{pyGHDL/pyGHDL libghdl name_table pyGHDL libghdl name_table Get_Character}@anchor{891}
@deffn {Function} pyGHDL.libghdl.name_table.Get_Character (Id)

Get the string corresponding to character identifier ID.

@cartouche
@quotation Note 
This is used for character literals and enumeration literals.
@end quotation
@end cartouche

@*Parameters: 
@code{Id} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – NameId for the identifier to query.


@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Returns: 
Get the character of the identifier.

@end deffn

@geindex Get_Identifier() (in module pyGHDL.libghdl.name_table)
@anchor{pyGHDL/pyGHDL libghdl name_table pyGHDL libghdl name_table Get_Identifier}@anchor{892}
@deffn {Function} pyGHDL.libghdl.name_table.Get_Identifier (string)

Get or create an entry in the name table.

@cartouche
@quotation Note 

@itemize *

@item 
an identifier is represented in all lower case letter,

@item 
an extended identifier is represented in backslashes, double internal
backslashes are simplified.
@end itemize
@end quotation
@end cartouche

@*Parameters: 
@code{string} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – String to create or lookup.


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
Id in name table.

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl std_names,pyGHDL libghdl str_table,pyGHDL libghdl name_table,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl std_names doc}@anchor{893}@anchor{pyGHDL/pyGHDL libghdl std_names module-pyGHDL libghdl std_names}@anchor{27}@anchor{pyGHDL/pyGHDL libghdl std_names pyghdl-libghdl-std-names}@anchor{894}
@subsection @code{pyGHDL.libghdl.std_names}


@geindex module; pyGHDL.libghdl.std_names

`Classes'


@itemize -

@item 
@ref{7a3,,Name}:
Undocumented.
@end itemize


__________________________________________________________________


`Classes'

@geindex Name (class in pyGHDL.libghdl.std_names)
@anchor{pyGHDL/pyGHDL libghdl std_names pyGHDL libghdl std_names Name}@anchor{7a3}
@deffn {Class} pyGHDL.libghdl.std_names.Name

@subsubheading Inheritance

@image{inheritance-acd157b4ec02feb93c8de361fba52147cccfe359,,,[graphviz],png}
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl str_table,pyGHDL libghdl utils,pyGHDL libghdl std_names,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl str_table doc}@anchor{895}@anchor{pyGHDL/pyGHDL libghdl str_table module-pyGHDL libghdl str_table}@anchor{28}@anchor{pyGHDL/pyGHDL libghdl str_table pyghdl-libghdl-str-table}@anchor{896}
@subsection @code{pyGHDL.libghdl.str_table}


@geindex module; pyGHDL.libghdl.str_table

`Functions'


@itemize -

@item 
@ref{897,,_String8_Address()}:

@item 
@ref{898,,Get_String8_Ptr()}:
Get the address of string8 ID. Note that as soon as a character is appended
@end itemize


__________________________________________________________________


`Functions'

@geindex _String8_Address() (in module pyGHDL.libghdl.str_table)
@anchor{pyGHDL/pyGHDL libghdl str_table pyGHDL libghdl str_table _String8_Address}@anchor{897}
@deffn {Function} pyGHDL.libghdl.str_table._String8_Address (Id)

@*Return type: 
c_char_p@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_char_p}


@*Parameters: 
@code{Id} (@code{String8Id}) – 

@end deffn

@geindex Get_String8_Ptr() (in module pyGHDL.libghdl.str_table)
@anchor{pyGHDL/pyGHDL libghdl str_table pyGHDL libghdl str_table Get_String8_Ptr}@anchor{898}
@deffn {Function} pyGHDL.libghdl.str_table.Get_String8_Ptr (Id, Length)

Get the address of string8 ID. Note that as soon as a character is appended
(using Append_String8) or a string8 is resized (using Resize_String8), an
address previously returned is not valid anymore.

@*Parameters: 

@itemize *

@item 
@code{Id} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{String8Id}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – String8Id for the string to query.

@item 
@code{Length} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 
@end itemize


@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Returns: 
String8 as string.

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl utils,pyGHDL libghdl vhdl,pyGHDL libghdl str_table,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl utils doc}@anchor{899}@anchor{pyGHDL/pyGHDL libghdl utils module-pyGHDL libghdl utils}@anchor{29}@anchor{pyGHDL/pyGHDL libghdl utils pyghdl-libghdl-utils}@anchor{89a}
@subsection @code{pyGHDL.libghdl.utils}


@geindex module; pyGHDL.libghdl.utils

`Functions'


@itemize -

@item 
@ref{89b,,name_image()}:
Lookup a @code{Id} and return its string.

@item 
@ref{89c,,fields_image()}:
String representation of Nodes_Meta.fields @code{idx}.

@item 
@ref{89d,,kind_image()}:
String representation of Nodes.Iir_Kind @code{k}.

@item 
@ref{89e,,types_image()}:
String representation of Nodes_Meta.Types @code{t}.

@item 
@ref{89f,,attr_image()}:
String representation of Nodes_Meta.Attr @code{a}.

@item 
@ref{8a0,,leftest_location()}:
Undocumented.

@item 
@ref{8a1,,fields_iter()}:
Iterate on fields of node @code{n}.

@item 
@ref{8a2,,chain_iter()}:
Iterate of a chain headed by node @code{n}.

@item 
@ref{8a3,,chain_to_list()}:
Convert a chain headed by node @code{n} to a Python list.

@item 
@ref{8a4,,nodes_iter()}:
Iterate all nodes of @code{n}, including @code{n}.

@item 
@ref{8a5,,list_iter()}:
Iterate all element of Iir_List @code{lst}.

@item 
@ref{8a6,,flist_iter()}:
Iterate all element of Iir_List @code{lst}.

@item 
@ref{8a7,,declarations_iter()}:
Iterate all declarations in node @code{n}.

@item 
@ref{8a8,,concurrent_stmts_iter()}:
Iterate concurrent statements in node @code{n}.

@item 
@ref{8a9,,constructs_iter()}:
Iterate library units, concurrent statements and declarations

@item 
@ref{8aa,,sequential_iter()}:
Iterate sequential statements. The first node must be either
@end itemize


__________________________________________________________________


`Functions'

@geindex name_image() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils name_image}@anchor{89b}
@deffn {Function} pyGHDL.libghdl.utils.name_image (Id)

Lookup a @code{Id} and return its string.

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Parameters: 
@code{Id} (@code{NameId}) – 

@end deffn

@geindex fields_image() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils fields_image}@anchor{89c}
@deffn {Function} pyGHDL.libghdl.utils.fields_image (idx)

String representation of Nodes_Meta.fields @code{idx}.

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Parameters: 
@code{idx} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@end deffn

@geindex kind_image() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils kind_image}@anchor{89d}
@deffn {Function} pyGHDL.libghdl.utils.kind_image (k)

String representation of Nodes.Iir_Kind @code{k}.

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Parameters: 
@code{k} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@end deffn

@geindex types_image() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils types_image}@anchor{89e}
@deffn {Function} pyGHDL.libghdl.utils.types_image (t)

String representation of Nodes_Meta.Types @code{t}.

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Parameters: 
@code{t} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@end deffn

@geindex attr_image() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils attr_image}@anchor{89f}
@deffn {Function} pyGHDL.libghdl.utils.attr_image (a)

String representation of Nodes_Meta.Attr @code{a}.

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Parameters: 
@code{a} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 

@end deffn

@geindex leftest_location() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils leftest_location}@anchor{8a0}
@deffn {Function} pyGHDL.libghdl.utils.leftest_location (n)
@end deffn

@geindex fields_iter() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils fields_iter}@anchor{8a1}
@deffn {Function} pyGHDL.libghdl.utils.fields_iter (n)

Iterate on fields of node @code{n}.

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[Any@footnote{https://docs.python.org/3/library/typing.html#typing.Any}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

@end deffn

@geindex chain_iter() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils chain_iter}@anchor{8a2}
@deffn {Function} pyGHDL.libghdl.utils.chain_iter (n)

Iterate of a chain headed by node @code{n}.

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[Any@footnote{https://docs.python.org/3/library/typing.html#typing.Any}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

@end deffn

@geindex chain_to_list() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils chain_to_list}@anchor{8a3}
@deffn {Function} pyGHDL.libghdl.utils.chain_to_list (n)

Convert a chain headed by node @code{n} to a Python list.

@*Return type: 
List@footnote{https://docs.python.org/3/library/typing.html#typing.List}[Any@footnote{https://docs.python.org/3/library/typing.html#typing.Any}]

@end deffn

@geindex nodes_iter() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils nodes_iter}@anchor{8a4}
@deffn {Function} pyGHDL.libghdl.utils.nodes_iter (n)

Iterate all nodes of @code{n}, including @code{n}.
Nodes are returned only once.

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[Any@footnote{https://docs.python.org/3/library/typing.html#typing.Any}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

@end deffn

@geindex list_iter() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils list_iter}@anchor{8a5}
@deffn {Function} pyGHDL.libghdl.utils.list_iter (lst)

Iterate all element of Iir_List @code{lst}.

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[Any@footnote{https://docs.python.org/3/library/typing.html#typing.Any}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

@end deffn

@geindex flist_iter() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils flist_iter}@anchor{8a6}
@deffn {Function} pyGHDL.libghdl.utils.flist_iter (lst)

Iterate all element of Iir_List @code{lst}.

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[Any@footnote{https://docs.python.org/3/library/typing.html#typing.Any}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

@end deffn

@geindex declarations_iter() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils declarations_iter}@anchor{8a7}
@deffn {Function} pyGHDL.libghdl.utils.declarations_iter (n)

Iterate all declarations in node @code{n}.

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[Any@footnote{https://docs.python.org/3/library/typing.html#typing.Any}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

@end deffn

@geindex concurrent_stmts_iter() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils concurrent_stmts_iter}@anchor{8a8}
@deffn {Function} pyGHDL.libghdl.utils.concurrent_stmts_iter (n)

Iterate concurrent statements in node @code{n}.

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[Any@footnote{https://docs.python.org/3/library/typing.html#typing.Any}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

@end deffn

@geindex constructs_iter() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils constructs_iter}@anchor{8a9}
@deffn {Function} pyGHDL.libghdl.utils.constructs_iter (n)

Iterate library units, concurrent statements and declarations
that appear directly within a declarative part.

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[Any@footnote{https://docs.python.org/3/library/typing.html#typing.Any}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

@end deffn

@geindex sequential_iter() (in module pyGHDL.libghdl.utils)
@anchor{pyGHDL/pyGHDL libghdl utils pyGHDL libghdl utils sequential_iter}@anchor{8aa}
@deffn {Function} pyGHDL.libghdl.utils.sequential_iter (n)

Iterate sequential statements. The first node must be either
a process or a subprogram body.

@*Return type: 
Generator@footnote{https://docs.python.org/3/library/typing.html#typing.Generator}[Any@footnote{https://docs.python.org/3/library/typing.html#typing.Any}, None@footnote{https://docs.python.org/3/library/constants.html#None}, None@footnote{https://docs.python.org/3/library/constants.html#None}]

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl,,pyGHDL libghdl utils,pyGHDL libghdl
@anchor{pyGHDL/pyGHDL libghdl vhdl doc}@anchor{8ab}@anchor{pyGHDL/pyGHDL libghdl vhdl module-pyGHDL libghdl vhdl}@anchor{2a}@anchor{pyGHDL/pyGHDL libghdl vhdl pyghdl-libghdl-vhdl}@anchor{8ac}
@subsection @code{pyGHDL.libghdl.vhdl}


@geindex module; pyGHDL.libghdl.vhdl

`Submodules'

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@menu
* pyGHDL.libghdl.vhdl.canon: pyGHDL libghdl vhdl canon. 
* pyGHDL.libghdl.vhdl.elocations: pyGHDL libghdl vhdl elocations. 
* pyGHDL.libghdl.vhdl.flists: pyGHDL libghdl vhdl flists. 
* pyGHDL.libghdl.vhdl.formatters: pyGHDL libghdl vhdl formatters. 
* pyGHDL.libghdl.vhdl.ieee: pyGHDL libghdl vhdl ieee. 
* pyGHDL.libghdl.vhdl.lists: pyGHDL libghdl vhdl lists. 
* pyGHDL.libghdl.vhdl.nodes: pyGHDL libghdl vhdl nodes. 
* pyGHDL.libghdl.vhdl.nodes_meta: pyGHDL libghdl vhdl nodes_meta. 
* pyGHDL.libghdl.vhdl.nodes_utils: pyGHDL libghdl vhdl nodes_utils. 
* pyGHDL.libghdl.vhdl.parse: pyGHDL libghdl vhdl parse. 
* pyGHDL.libghdl.vhdl.prints: pyGHDL libghdl vhdl prints. 
* pyGHDL.libghdl.vhdl.scanner: pyGHDL libghdl vhdl scanner. 
* pyGHDL.libghdl.vhdl.sem: pyGHDL libghdl vhdl sem. 
* pyGHDL.libghdl.vhdl.sem_lib: pyGHDL libghdl vhdl sem_lib. 
* pyGHDL.libghdl.vhdl.std_package: pyGHDL libghdl vhdl std_package. 
* pyGHDL.libghdl.vhdl.tokens: pyGHDL libghdl vhdl tokens. 
* pyGHDL.libghdl.vhdl.utils: pyGHDL libghdl vhdl utils. 

@end menu

@node pyGHDL libghdl vhdl canon,pyGHDL libghdl vhdl elocations,,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl canon doc}@anchor{8ad}@anchor{pyGHDL/pyGHDL libghdl vhdl canon module-pyGHDL libghdl vhdl canon}@anchor{2b}@anchor{pyGHDL/pyGHDL libghdl vhdl canon pyghdl-libghdl-vhdl-canon}@anchor{8ae}
@subsubsection @code{pyGHDL.libghdl.vhdl.canon}


@geindex module; pyGHDL.libghdl.vhdl.canon

`Variables'


@itemize -

@item 
@ref{8af,,Flag_Concurrent_Stmts}

@item 
@ref{8b0,,Flag_Configurations}

@item 
@ref{8b1,,Flag_Associations}
@end itemize


__________________________________________________________________


`Variables'

@geindex Flag_Concurrent_Stmts (in module pyGHDL.libghdl.vhdl.canon)
@anchor{pyGHDL/pyGHDL libghdl vhdl canon pyGHDL libghdl vhdl canon Flag_Concurrent_Stmts}@anchor{8af}
@deffn {Data} pyGHDL.libghdl.vhdl.canon.Flag_Concurrent_Stmts

@example
c_bool(True)
@end example
@end deffn

@geindex Flag_Configurations (in module pyGHDL.libghdl.vhdl.canon)
@anchor{pyGHDL/pyGHDL libghdl vhdl canon pyGHDL libghdl vhdl canon Flag_Configurations}@anchor{8b0}
@deffn {Data} pyGHDL.libghdl.vhdl.canon.Flag_Configurations

@example
c_bool(True)
@end example
@end deffn

@geindex Flag_Associations (in module pyGHDL.libghdl.vhdl.canon)
@anchor{pyGHDL/pyGHDL libghdl vhdl canon pyGHDL libghdl vhdl canon Flag_Associations}@anchor{8b1}
@deffn {Data} pyGHDL.libghdl.vhdl.canon.Flag_Associations

@example
c_bool(True)
@end example
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl elocations,pyGHDL libghdl vhdl flists,pyGHDL libghdl vhdl canon,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations doc}@anchor{8b2}@anchor{pyGHDL/pyGHDL libghdl vhdl elocations module-pyGHDL libghdl vhdl elocations}@anchor{2c}@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyghdl-libghdl-vhdl-elocations}@anchor{8b3}
@subsubsection @code{pyGHDL.libghdl.vhdl.elocations}


@geindex module; pyGHDL.libghdl.vhdl.elocations

`Functions'


@itemize -

@item 
@ref{8b4,,Get_Start_Location()}:
Undocumented.

@item 
@ref{8b5,,Set_Start_Location()}:
Undocumented.

@item 
@ref{8b6,,Get_Right_Paren_Location()}:
Undocumented.

@item 
@ref{8b7,,Set_Right_Paren_Location()}:
Undocumented.

@item 
@ref{8b8,,Get_End_Location()}:
Undocumented.

@item 
@ref{8b9,,Set_End_Location()}:
Undocumented.

@item 
@ref{8ba,,Get_Is_Location()}:
Undocumented.

@item 
@ref{8bb,,Set_Is_Location()}:
Undocumented.

@item 
@ref{8bc,,Get_Begin_Location()}:
Undocumented.

@item 
@ref{8bd,,Set_Begin_Location()}:
Undocumented.

@item 
@ref{8be,,Get_Then_Location()}:
Undocumented.

@item 
@ref{8bf,,Set_Then_Location()}:
Undocumented.

@item 
@ref{8c0,,Get_Use_Location()}:
Undocumented.

@item 
@ref{8c1,,Set_Use_Location()}:
Undocumented.

@item 
@ref{8c2,,Get_Loop_Location()}:
Undocumented.

@item 
@ref{8c3,,Set_Loop_Location()}:
Undocumented.

@item 
@ref{8c4,,Get_Generate_Location()}:
Undocumented.

@item 
@ref{8c5,,Set_Generate_Location()}:
Undocumented.

@item 
@ref{8c6,,Get_Generic_Location()}:
Undocumented.

@item 
@ref{8c7,,Set_Generic_Location()}:
Undocumented.

@item 
@ref{8c8,,Get_Port_Location()}:
Undocumented.

@item 
@ref{8c9,,Set_Port_Location()}:
Undocumented.

@item 
@ref{8ca,,Get_Generic_Map_Location()}:
Undocumented.

@item 
@ref{8cb,,Set_Generic_Map_Location()}:
Undocumented.

@item 
@ref{8cc,,Get_Port_Map_Location()}:
Undocumented.

@item 
@ref{8cd,,Set_Port_Map_Location()}:
Undocumented.

@item 
@ref{8ce,,Get_Arrow_Location()}:
Undocumented.

@item 
@ref{8cf,,Set_Arrow_Location()}:
Undocumented.

@item 
@ref{8d0,,Get_Colon_Location()}:
Undocumented.

@item 
@ref{8d1,,Set_Colon_Location()}:
Undocumented.

@item 
@ref{8d2,,Get_Assign_Location()}:
Undocumented.

@item 
@ref{8d3,,Set_Assign_Location()}:
Undocumented.
@end itemize


__________________________________________________________________


`Functions'

@geindex Get_Start_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Start_Location}@anchor{8b4}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Start_Location (obj)
@end deffn

@geindex Set_Start_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Start_Location}@anchor{8b5}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Start_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Right_Paren_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Right_Paren_Location}@anchor{8b6}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Right_Paren_Location (obj)
@end deffn

@geindex Set_Right_Paren_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Right_Paren_Location}@anchor{8b7}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Right_Paren_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_End_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_End_Location}@anchor{8b8}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_End_Location (obj)
@end deffn

@geindex Set_End_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_End_Location}@anchor{8b9}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_End_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Is_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Is_Location}@anchor{8ba}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Is_Location (obj)
@end deffn

@geindex Set_Is_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Is_Location}@anchor{8bb}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Is_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Begin_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Begin_Location}@anchor{8bc}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Begin_Location (obj)
@end deffn

@geindex Set_Begin_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Begin_Location}@anchor{8bd}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Begin_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Then_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Then_Location}@anchor{8be}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Then_Location (obj)
@end deffn

@geindex Set_Then_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Then_Location}@anchor{8bf}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Then_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Use_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Use_Location}@anchor{8c0}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Use_Location (obj)
@end deffn

@geindex Set_Use_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Use_Location}@anchor{8c1}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Use_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Loop_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Loop_Location}@anchor{8c2}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Loop_Location (obj)
@end deffn

@geindex Set_Loop_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Loop_Location}@anchor{8c3}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Loop_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Generate_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Generate_Location}@anchor{8c4}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Generate_Location (obj)
@end deffn

@geindex Set_Generate_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Generate_Location}@anchor{8c5}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Generate_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Generic_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Generic_Location}@anchor{8c6}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Generic_Location (obj)
@end deffn

@geindex Set_Generic_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Generic_Location}@anchor{8c7}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Generic_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Port_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Port_Location}@anchor{8c8}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Port_Location (obj)
@end deffn

@geindex Set_Port_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Port_Location}@anchor{8c9}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Port_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Generic_Map_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Generic_Map_Location}@anchor{8ca}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Generic_Map_Location (obj)
@end deffn

@geindex Set_Generic_Map_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Generic_Map_Location}@anchor{8cb}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Generic_Map_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Port_Map_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Port_Map_Location}@anchor{8cc}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Port_Map_Location (obj)
@end deffn

@geindex Set_Port_Map_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Port_Map_Location}@anchor{8cd}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Port_Map_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Arrow_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Arrow_Location}@anchor{8ce}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Arrow_Location (obj)
@end deffn

@geindex Set_Arrow_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Arrow_Location}@anchor{8cf}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Arrow_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Colon_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Colon_Location}@anchor{8d0}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Colon_Location (obj)
@end deffn

@geindex Set_Colon_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Colon_Location}@anchor{8d1}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Colon_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Assign_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Get_Assign_Location}@anchor{8d2}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Get_Assign_Location (obj)
@end deffn

@geindex Set_Assign_Location() (in module pyGHDL.libghdl.vhdl.elocations)
@anchor{pyGHDL/pyGHDL libghdl vhdl elocations pyGHDL libghdl vhdl elocations Set_Assign_Location}@anchor{8d3}
@deffn {Function} pyGHDL.libghdl.vhdl.elocations.Set_Assign_Location (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl flists,pyGHDL libghdl vhdl formatters,pyGHDL libghdl vhdl elocations,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl flists doc}@anchor{8d4}@anchor{pyGHDL/pyGHDL libghdl vhdl flists module-pyGHDL libghdl vhdl flists}@anchor{2d}@anchor{pyGHDL/pyGHDL libghdl vhdl flists pyghdl-libghdl-vhdl-flists}@anchor{8d5}
@subsubsection @code{pyGHDL.libghdl.vhdl.flists}


@geindex module; pyGHDL.libghdl.vhdl.flists

`Variables'


@itemize -

@item 
@ref{8d6,,Ffirst}
@end itemize

`Functions'


@itemize -

@item 
@ref{8d7,,Flast()}:
Last index of @code{FList}.

@item 
@ref{8d8,,Length()}:
Get the length of @code{FList}.

@item 
@ref{8d9,,Get_Nth_Element()}:
Get the N-th element of @code{FList}.
@end itemize

`Classes'


@itemize -

@item 
@ref{8da,,Flist_Type}:
XXX to be provided
@end itemize


__________________________________________________________________


`Variables'

@geindex Ffirst (in module pyGHDL.libghdl.vhdl.flists)
@anchor{pyGHDL/pyGHDL libghdl vhdl flists pyGHDL libghdl vhdl flists Ffirst}@anchor{8d6}
@deffn {Data} pyGHDL.libghdl.vhdl.flists.Ffirst

int([x]) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by ‘+’ or ‘-’ and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int(‘0b100’, base=0)
4

@example
0
@end example
@end deffn


__________________________________________________________________


`Functions'

@geindex Flast() (in module pyGHDL.libghdl.vhdl.flists)
@anchor{pyGHDL/pyGHDL libghdl vhdl flists pyGHDL libghdl vhdl flists Flast}@anchor{8d7}
@deffn {Function} pyGHDL.libghdl.vhdl.flists.Flast (FList)

Last index of @code{FList}.

@cartouche
@quotation Hint 
Could be used to iterate.
@end quotation
@end cartouche

@*Parameters: 
@code{FList} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – List to query.


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Index of the last element in the list.

@end deffn

@geindex Length() (in module pyGHDL.libghdl.vhdl.flists)
@anchor{pyGHDL/pyGHDL libghdl vhdl flists pyGHDL libghdl vhdl flists Length}@anchor{8d8}
@deffn {Function} pyGHDL.libghdl.vhdl.flists.Length (FList)

Get the length of @code{FList}.

@*Parameters: 
@code{FList} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – List to query.


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Number of elements in the list.

@end deffn

@geindex Get_Nth_Element() (in module pyGHDL.libghdl.vhdl.flists)
@anchor{pyGHDL/pyGHDL libghdl vhdl flists pyGHDL libghdl vhdl flists Get_Nth_Element}@anchor{8d9}
@deffn {Function} pyGHDL.libghdl.vhdl.flists.Get_Nth_Element (FList, N)

Get the N-th element of @code{FList}.

First element has index 0.

@*Parameters: 

@itemize *

@item 
@code{FList} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – List to query.

@item 
@code{N} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – 
@end itemize


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Type: @code{El_Type}

@end deffn


__________________________________________________________________


`Classes'

@geindex Flist_Type (in module pyGHDL.libghdl.vhdl.flists)
@anchor{pyGHDL/pyGHDL libghdl vhdl flists pyGHDL libghdl vhdl flists Flist_Type}@anchor{8da}
@deffn {Attribute} pyGHDL.libghdl.vhdl.flists.Flist_Type

First index of a @code{FList}.

@subsubheading Inheritance

@image{inheritance-5a4559d0ea8bc55abcb9766af0a17d4f19e40984,,,[graphviz],png}
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl formatters,pyGHDL libghdl vhdl ieee,pyGHDL libghdl vhdl flists,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl formatters doc}@anchor{8db}@anchor{pyGHDL/pyGHDL libghdl vhdl formatters module-pyGHDL libghdl vhdl formatters}@anchor{2e}@anchor{pyGHDL/pyGHDL libghdl vhdl formatters pyghdl-libghdl-vhdl-formatters}@anchor{8dc}
@subsubsection @code{pyGHDL.libghdl.vhdl.formatters}


@geindex module; pyGHDL.libghdl.vhdl.formatters

`Functions'


@itemize -

@item 
@ref{8dd,,Indent_String()}:
Reindent all lines of F between [First_Line; Last_Line] to @code{Handle}.
@end itemize


__________________________________________________________________


`Functions'

@geindex Indent_String() (in module pyGHDL.libghdl.vhdl.formatters)
@anchor{pyGHDL/pyGHDL libghdl vhdl formatters pyGHDL libghdl vhdl formatters Indent_String}@anchor{8dd}
@deffn {Function} pyGHDL.libghdl.vhdl.formatters.Indent_String (File, Handle, FirstLine, LastLine)

Reindent all lines of F between [First_Line; Last_Line] to @code{Handle}.

@*Parameters: 

@itemize *

@item 
@code{File} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – File to indent lines within. Type: @code{Iir_Design_File}

@item 
@code{Handle} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – undocumented. Type: @code{Vstring_Acc}

@item 
@code{FirstLine} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – undocumented.

@item 
@code{LastLine} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – undocumented.
@end itemize


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl ieee,pyGHDL libghdl vhdl lists,pyGHDL libghdl vhdl formatters,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl ieee doc}@anchor{8de}@anchor{pyGHDL/pyGHDL libghdl vhdl ieee module-pyGHDL libghdl vhdl ieee}@anchor{2f}@anchor{pyGHDL/pyGHDL libghdl vhdl ieee pyghdl-libghdl-vhdl-ieee}@anchor{8df}
@subsubsection @code{pyGHDL.libghdl.vhdl.ieee}


@geindex module; pyGHDL.libghdl.vhdl.ieee

`Variables'


@itemize -

@item 
@ref{8e0,,Std_Logic_1164_Pkg}

@item 
@ref{8e1,,Std_Logic_Type}

@item 
@ref{8e2,,Std_Logic_Vector_Type}
@end itemize


__________________________________________________________________


`Variables'

@geindex Std_Logic_1164_Pkg (in module pyGHDL.libghdl.vhdl.ieee)
@anchor{pyGHDL/pyGHDL libghdl vhdl ieee pyGHDL libghdl vhdl ieee Std_Logic_1164_Pkg}@anchor{8e0}
@deffn {Data} pyGHDL.libghdl.vhdl.ieee.Std_Logic_1164_Pkg

@example
c_int(0)
@end example
@end deffn

@geindex Std_Logic_Type (in module pyGHDL.libghdl.vhdl.ieee)
@anchor{pyGHDL/pyGHDL libghdl vhdl ieee pyGHDL libghdl vhdl ieee Std_Logic_Type}@anchor{8e1}
@deffn {Data} pyGHDL.libghdl.vhdl.ieee.Std_Logic_Type

@example
c_int(0)
@end example
@end deffn

@geindex Std_Logic_Vector_Type (in module pyGHDL.libghdl.vhdl.ieee)
@anchor{pyGHDL/pyGHDL libghdl vhdl ieee pyGHDL libghdl vhdl ieee Std_Logic_Vector_Type}@anchor{8e2}
@deffn {Data} pyGHDL.libghdl.vhdl.ieee.Std_Logic_Vector_Type

@example
c_int(0)
@end example
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl lists,pyGHDL libghdl vhdl nodes,pyGHDL libghdl vhdl ieee,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl lists doc}@anchor{8e3}@anchor{pyGHDL/pyGHDL libghdl vhdl lists module-pyGHDL libghdl vhdl lists}@anchor{30}@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyghdl-libghdl-vhdl-lists}@anchor{8e4}
@subsubsection @code{pyGHDL.libghdl.vhdl.lists}


@geindex module; pyGHDL.libghdl.vhdl.lists

`Functions'


@itemize -

@item 
@ref{8e5,,Iterate()}:
Create an iterator for a given list.

@item 
@ref{8e6,,Is_Valid()}:
Check if iterator reached the end.

@item 
@ref{8e7,,Next()}:
Move iterator to the next element.

@item 
@ref{8e8,,Get_Element()}:
Get the current element from iterator.

@item 
@ref{8e9,,Get_Nbr_Elements()}:
Return the number of elements in the list.

@item 
@ref{8ea,,Create_Iir_List()}:
Create a list.

@item 
@ref{8eb,,Destroy_Iir_List()}:
Destroy a list.
@end itemize

`Classes'


@itemize -

@item 
@ref{8ec,,Iterator}:
Structure base class
@end itemize


__________________________________________________________________


`Functions'

@geindex Iterate() (in module pyGHDL.libghdl.vhdl.lists)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Iterate}@anchor{8e5}
@deffn {Function} pyGHDL.libghdl.vhdl.lists.Iterate (List)

Create an iterator for a given list.

The idiomatic way to iterate is:

@example
It = Iterate(List)
while Is_Valid(It):
  El = Get_Element(It)
    # ...
  Next(It)
@end example

@*Parameters: 
@code{List} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – List to create an iterator from.


@*Return type: 
@ref{8ec,,Iterator}


@*Returns: 
Iterator structure.

@end deffn

@geindex Is_Valid() (in module pyGHDL.libghdl.vhdl.lists)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Is_Valid}@anchor{8e6}
@deffn {Function} pyGHDL.libghdl.vhdl.lists.Is_Valid (it)

Check if iterator reached the end.

@*Parameters: 
@code{it} (@ref{8ec,,Iterator}) – Iterator to check.


@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Returns: 
@code{False}, if iterator has reached the end.

@end deffn

@geindex Next() (in module pyGHDL.libghdl.vhdl.lists)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Next}@anchor{8e7}
@deffn {Function} pyGHDL.libghdl.vhdl.lists.Next (it)

Move iterator to the next element.

@*Parameters: 
@code{it} (@ref{8ec,,Iterator}) – Iterator to increment.


@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Returns: 
@code{False}, if iterator has reached the end.

@end deffn

@geindex Get_Element() (in module pyGHDL.libghdl.vhdl.lists)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Get_Element}@anchor{8e8}
@deffn {Function} pyGHDL.libghdl.vhdl.lists.Get_Element (it)

Get the current element from iterator.

@*Parameters: 
@code{it} (@ref{8ec,,Iterator}) – Iterator the get the element from.


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
The current element the iterator points to. Type: @code{El_Type}

@end deffn

@geindex Get_Nbr_Elements() (in module pyGHDL.libghdl.vhdl.lists)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Get_Nbr_Elements}@anchor{8e9}
@deffn {Function} pyGHDL.libghdl.vhdl.lists.Get_Nbr_Elements (List)

Return the number of elements in the list.

@cartouche
@quotation Hint 
This is also 1 + the position of the last element.
@end quotation
@end cartouche

@*Parameters: 
@code{List} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – The list to use.


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Number of list elements.

@end deffn

@geindex Create_Iir_List() (in module pyGHDL.libghdl.vhdl.lists)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Create_Iir_List}@anchor{8ea}
@deffn {Function} pyGHDL.libghdl.vhdl.lists.Create_Iir_List ()

Create a list.

@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
undocumented; Type: @code{List_Type}

@end deffn

@geindex Destroy_Iir_List() (in module pyGHDL.libghdl.vhdl.lists)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Destroy_Iir_List}@anchor{8eb}
@deffn {Function} pyGHDL.libghdl.vhdl.lists.Destroy_Iir_List (List)

Destroy a list.

@*Parameters: 
@code{List} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – List to destroy.


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn


__________________________________________________________________


`Classes'

@geindex Iterator (class in pyGHDL.libghdl.vhdl.lists)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Iterator}@anchor{8ec}
@deffn {Class} pyGHDL.libghdl.vhdl.lists.Iterator

@subsubheading Inheritance

@image{inheritance-8d5a486ef5d72ff930f2d334d7bc1ae76f8abb74,,,[graphviz],png}

@geindex __hash__() (pyGHDL.libghdl.vhdl.lists.Iterator method)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Iterator __hash__}@anchor{8ed}
@deffn {Method} __hash__ ()

Return hash(self).
@end deffn

@geindex __init__() (pyGHDL.libghdl.vhdl.lists.Iterator method)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Iterator __init__}@anchor{8ee}
@deffn {Method} __init__ (*args, **kwargs)
@end deffn

@geindex __new__() (pyGHDL.libghdl.vhdl.lists.Iterator method)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Iterator __new__}@anchor{8ef}
@deffn {Method} __new__ (**kwargs)
@end deffn

@geindex __reduce__() (pyGHDL.libghdl.vhdl.lists.Iterator method)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Iterator __reduce__}@anchor{8f0}
@deffn {Method} __reduce__ ()

Helper for pickle.
@end deffn

@geindex _b_base_ (pyGHDL.libghdl.vhdl.lists.Iterator attribute)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Iterator _b_base_}@anchor{8f1}
@deffn {Attribute} _b_base_

the base object
@end deffn

@geindex _b_needsfree_ (pyGHDL.libghdl.vhdl.lists.Iterator attribute)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Iterator _b_needsfree_}@anchor{8f2}
@deffn {Attribute} _b_needsfree_

whether the object owns the memory or not
@end deffn

@geindex _objects (pyGHDL.libghdl.vhdl.lists.Iterator attribute)
@anchor{pyGHDL/pyGHDL libghdl vhdl lists pyGHDL libghdl vhdl lists Iterator _objects}@anchor{8f3}
@deffn {Attribute} _objects

internal objects tree (NEVER CHANGE THIS OBJECT!)
@end deffn
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl nodes,pyGHDL libghdl vhdl nodes_meta,pyGHDL libghdl vhdl lists,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes doc}@anchor{8f4}@anchor{pyGHDL/pyGHDL libghdl vhdl nodes module-pyGHDL libghdl vhdl nodes}@anchor{31}@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyghdl-libghdl-vhdl-nodes}@anchor{8f5}
@subsubsection @code{pyGHDL.libghdl.vhdl.nodes}


@geindex module; pyGHDL.libghdl.vhdl.nodes

`Variables'


@itemize -

@item 
@ref{816,,Null_Iir}

@item 
@ref{8f6,,Null_Iir_List}

@item 
@ref{8f7,,Iir_List_All}

@item 
@ref{8f8,,Null_Iir_Flist}

@item 
@ref{8f9,,Iir_Flist_Others}

@item 
@ref{8fa,,Iir_Flist_All}
@end itemize

`Functions'


@itemize -

@item 
@ref{8fb,,Get_Kind()}:
Get node kind.

@item 
@ref{8fc,,Get_Location()}:

@item 
@ref{8fd,,Get_First_Design_Unit()}:

@item 
@ref{8fe,,Set_First_Design_Unit()}:

@item 
@ref{8ff,,Get_Last_Design_Unit()}:

@item 
@ref{900,,Set_Last_Design_Unit()}:

@item 
@ref{901,,Get_Library_Declaration()}:

@item 
@ref{902,,Set_Library_Declaration()}:

@item 
@ref{903,,Get_File_Checksum()}:

@item 
@ref{904,,Set_File_Checksum()}:

@item 
@ref{905,,Get_Analysis_Time_Stamp()}:

@item 
@ref{906,,Set_Analysis_Time_Stamp()}:

@item 
@ref{907,,Get_Design_File_Source()}:

@item 
@ref{908,,Set_Design_File_Source()}:

@item 
@ref{909,,Get_Library()}:

@item 
@ref{90a,,Set_Library()}:

@item 
@ref{90b,,Get_File_Dependence_List()}:

@item 
@ref{90c,,Set_File_Dependence_List()}:

@item 
@ref{90d,,Get_Design_File_Filename()}:

@item 
@ref{90e,,Set_Design_File_Filename()}:

@item 
@ref{90f,,Get_Design_File_Directory()}:

@item 
@ref{910,,Set_Design_File_Directory()}:

@item 
@ref{911,,Get_Design_File()}:

@item 
@ref{912,,Set_Design_File()}:

@item 
@ref{913,,Get_Design_File_Chain()}:

@item 
@ref{914,,Set_Design_File_Chain()}:

@item 
@ref{915,,Get_Library_Directory()}:

@item 
@ref{916,,Set_Library_Directory()}:

@item 
@ref{917,,Get_Date()}:

@item 
@ref{918,,Set_Date()}:

@item 
@ref{919,,Get_Context_Items()}:

@item 
@ref{91a,,Set_Context_Items()}:

@item 
@ref{91b,,Get_Dependence_List()}:

@item 
@ref{91c,,Set_Dependence_List()}:

@item 
@ref{91d,,Get_Analysis_Checks_List()}:

@item 
@ref{91e,,Set_Analysis_Checks_List()}:

@item 
@ref{91f,,Get_Date_State()}:

@item 
@ref{920,,Set_Date_State()}:

@item 
@ref{921,,Get_Guarded_Target_State()}:

@item 
@ref{922,,Set_Guarded_Target_State()}:

@item 
@ref{923,,Get_Library_Unit()}:

@item 
@ref{924,,Set_Library_Unit()}:

@item 
@ref{925,,Get_Hash_Chain()}:

@item 
@ref{926,,Set_Hash_Chain()}:

@item 
@ref{927,,Get_Design_Unit_Source_Pos()}:

@item 
@ref{928,,Set_Design_Unit_Source_Pos()}:

@item 
@ref{929,,Get_Design_Unit_Source_Line()}:

@item 
@ref{92a,,Set_Design_Unit_Source_Line()}:

@item 
@ref{92b,,Get_Design_Unit_Source_Col()}:

@item 
@ref{92c,,Set_Design_Unit_Source_Col()}:

@item 
@ref{92d,,Get_Value()}:

@item 
@ref{92e,,Set_Value()}:

@item 
@ref{92f,,Get_Enum_Pos()}:

@item 
@ref{930,,Set_Enum_Pos()}:

@item 
@ref{931,,Get_Physical_Literal()}:

@item 
@ref{932,,Set_Physical_Literal()}:

@item 
@ref{933,,Get_Fp_Value()}:

@item 
@ref{934,,Set_Fp_Value()}:

@item 
@ref{935,,Get_Simple_Aggregate_List()}:

@item 
@ref{936,,Set_Simple_Aggregate_List()}:

@item 
@ref{937,,Get_String8_Id()}:

@item 
@ref{938,,Set_String8_Id()}:

@item 
@ref{939,,Get_String_Length()}:

@item 
@ref{93a,,Set_String_Length()}:

@item 
@ref{93b,,Get_Bit_String_Base()}:

@item 
@ref{93c,,Set_Bit_String_Base()}:

@item 
@ref{93d,,Get_Has_Signed()}:

@item 
@ref{93e,,Set_Has_Signed()}:

@item 
@ref{93f,,Get_Has_Sign()}:

@item 
@ref{940,,Set_Has_Sign()}:

@item 
@ref{941,,Get_Has_Length()}:

@item 
@ref{942,,Set_Has_Length()}:

@item 
@ref{943,,Get_Literal_Length()}:

@item 
@ref{944,,Set_Literal_Length()}:

@item 
@ref{945,,Get_Literal_Origin()}:

@item 
@ref{946,,Set_Literal_Origin()}:

@item 
@ref{947,,Get_Range_Origin()}:

@item 
@ref{948,,Set_Range_Origin()}:

@item 
@ref{949,,Get_Literal_Subtype()}:

@item 
@ref{94a,,Set_Literal_Subtype()}:

@item 
@ref{94b,,Get_Allocator_Subtype()}:

@item 
@ref{94c,,Set_Allocator_Subtype()}:

@item 
@ref{94d,,Get_Entity_Class()}:

@item 
@ref{94e,,Set_Entity_Class()}:

@item 
@ref{94f,,Get_Entity_Name_List()}:

@item 
@ref{950,,Set_Entity_Name_List()}:

@item 
@ref{951,,Get_Attribute_Designator()}:

@item 
@ref{952,,Set_Attribute_Designator()}:

@item 
@ref{953,,Get_Attribute_Specification_Chain()}:

@item 
@ref{954,,Set_Attribute_Specification_Chain()}:

@item 
@ref{955,,Get_Attribute_Specification()}:

@item 
@ref{956,,Set_Attribute_Specification()}:

@item 
@ref{957,,Get_Static_Attribute_Flag()}:

@item 
@ref{958,,Set_Static_Attribute_Flag()}:

@item 
@ref{959,,Get_Signal_List()}:

@item 
@ref{95a,,Set_Signal_List()}:

@item 
@ref{95b,,Get_Quantity_List()}:

@item 
@ref{95c,,Set_Quantity_List()}:

@item 
@ref{95d,,Get_Designated_Entity()}:

@item 
@ref{95e,,Set_Designated_Entity()}:

@item 
@ref{95f,,Get_Formal()}:

@item 
@ref{960,,Set_Formal()}:

@item 
@ref{961,,Get_Actual()}:

@item 
@ref{962,,Set_Actual()}:

@item 
@ref{963,,Get_Open_Actual()}:

@item 
@ref{964,,Set_Open_Actual()}:

@item 
@ref{965,,Get_Actual_Conversion()}:

@item 
@ref{966,,Set_Actual_Conversion()}:

@item 
@ref{967,,Get_Formal_Conversion()}:

@item 
@ref{968,,Set_Formal_Conversion()}:

@item 
@ref{969,,Get_Whole_Association_Flag()}:

@item 
@ref{96a,,Set_Whole_Association_Flag()}:

@item 
@ref{96b,,Get_Collapse_Signal_Flag()}:

@item 
@ref{96c,,Set_Collapse_Signal_Flag()}:

@item 
@ref{96d,,Get_Artificial_Flag()}:

@item 
@ref{96e,,Set_Artificial_Flag()}:

@item 
@ref{96f,,Get_Open_Flag()}:

@item 
@ref{970,,Set_Open_Flag()}:

@item 
@ref{971,,Get_After_Drivers_Flag()}:

@item 
@ref{972,,Set_After_Drivers_Flag()}:

@item 
@ref{973,,Get_We_Value()}:

@item 
@ref{974,,Set_We_Value()}:

@item 
@ref{975,,Get_Time()}:

@item 
@ref{976,,Set_Time()}:

@item 
@ref{977,,Get_Associated_Expr()}:

@item 
@ref{978,,Set_Associated_Expr()}:

@item 
@ref{979,,Get_Associated_Block()}:

@item 
@ref{97a,,Set_Associated_Block()}:

@item 
@ref{97b,,Get_Associated_Chain()}:

@item 
@ref{97c,,Set_Associated_Chain()}:

@item 
@ref{97d,,Get_Choice_Name()}:

@item 
@ref{97e,,Set_Choice_Name()}:

@item 
@ref{97f,,Get_Choice_Expression()}:

@item 
@ref{980,,Set_Choice_Expression()}:

@item 
@ref{981,,Get_Choice_Range()}:

@item 
@ref{982,,Set_Choice_Range()}:

@item 
@ref{983,,Get_Same_Alternative_Flag()}:

@item 
@ref{984,,Set_Same_Alternative_Flag()}:

@item 
@ref{985,,Get_Element_Type_Flag()}:

@item 
@ref{986,,Set_Element_Type_Flag()}:

@item 
@ref{987,,Get_Architecture()}:

@item 
@ref{988,,Set_Architecture()}:

@item 
@ref{989,,Get_Block_Specification()}:

@item 
@ref{98a,,Set_Block_Specification()}:

@item 
@ref{98b,,Get_Prev_Block_Configuration()}:

@item 
@ref{98c,,Set_Prev_Block_Configuration()}:

@item 
@ref{98d,,Get_Configuration_Item_Chain()}:

@item 
@ref{98e,,Set_Configuration_Item_Chain()}:

@item 
@ref{98f,,Get_Attribute_Value_Chain()}:

@item 
@ref{990,,Set_Attribute_Value_Chain()}:

@item 
@ref{991,,Get_Spec_Chain()}:

@item 
@ref{992,,Set_Spec_Chain()}:

@item 
@ref{993,,Get_Value_Chain()}:

@item 
@ref{994,,Set_Value_Chain()}:

@item 
@ref{995,,Get_Attribute_Value_Spec_Chain()}:

@item 
@ref{996,,Set_Attribute_Value_Spec_Chain()}:

@item 
@ref{997,,Get_Entity_Name()}:

@item 
@ref{998,,Set_Entity_Name()}:

@item 
@ref{999,,Get_Package()}:

@item 
@ref{99a,,Set_Package()}:

@item 
@ref{99b,,Get_Package_Body()}:

@item 
@ref{99c,,Set_Package_Body()}:

@item 
@ref{99d,,Get_Instance_Package_Body()}:

@item 
@ref{99e,,Set_Instance_Package_Body()}:

@item 
@ref{99f,,Get_Need_Body()}:

@item 
@ref{9a0,,Set_Need_Body()}:

@item 
@ref{9a1,,Get_Macro_Expanded_Flag()}:

@item 
@ref{9a2,,Set_Macro_Expanded_Flag()}:

@item 
@ref{9a3,,Get_Need_Instance_Bodies()}:

@item 
@ref{9a4,,Set_Need_Instance_Bodies()}:

@item 
@ref{9a5,,Get_Hierarchical_Name()}:

@item 
@ref{9a6,,Set_Hierarchical_Name()}:

@item 
@ref{9a7,,Get_Vunit_Item_Chain()}:

@item 
@ref{9a8,,Set_Vunit_Item_Chain()}:

@item 
@ref{9a9,,Get_Bound_Vunit_Chain()}:

@item 
@ref{9aa,,Set_Bound_Vunit_Chain()}:

@item 
@ref{9ab,,Get_Verification_Block_Configuration()}:

@item 
@ref{9ac,,Set_Verification_Block_Configuration()}:

@item 
@ref{9ad,,Get_Block_Configuration()}:

@item 
@ref{9ae,,Set_Block_Configuration()}:

@item 
@ref{9af,,Get_Concurrent_Statement_Chain()}:

@item 
@ref{9b0,,Set_Concurrent_Statement_Chain()}:

@item 
@ref{9b1,,Get_Chain()}:

@item 
@ref{9b2,,Set_Chain()}:

@item 
@ref{9b3,,Get_Port_Chain()}:

@item 
@ref{9b4,,Set_Port_Chain()}:

@item 
@ref{9b5,,Get_Generic_Chain()}:

@item 
@ref{9b6,,Set_Generic_Chain()}:

@item 
@ref{9b7,,Get_Type()}:

@item 
@ref{9b8,,Set_Type()}:

@item 
@ref{9b9,,Get_Subtype_Indication()}:

@item 
@ref{9ba,,Set_Subtype_Indication()}:

@item 
@ref{9bb,,Get_Discrete_Range()}:

@item 
@ref{9bc,,Set_Discrete_Range()}:

@item 
@ref{9bd,,Get_Type_Definition()}:

@item 
@ref{9be,,Set_Type_Definition()}:

@item 
@ref{9bf,,Get_Subtype_Definition()}:

@item 
@ref{9c0,,Set_Subtype_Definition()}:

@item 
@ref{9c1,,Get_Incomplete_Type_Declaration()}:

@item 
@ref{9c2,,Set_Incomplete_Type_Declaration()}:

@item 
@ref{9c3,,Get_Interface_Type_Subprograms()}:

@item 
@ref{9c4,,Set_Interface_Type_Subprograms()}:

@item 
@ref{9c5,,Get_Interface_Type_Definition()}:

@item 
@ref{9c6,,Set_Interface_Type_Definition()}:

@item 
@ref{9c7,,Get_Nature_Definition()}:

@item 
@ref{9c8,,Set_Nature_Definition()}:

@item 
@ref{9c9,,Get_Nature()}:

@item 
@ref{9ca,,Set_Nature()}:

@item 
@ref{9cb,,Get_Subnature_Indication()}:

@item 
@ref{9cc,,Set_Subnature_Indication()}:

@item 
@ref{9cd,,Get_Reference_Terminal_Flag()}:

@item 
@ref{9ce,,Set_Reference_Terminal_Flag()}:

@item 
@ref{9cf,,Get_Mode()}:

@item 
@ref{9d0,,Set_Mode()}:

@item 
@ref{9d1,,Get_Guarded_Signal_Flag()}:

@item 
@ref{9d2,,Set_Guarded_Signal_Flag()}:

@item 
@ref{9d3,,Get_Signal_Kind()}:

@item 
@ref{9d4,,Set_Signal_Kind()}:

@item 
@ref{9d5,,Get_Base_Name()}:

@item 
@ref{9d6,,Set_Base_Name()}:

@item 
@ref{9d7,,Get_Interface_Declaration_Chain()}:

@item 
@ref{9d8,,Set_Interface_Declaration_Chain()}:

@item 
@ref{9d9,,Get_Default_Subprogram()}:

@item 
@ref{9da,,Set_Default_Subprogram()}:

@item 
@ref{9db,,Get_Associated_Subprogram()}:

@item 
@ref{9dc,,Set_Associated_Subprogram()}:

@item 
@ref{9dd,,Get_Subprogram_Specification()}:

@item 
@ref{9de,,Set_Subprogram_Specification()}:

@item 
@ref{9df,,Get_Sequential_Statement_Chain()}:

@item 
@ref{9e0,,Set_Sequential_Statement_Chain()}:

@item 
@ref{9e1,,Get_Simultaneous_Statement_Chain()}:

@item 
@ref{9e2,,Set_Simultaneous_Statement_Chain()}:

@item 
@ref{9e3,,Get_Subprogram_Body()}:

@item 
@ref{9e4,,Set_Subprogram_Body()}:

@item 
@ref{9e5,,Get_Overload_Number()}:

@item 
@ref{9e6,,Set_Overload_Number()}:

@item 
@ref{9e7,,Get_Subprogram_Depth()}:

@item 
@ref{9e8,,Set_Subprogram_Depth()}:

@item 
@ref{9e9,,Get_Subprogram_Hash()}:

@item 
@ref{9ea,,Set_Subprogram_Hash()}:

@item 
@ref{9eb,,Get_Impure_Depth()}:

@item 
@ref{9ec,,Set_Impure_Depth()}:

@item 
@ref{9ed,,Get_Return_Type()}:

@item 
@ref{9ee,,Set_Return_Type()}:

@item 
@ref{9ef,,Get_Implicit_Definition()}:

@item 
@ref{9f0,,Set_Implicit_Definition()}:

@item 
@ref{9f1,,Get_Uninstantiated_Subprogram_Name()}:

@item 
@ref{9f2,,Set_Uninstantiated_Subprogram_Name()}:

@item 
@ref{9f3,,Get_Default_Value()}:

@item 
@ref{9f4,,Set_Default_Value()}:

@item 
@ref{9f5,,Get_Deferred_Declaration()}:

@item 
@ref{9f6,,Set_Deferred_Declaration()}:

@item 
@ref{9f7,,Get_Deferred_Declaration_Flag()}:

@item 
@ref{9f8,,Set_Deferred_Declaration_Flag()}:

@item 
@ref{9f9,,Get_Shared_Flag()}:

@item 
@ref{9fa,,Set_Shared_Flag()}:

@item 
@ref{9fb,,Get_Design_Unit()}:

@item 
@ref{9fc,,Set_Design_Unit()}:

@item 
@ref{9fd,,Get_Block_Statement()}:

@item 
@ref{9fe,,Set_Block_Statement()}:

@item 
@ref{9ff,,Get_Signal_Driver()}:

@item 
@ref{a00,,Set_Signal_Driver()}:

@item 
@ref{a01,,Get_Declaration_Chain()}:

@item 
@ref{a02,,Set_Declaration_Chain()}:

@item 
@ref{a03,,Get_File_Logical_Name()}:

@item 
@ref{a04,,Set_File_Logical_Name()}:

@item 
@ref{a05,,Get_File_Open_Kind()}:

@item 
@ref{a06,,Set_File_Open_Kind()}:

@item 
@ref{a07,,Get_Element_Position()}:

@item 
@ref{a08,,Set_Element_Position()}:

@item 
@ref{a09,,Get_Use_Clause_Chain()}:

@item 
@ref{a0a,,Set_Use_Clause_Chain()}:

@item 
@ref{a0b,,Get_Context_Reference_Chain()}:

@item 
@ref{a0c,,Set_Context_Reference_Chain()}:

@item 
@ref{a0d,,Get_Inherit_Spec_Chain()}:

@item 
@ref{a0e,,Set_Inherit_Spec_Chain()}:

@item 
@ref{a0f,,Get_Selected_Name()}:

@item 
@ref{a10,,Set_Selected_Name()}:

@item 
@ref{a11,,Get_Type_Declarator()}:

@item 
@ref{a12,,Set_Type_Declarator()}:

@item 
@ref{a13,,Get_Complete_Type_Definition()}:

@item 
@ref{a14,,Set_Complete_Type_Definition()}:

@item 
@ref{a15,,Get_Incomplete_Type_Ref_Chain()}:

@item 
@ref{a16,,Set_Incomplete_Type_Ref_Chain()}:

@item 
@ref{a17,,Get_Associated_Type()}:

@item 
@ref{a18,,Set_Associated_Type()}:

@item 
@ref{a19,,Get_Enumeration_Literal_List()}:

@item 
@ref{a1a,,Set_Enumeration_Literal_List()}:

@item 
@ref{a1b,,Get_Entity_Class_Entry_Chain()}:

@item 
@ref{a1c,,Set_Entity_Class_Entry_Chain()}:

@item 
@ref{a1d,,Get_Group_Constituent_List()}:

@item 
@ref{a1e,,Set_Group_Constituent_List()}:

@item 
@ref{a1f,,Get_Unit_Chain()}:

@item 
@ref{a20,,Set_Unit_Chain()}:

@item 
@ref{a21,,Get_Primary_Unit()}:

@item 
@ref{a22,,Set_Primary_Unit()}:

@item 
@ref{a23,,Get_Identifier()}:

@item 
@ref{a24,,Set_Identifier()}:

@item 
@ref{a25,,Get_Label()}:

@item 
@ref{a26,,Set_Label()}:

@item 
@ref{a27,,Get_Return_Identifier()}:

@item 
@ref{a28,,Set_Return_Identifier()}:

@item 
@ref{a29,,Get_Visible_Flag()}:

@item 
@ref{a2a,,Set_Visible_Flag()}:

@item 
@ref{a2b,,Get_Range_Constraint()}:

@item 
@ref{a2c,,Set_Range_Constraint()}:

@item 
@ref{a2d,,Get_Direction()}:

@item 
@ref{a2e,,Set_Direction()}:

@item 
@ref{a2f,,Get_Left_Limit()}:

@item 
@ref{a30,,Set_Left_Limit()}:

@item 
@ref{a31,,Get_Right_Limit()}:

@item 
@ref{a32,,Set_Right_Limit()}:

@item 
@ref{a33,,Get_Left_Limit_Expr()}:

@item 
@ref{a34,,Set_Left_Limit_Expr()}:

@item 
@ref{a35,,Get_Right_Limit_Expr()}:

@item 
@ref{a36,,Set_Right_Limit_Expr()}:

@item 
@ref{a37,,Get_Parent_Type()}:

@item 
@ref{a38,,Set_Parent_Type()}:

@item 
@ref{a39,,Get_Simple_Nature()}:

@item 
@ref{a3a,,Set_Simple_Nature()}:

@item 
@ref{a3b,,Get_Base_Nature()}:

@item 
@ref{a3c,,Set_Base_Nature()}:

@item 
@ref{a3d,,Get_Resolution_Indication()}:

@item 
@ref{a3e,,Set_Resolution_Indication()}:

@item 
@ref{a3f,,Get_Record_Element_Resolution_Chain()}:

@item 
@ref{a40,,Set_Record_Element_Resolution_Chain()}:

@item 
@ref{a41,,Get_Tolerance()}:

@item 
@ref{a42,,Set_Tolerance()}:

@item 
@ref{a43,,Get_Plus_Terminal_Name()}:

@item 
@ref{a44,,Set_Plus_Terminal_Name()}:

@item 
@ref{a45,,Get_Minus_Terminal_Name()}:

@item 
@ref{a46,,Set_Minus_Terminal_Name()}:

@item 
@ref{a47,,Get_Plus_Terminal()}:

@item 
@ref{a48,,Set_Plus_Terminal()}:

@item 
@ref{a49,,Get_Minus_Terminal()}:

@item 
@ref{a4a,,Set_Minus_Terminal()}:

@item 
@ref{a4b,,Get_Magnitude_Expression()}:

@item 
@ref{a4c,,Set_Magnitude_Expression()}:

@item 
@ref{a4d,,Get_Phase_Expression()}:

@item 
@ref{a4e,,Set_Phase_Expression()}:

@item 
@ref{a4f,,Get_Power_Expression()}:

@item 
@ref{a50,,Set_Power_Expression()}:

@item 
@ref{a51,,Get_Simultaneous_Left()}:

@item 
@ref{a52,,Set_Simultaneous_Left()}:

@item 
@ref{a53,,Get_Simultaneous_Right()}:

@item 
@ref{a54,,Set_Simultaneous_Right()}:

@item 
@ref{a55,,Get_Text_File_Flag()}:

@item 
@ref{a56,,Set_Text_File_Flag()}:

@item 
@ref{a57,,Get_Only_Characters_Flag()}:

@item 
@ref{a58,,Set_Only_Characters_Flag()}:

@item 
@ref{a59,,Get_Is_Character_Type()}:

@item 
@ref{a5a,,Set_Is_Character_Type()}:

@item 
@ref{a5b,,Get_Nature_Staticness()}:

@item 
@ref{a5c,,Set_Nature_Staticness()}:

@item 
@ref{a5d,,Get_Type_Staticness()}:

@item 
@ref{a5e,,Set_Type_Staticness()}:

@item 
@ref{a5f,,Get_Constraint_State()}:

@item 
@ref{a60,,Set_Constraint_State()}:

@item 
@ref{a61,,Get_Index_Subtype_List()}:

@item 
@ref{a62,,Set_Index_Subtype_List()}:

@item 
@ref{a63,,Get_Index_Subtype_Definition_List()}:

@item 
@ref{a64,,Set_Index_Subtype_Definition_List()}:

@item 
@ref{a65,,Get_Element_Subtype_Indication()}:

@item 
@ref{a66,,Set_Element_Subtype_Indication()}:

@item 
@ref{a67,,Get_Element_Subtype()}:

@item 
@ref{a68,,Set_Element_Subtype()}:

@item 
@ref{a69,,Get_Element_Subnature_Indication()}:

@item 
@ref{a6a,,Set_Element_Subnature_Indication()}:

@item 
@ref{a6b,,Get_Element_Subnature()}:

@item 
@ref{a6c,,Set_Element_Subnature()}:

@item 
@ref{a6d,,Get_Index_Constraint_List()}:

@item 
@ref{a6e,,Set_Index_Constraint_List()}:

@item 
@ref{a6f,,Get_Array_Element_Constraint()}:

@item 
@ref{a70,,Set_Array_Element_Constraint()}:

@item 
@ref{a71,,Get_Has_Array_Constraint_Flag()}:

@item 
@ref{a72,,Set_Has_Array_Constraint_Flag()}:

@item 
@ref{a73,,Get_Has_Element_Constraint_Flag()}:

@item 
@ref{a74,,Set_Has_Element_Constraint_Flag()}:

@item 
@ref{a75,,Get_Elements_Declaration_List()}:

@item 
@ref{a76,,Set_Elements_Declaration_List()}:

@item 
@ref{a77,,Get_Owned_Elements_Chain()}:

@item 
@ref{a78,,Set_Owned_Elements_Chain()}:

@item 
@ref{a79,,Get_Designated_Type()}:

@item 
@ref{a7a,,Set_Designated_Type()}:

@item 
@ref{a7b,,Get_Designated_Subtype_Indication()}:

@item 
@ref{a7c,,Set_Designated_Subtype_Indication()}:

@item 
@ref{a7d,,Get_Index_List()}:

@item 
@ref{a7e,,Set_Index_List()}:

@item 
@ref{a7f,,Get_Reference()}:

@item 
@ref{a80,,Set_Reference()}:

@item 
@ref{a81,,Get_Nature_Declarator()}:

@item 
@ref{a82,,Set_Nature_Declarator()}:

@item 
@ref{a83,,Get_Across_Type_Mark()}:

@item 
@ref{a84,,Set_Across_Type_Mark()}:

@item 
@ref{a85,,Get_Through_Type_Mark()}:

@item 
@ref{a86,,Set_Through_Type_Mark()}:

@item 
@ref{a87,,Get_Across_Type_Definition()}:

@item 
@ref{a88,,Set_Across_Type_Definition()}:

@item 
@ref{a89,,Get_Through_Type_Definition()}:

@item 
@ref{a8a,,Set_Through_Type_Definition()}:

@item 
@ref{a8b,,Get_Across_Type()}:

@item 
@ref{a8c,,Set_Across_Type()}:

@item 
@ref{a8d,,Get_Through_Type()}:

@item 
@ref{a8e,,Set_Through_Type()}:

@item 
@ref{a8f,,Get_Target()}:

@item 
@ref{a90,,Set_Target()}:

@item 
@ref{a91,,Get_Waveform_Chain()}:

@item 
@ref{a92,,Set_Waveform_Chain()}:

@item 
@ref{a93,,Get_Guard()}:

@item 
@ref{a94,,Set_Guard()}:

@item 
@ref{a95,,Get_Delay_Mechanism()}:

@item 
@ref{a96,,Set_Delay_Mechanism()}:

@item 
@ref{a97,,Get_Reject_Time_Expression()}:

@item 
@ref{a98,,Set_Reject_Time_Expression()}:

@item 
@ref{a99,,Get_Force_Mode()}:

@item 
@ref{a9a,,Set_Force_Mode()}:

@item 
@ref{a9b,,Get_Has_Force_Mode()}:

@item 
@ref{a9c,,Set_Has_Force_Mode()}:

@item 
@ref{a9d,,Get_Sensitivity_List()}:

@item 
@ref{a9e,,Set_Sensitivity_List()}:

@item 
@ref{a9f,,Get_Process_Origin()}:

@item 
@ref{aa0,,Set_Process_Origin()}:

@item 
@ref{aa1,,Get_Package_Origin()}:

@item 
@ref{aa2,,Set_Package_Origin()}:

@item 
@ref{aa3,,Get_Condition_Clause()}:

@item 
@ref{aa4,,Set_Condition_Clause()}:

@item 
@ref{aa5,,Get_Break_Element()}:

@item 
@ref{aa6,,Set_Break_Element()}:

@item 
@ref{aa7,,Get_Selector_Quantity()}:

@item 
@ref{aa8,,Set_Selector_Quantity()}:

@item 
@ref{aa9,,Get_Break_Quantity()}:

@item 
@ref{aaa,,Set_Break_Quantity()}:

@item 
@ref{aab,,Get_Timeout_Clause()}:

@item 
@ref{aac,,Set_Timeout_Clause()}:

@item 
@ref{aad,,Get_Postponed_Flag()}:

@item 
@ref{aae,,Set_Postponed_Flag()}:

@item 
@ref{aaf,,Get_Callees_List()}:

@item 
@ref{ab0,,Set_Callees_List()}:

@item 
@ref{ab1,,Get_Passive_Flag()}:

@item 
@ref{ab2,,Set_Passive_Flag()}:

@item 
@ref{ab3,,Get_Resolution_Function_Flag()}:

@item 
@ref{ab4,,Set_Resolution_Function_Flag()}:

@item 
@ref{ab5,,Get_Wait_State()}:

@item 
@ref{ab6,,Set_Wait_State()}:

@item 
@ref{ab7,,Get_All_Sensitized_State()}:

@item 
@ref{ab8,,Set_All_Sensitized_State()}:

@item 
@ref{ab9,,Get_Seen_Flag()}:

@item 
@ref{aba,,Set_Seen_Flag()}:

@item 
@ref{abb,,Get_Pure_Flag()}:

@item 
@ref{abc,,Set_Pure_Flag()}:

@item 
@ref{abd,,Get_Foreign_Flag()}:

@item 
@ref{abe,,Set_Foreign_Flag()}:

@item 
@ref{abf,,Get_Resolved_Flag()}:

@item 
@ref{ac0,,Set_Resolved_Flag()}:

@item 
@ref{ac1,,Get_Signal_Type_Flag()}:

@item 
@ref{ac2,,Set_Signal_Type_Flag()}:

@item 
@ref{ac3,,Get_Has_Signal_Flag()}:

@item 
@ref{ac4,,Set_Has_Signal_Flag()}:

@item 
@ref{ac5,,Get_Purity_State()}:

@item 
@ref{ac6,,Set_Purity_State()}:

@item 
@ref{ac7,,Get_Elab_Flag()}:

@item 
@ref{ac8,,Set_Elab_Flag()}:

@item 
@ref{ac9,,Get_Vendor_Library_Flag()}:

@item 
@ref{aca,,Set_Vendor_Library_Flag()}:

@item 
@ref{acb,,Get_Configuration_Mark_Flag()}:

@item 
@ref{acc,,Set_Configuration_Mark_Flag()}:

@item 
@ref{acd,,Get_Configuration_Done_Flag()}:

@item 
@ref{ace,,Set_Configuration_Done_Flag()}:

@item 
@ref{acf,,Get_Index_Constraint_Flag()}:

@item 
@ref{ad0,,Set_Index_Constraint_Flag()}:

@item 
@ref{ad1,,Get_Hide_Implicit_Flag()}:

@item 
@ref{ad2,,Set_Hide_Implicit_Flag()}:

@item 
@ref{ad3,,Get_Assertion_Condition()}:

@item 
@ref{ad4,,Set_Assertion_Condition()}:

@item 
@ref{ad5,,Get_Report_Expression()}:

@item 
@ref{ad6,,Set_Report_Expression()}:

@item 
@ref{ad7,,Get_Severity_Expression()}:

@item 
@ref{ad8,,Set_Severity_Expression()}:

@item 
@ref{ad9,,Get_Instantiated_Unit()}:

@item 
@ref{ada,,Set_Instantiated_Unit()}:

@item 
@ref{adb,,Get_Instantiated_Header()}:

@item 
@ref{adc,,Set_Instantiated_Header()}:

@item 
@ref{add,,Get_Generic_Map_Aspect_Chain()}:

@item 
@ref{ade,,Set_Generic_Map_Aspect_Chain()}:

@item 
@ref{adf,,Get_Port_Map_Aspect_Chain()}:

@item 
@ref{ae0,,Set_Port_Map_Aspect_Chain()}:

@item 
@ref{ae1,,Get_Configuration_Name()}:

@item 
@ref{ae2,,Set_Configuration_Name()}:

@item 
@ref{ae3,,Get_Component_Configuration()}:

@item 
@ref{ae4,,Set_Component_Configuration()}:

@item 
@ref{ae5,,Get_Configuration_Specification()}:

@item 
@ref{ae6,,Set_Configuration_Specification()}:

@item 
@ref{ae7,,Get_Default_Binding_Indication()}:

@item 
@ref{ae8,,Set_Default_Binding_Indication()}:

@item 
@ref{ae9,,Get_Default_Configuration_Declaration()}:

@item 
@ref{aea,,Set_Default_Configuration_Declaration()}:

@item 
@ref{aeb,,Get_Expression()}:

@item 
@ref{aec,,Set_Expression()}:

@item 
@ref{aed,,Get_Conditional_Expression_Chain()}:

@item 
@ref{aee,,Set_Conditional_Expression_Chain()}:

@item 
@ref{aef,,Get_Allocator_Designated_Type()}:

@item 
@ref{af0,,Set_Allocator_Designated_Type()}:

@item 
@ref{af1,,Get_Selected_Waveform_Chain()}:

@item 
@ref{af2,,Set_Selected_Waveform_Chain()}:

@item 
@ref{af3,,Get_Conditional_Waveform_Chain()}:

@item 
@ref{af4,,Set_Conditional_Waveform_Chain()}:

@item 
@ref{af5,,Get_Guard_Expression()}:

@item 
@ref{af6,,Set_Guard_Expression()}:

@item 
@ref{af7,,Get_Guard_Decl()}:

@item 
@ref{af8,,Set_Guard_Decl()}:

@item 
@ref{af9,,Get_Guard_Sensitivity_List()}:

@item 
@ref{afa,,Set_Guard_Sensitivity_List()}:

@item 
@ref{afb,,Get_Attribute_Implicit_Chain()}:

@item 
@ref{afc,,Set_Attribute_Implicit_Chain()}:

@item 
@ref{afd,,Get_Block_Block_Configuration()}:

@item 
@ref{afe,,Set_Block_Block_Configuration()}:

@item 
@ref{aff,,Get_Package_Header()}:

@item 
@ref{b00,,Set_Package_Header()}:

@item 
@ref{b01,,Get_Block_Header()}:

@item 
@ref{b02,,Set_Block_Header()}:

@item 
@ref{b03,,Get_Uninstantiated_Package_Name()}:

@item 
@ref{b04,,Set_Uninstantiated_Package_Name()}:

@item 
@ref{b05,,Get_Uninstantiated_Package_Decl()}:

@item 
@ref{b06,,Set_Uninstantiated_Package_Decl()}:

@item 
@ref{b07,,Get_Associated_Package()}:

@item 
@ref{b08,,Set_Associated_Package()}:

@item 
@ref{b09,,Get_Instance_Source_File()}:

@item 
@ref{b0a,,Set_Instance_Source_File()}:

@item 
@ref{b0b,,Get_Generate_Block_Configuration()}:

@item 
@ref{b0c,,Set_Generate_Block_Configuration()}:

@item 
@ref{b0d,,Get_Generate_Statement_Body()}:

@item 
@ref{b0e,,Set_Generate_Statement_Body()}:

@item 
@ref{b0f,,Get_Alternative_Label()}:

@item 
@ref{b10,,Set_Alternative_Label()}:

@item 
@ref{b11,,Get_Generate_Else_Clause()}:

@item 
@ref{b12,,Set_Generate_Else_Clause()}:

@item 
@ref{b13,,Get_Condition()}:

@item 
@ref{b14,,Set_Condition()}:

@item 
@ref{b15,,Get_Else_Clause()}:

@item 
@ref{b16,,Set_Else_Clause()}:

@item 
@ref{b17,,Get_Parameter_Specification()}:

@item 
@ref{b18,,Set_Parameter_Specification()}:

@item 
@ref{b19,,Get_Parent()}:

@item 
@ref{b1a,,Set_Parent()}:

@item 
@ref{b1b,,Get_Loop_Label()}:

@item 
@ref{b1c,,Set_Loop_Label()}:

@item 
@ref{b1d,,Get_Exit_Flag()}:

@item 
@ref{b1e,,Set_Exit_Flag()}:

@item 
@ref{b1f,,Get_Next_Flag()}:

@item 
@ref{b20,,Set_Next_Flag()}:

@item 
@ref{b21,,Get_Component_Name()}:

@item 
@ref{b22,,Set_Component_Name()}:

@item 
@ref{b23,,Get_Instantiation_List()}:

@item 
@ref{b24,,Set_Instantiation_List()}:

@item 
@ref{b25,,Get_Entity_Aspect()}:

@item 
@ref{b26,,Set_Entity_Aspect()}:

@item 
@ref{b27,,Get_Default_Entity_Aspect()}:

@item 
@ref{b28,,Set_Default_Entity_Aspect()}:

@item 
@ref{b29,,Get_Binding_Indication()}:

@item 
@ref{b2a,,Set_Binding_Indication()}:

@item 
@ref{b2b,,Get_Named_Entity()}:

@item 
@ref{b2c,,Set_Named_Entity()}:

@item 
@ref{b2d,,Get_Referenced_Name()}:

@item 
@ref{b2e,,Set_Referenced_Name()}:

@item 
@ref{b2f,,Get_Expr_Staticness()}:

@item 
@ref{b30,,Set_Expr_Staticness()}:

@item 
@ref{b31,,Get_Scalar_Size()}:

@item 
@ref{b32,,Set_Scalar_Size()}:

@item 
@ref{b33,,Get_Error_Origin()}:

@item 
@ref{b34,,Set_Error_Origin()}:

@item 
@ref{b35,,Get_Operand()}:

@item 
@ref{b36,,Set_Operand()}:

@item 
@ref{b37,,Get_Left()}:

@item 
@ref{b38,,Set_Left()}:

@item 
@ref{b39,,Get_Right()}:

@item 
@ref{b3a,,Set_Right()}:

@item 
@ref{b3b,,Get_Unit_Name()}:

@item 
@ref{b3c,,Set_Unit_Name()}:

@item 
@ref{b3d,,Get_Name()}:

@item 
@ref{b3e,,Set_Name()}:

@item 
@ref{b3f,,Get_Group_Template_Name()}:

@item 
@ref{b40,,Set_Group_Template_Name()}:

@item 
@ref{b41,,Get_Name_Staticness()}:

@item 
@ref{b42,,Set_Name_Staticness()}:

@item 
@ref{b43,,Get_Prefix()}:

@item 
@ref{b44,,Set_Prefix()}:

@item 
@ref{b45,,Get_Signature_Prefix()}:

@item 
@ref{b46,,Set_Signature_Prefix()}:

@item 
@ref{b47,,Get_External_Pathname()}:

@item 
@ref{b48,,Set_External_Pathname()}:

@item 
@ref{b49,,Get_Pathname_Suffix()}:

@item 
@ref{b4a,,Set_Pathname_Suffix()}:

@item 
@ref{b4b,,Get_Pathname_Expression()}:

@item 
@ref{b4c,,Set_Pathname_Expression()}:

@item 
@ref{b4d,,Get_In_Formal_Flag()}:

@item 
@ref{b4e,,Set_In_Formal_Flag()}:

@item 
@ref{b4f,,Get_Inertial_Flag()}:

@item 
@ref{b50,,Set_Inertial_Flag()}:

@item 
@ref{b51,,Get_Slice_Subtype()}:

@item 
@ref{b52,,Set_Slice_Subtype()}:

@item 
@ref{b53,,Get_Suffix()}:

@item 
@ref{b54,,Set_Suffix()}:

@item 
@ref{b55,,Get_Index_Subtype()}:

@item 
@ref{b56,,Set_Index_Subtype()}:

@item 
@ref{b57,,Get_Parameter()}:

@item 
@ref{b58,,Set_Parameter()}:

@item 
@ref{b59,,Get_Parameter_2()}:

@item 
@ref{b5a,,Set_Parameter_2()}:

@item 
@ref{b5b,,Get_Parameter_3()}:

@item 
@ref{b5c,,Set_Parameter_3()}:

@item 
@ref{b5d,,Get_Parameter_4()}:

@item 
@ref{b5e,,Set_Parameter_4()}:

@item 
@ref{b5f,,Get_Attr_Chain()}:

@item 
@ref{b60,,Set_Attr_Chain()}:

@item 
@ref{b61,,Get_Attribute_Implicit_Declaration()}:

@item 
@ref{b62,,Set_Attribute_Implicit_Declaration()}:

@item 
@ref{b63,,Get_Actual_Type()}:

@item 
@ref{b64,,Set_Actual_Type()}:

@item 
@ref{b65,,Get_Actual_Type_Definition()}:

@item 
@ref{b66,,Set_Actual_Type_Definition()}:

@item 
@ref{b67,,Get_Association_Chain()}:

@item 
@ref{b68,,Set_Association_Chain()}:

@item 
@ref{b69,,Get_Individual_Association_Chain()}:

@item 
@ref{b6a,,Set_Individual_Association_Chain()}:

@item 
@ref{b6b,,Get_Subprogram_Association_Chain()}:

@item 
@ref{b6c,,Set_Subprogram_Association_Chain()}:

@item 
@ref{b6d,,Get_Aggregate_Info()}:

@item 
@ref{b6e,,Set_Aggregate_Info()}:

@item 
@ref{b6f,,Get_Sub_Aggregate_Info()}:

@item 
@ref{b70,,Set_Sub_Aggregate_Info()}:

@item 
@ref{b71,,Get_Aggr_Dynamic_Flag()}:

@item 
@ref{b72,,Set_Aggr_Dynamic_Flag()}:

@item 
@ref{b73,,Get_Aggr_Min_Length()}:

@item 
@ref{b74,,Set_Aggr_Min_Length()}:

@item 
@ref{b75,,Get_Aggr_Low_Limit()}:

@item 
@ref{b76,,Set_Aggr_Low_Limit()}:

@item 
@ref{b77,,Get_Aggr_High_Limit()}:

@item 
@ref{b78,,Set_Aggr_High_Limit()}:

@item 
@ref{b79,,Get_Aggr_Others_Flag()}:

@item 
@ref{b7a,,Set_Aggr_Others_Flag()}:

@item 
@ref{b7b,,Get_Aggr_Named_Flag()}:

@item 
@ref{b7c,,Set_Aggr_Named_Flag()}:

@item 
@ref{b7d,,Get_Aggregate_Expand_Flag()}:

@item 
@ref{b7e,,Set_Aggregate_Expand_Flag()}:

@item 
@ref{b7f,,Get_Determined_Aggregate_Flag()}:

@item 
@ref{b80,,Set_Determined_Aggregate_Flag()}:

@item 
@ref{b81,,Get_Association_Choices_Chain()}:

@item 
@ref{b82,,Set_Association_Choices_Chain()}:

@item 
@ref{b83,,Get_Case_Statement_Alternative_Chain()}:

@item 
@ref{b84,,Set_Case_Statement_Alternative_Chain()}:

@item 
@ref{b85,,Get_Matching_Flag()}:

@item 
@ref{b86,,Set_Matching_Flag()}:

@item 
@ref{b87,,Get_Choice_Staticness()}:

@item 
@ref{b88,,Set_Choice_Staticness()}:

@item 
@ref{b89,,Get_Procedure_Call()}:

@item 
@ref{b8a,,Set_Procedure_Call()}:

@item 
@ref{b8b,,Get_Implementation()}:

@item 
@ref{b8c,,Set_Implementation()}:

@item 
@ref{b8d,,Get_Parameter_Association_Chain()}:

@item 
@ref{b8e,,Set_Parameter_Association_Chain()}:

@item 
@ref{b8f,,Get_Method_Object()}:

@item 
@ref{b90,,Set_Method_Object()}:

@item 
@ref{b91,,Get_Subtype_Type_Mark()}:

@item 
@ref{b92,,Set_Subtype_Type_Mark()}:

@item 
@ref{b93,,Get_Subnature_Nature_Mark()}:

@item 
@ref{b94,,Set_Subnature_Nature_Mark()}:

@item 
@ref{b95,,Get_Type_Conversion_Subtype()}:

@item 
@ref{b96,,Set_Type_Conversion_Subtype()}:

@item 
@ref{b97,,Get_Type_Mark()}:

@item 
@ref{b98,,Set_Type_Mark()}:

@item 
@ref{b99,,Get_File_Type_Mark()}:

@item 
@ref{b9a,,Set_File_Type_Mark()}:

@item 
@ref{b9b,,Get_Return_Type_Mark()}:

@item 
@ref{b9c,,Set_Return_Type_Mark()}:

@item 
@ref{b9d,,Get_Has_Disconnect_Flag()}:

@item 
@ref{b9e,,Set_Has_Disconnect_Flag()}:

@item 
@ref{b9f,,Get_Has_Active_Flag()}:

@item 
@ref{ba0,,Set_Has_Active_Flag()}:

@item 
@ref{ba1,,Get_Is_Within_Flag()}:

@item 
@ref{ba2,,Set_Is_Within_Flag()}:

@item 
@ref{ba3,,Get_Type_Marks_List()}:

@item 
@ref{ba4,,Set_Type_Marks_List()}:

@item 
@ref{ba5,,Get_Implicit_Alias_Flag()}:

@item 
@ref{ba6,,Set_Implicit_Alias_Flag()}:

@item 
@ref{ba7,,Get_Alias_Signature()}:

@item 
@ref{ba8,,Set_Alias_Signature()}:

@item 
@ref{ba9,,Get_Attribute_Signature()}:

@item 
@ref{baa,,Set_Attribute_Signature()}:

@item 
@ref{bab,,Get_Overload_List()}:

@item 
@ref{bac,,Set_Overload_List()}:

@item 
@ref{bad,,Get_Simple_Name_Identifier()}:

@item 
@ref{bae,,Set_Simple_Name_Identifier()}:

@item 
@ref{baf,,Get_Simple_Name_Subtype()}:

@item 
@ref{bb0,,Set_Simple_Name_Subtype()}:

@item 
@ref{bb1,,Get_Protected_Type_Body()}:

@item 
@ref{bb2,,Set_Protected_Type_Body()}:

@item 
@ref{bb3,,Get_Protected_Type_Declaration()}:

@item 
@ref{bb4,,Set_Protected_Type_Declaration()}:

@item 
@ref{bb5,,Get_Use_Flag()}:

@item 
@ref{bb6,,Set_Use_Flag()}:

@item 
@ref{bb7,,Get_Elaborated_Flag()}:

@item 
@ref{bb8,,Set_Elaborated_Flag()}:

@item 
@ref{bb9,,Get_End_Has_Reserved_Id()}:

@item 
@ref{bba,,Set_End_Has_Reserved_Id()}:

@item 
@ref{bbb,,Get_End_Has_Identifier()}:

@item 
@ref{bbc,,Set_End_Has_Identifier()}:

@item 
@ref{bbd,,Get_End_Has_Postponed()}:

@item 
@ref{bbe,,Set_End_Has_Postponed()}:

@item 
@ref{bbf,,Get_Has_Label()}:

@item 
@ref{bc0,,Set_Has_Label()}:

@item 
@ref{bc1,,Get_Has_Begin()}:

@item 
@ref{bc2,,Set_Has_Begin()}:

@item 
@ref{bc3,,Get_Has_End()}:

@item 
@ref{bc4,,Set_Has_End()}:

@item 
@ref{bc5,,Get_Has_Is()}:

@item 
@ref{bc6,,Set_Has_Is()}:

@item 
@ref{bc7,,Get_Has_Pure()}:

@item 
@ref{bc8,,Set_Has_Pure()}:

@item 
@ref{bc9,,Get_Has_Body()}:

@item 
@ref{bca,,Set_Has_Body()}:

@item 
@ref{bcb,,Get_Has_Parameter()}:

@item 
@ref{bcc,,Set_Has_Parameter()}:

@item 
@ref{bcd,,Get_Has_Component()}:

@item 
@ref{bce,,Set_Has_Component()}:

@item 
@ref{bcf,,Get_Has_Identifier_List()}:

@item 
@ref{bd0,,Set_Has_Identifier_List()}:

@item 
@ref{bd1,,Get_Has_Mode()}:

@item 
@ref{bd2,,Set_Has_Mode()}:

@item 
@ref{bd3,,Get_Has_Class()}:

@item 
@ref{bd4,,Set_Has_Class()}:

@item 
@ref{bd5,,Get_Has_Delay_Mechanism()}:

@item 
@ref{bd6,,Set_Has_Delay_Mechanism()}:

@item 
@ref{bd7,,Get_Suspend_Flag()}:

@item 
@ref{bd8,,Set_Suspend_Flag()}:

@item 
@ref{bd9,,Get_Stop_Flag()}:

@item 
@ref{bda,,Set_Stop_Flag()}:

@item 
@ref{bdb,,Get_Is_Ref()}:

@item 
@ref{bdc,,Set_Is_Ref()}:

@item 
@ref{bdd,,Get_Is_Forward_Ref()}:

@item 
@ref{bde,,Set_Is_Forward_Ref()}:

@item 
@ref{bdf,,Get_Psl_Property()}:

@item 
@ref{be0,,Set_Psl_Property()}:

@item 
@ref{be1,,Get_Psl_Sequence()}:

@item 
@ref{be2,,Set_Psl_Sequence()}:

@item 
@ref{be3,,Get_Psl_Declaration()}:

@item 
@ref{be4,,Set_Psl_Declaration()}:

@item 
@ref{be5,,Get_Psl_Expression()}:

@item 
@ref{be6,,Set_Psl_Expression()}:

@item 
@ref{be7,,Get_Psl_Boolean()}:

@item 
@ref{be8,,Set_Psl_Boolean()}:

@item 
@ref{be9,,Get_PSL_Clock()}:

@item 
@ref{bea,,Set_PSL_Clock()}:

@item 
@ref{beb,,Get_PSL_NFA()}:

@item 
@ref{bec,,Set_PSL_NFA()}:

@item 
@ref{bed,,Get_PSL_Nbr_States()}:

@item 
@ref{bee,,Set_PSL_Nbr_States()}:

@item 
@ref{bef,,Get_PSL_Clock_Sensitivity()}:

@item 
@ref{bf0,,Set_PSL_Clock_Sensitivity()}:

@item 
@ref{bf1,,Get_PSL_EOS_Flag()}:

@item 
@ref{bf2,,Set_PSL_EOS_Flag()}:

@item 
@ref{bf3,,Get_PSL_Abort_Flag()}:

@item 
@ref{bf4,,Set_PSL_Abort_Flag()}:

@item 
@ref{bf5,,Get_Count_Expression()}:

@item 
@ref{bf6,,Set_Count_Expression()}:

@item 
@ref{bf7,,Get_Clock_Expression()}:

@item 
@ref{bf8,,Set_Clock_Expression()}:

@item 
@ref{bf9,,Get_Default_Clock()}:

@item 
@ref{bfa,,Set_Default_Clock()}:

@item 
@ref{bfb,,Get_Foreign_Node()}:

@item 
@ref{bfc,,Set_Foreign_Node()}:

@item 
@ref{bfd,,Get_Suspend_State_Index()}:

@item 
@ref{bfe,,Set_Suspend_State_Index()}:

@item 
@ref{bff,,Get_Suspend_State_Chain()}:

@item 
@ref{c00,,Set_Suspend_State_Chain()}:

@item 
@ref{c01,,Get_Suspend_State_Last()}:

@item 
@ref{c02,,Set_Suspend_State_Last()}:

@item 
@ref{c03,,Get_Suspend_State_Decl()}:

@item 
@ref{c04,,Set_Suspend_State_Decl()}:
@end itemize

`Classes'


@itemize -

@item 
@ref{815,,Iir_Kind}:
An enumeration.

@item 
@ref{c05,,Iir_Kinds}:
Undocumented.

@item 
@ref{c06,,Iir_Mode}:
An enumeration.

@item 
@ref{c07,,ScalarSize}:
An enumeration.

@item 
@ref{c08,,Iir_Staticness}:
An enumeration.

@item 
@ref{c09,,Iir_Constraint}:
An enumeration.

@item 
@ref{c0a,,Iir_Delay_Mechanism}:
An enumeration.

@item 
@ref{c0b,,DateStateType}:
An enumeration.

@item 
@ref{c0c,,NumberBaseType}:
An enumeration.

@item 
@ref{c0d,,Iir_Predefined}:
An enumeration.
@end itemize


__________________________________________________________________


`Variables'

@geindex Null_Iir (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Null_Iir}@anchor{816}
@deffn {Data} pyGHDL.libghdl.vhdl.nodes.Null_Iir

Null element for an IIR node reference.

@example
0
@end example
@end deffn

@geindex Null_Iir_List (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Null_Iir_List}@anchor{8f6}
@deffn {Data} pyGHDL.libghdl.vhdl.nodes.Null_Iir_List

int([x]) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by ‘+’ or ‘-’ and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int(‘0b100’, base=0)
4

@example
0
@end example
@end deffn

@geindex Iir_List_All (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Iir_List_All}@anchor{8f7}
@deffn {Data} pyGHDL.libghdl.vhdl.nodes.Iir_List_All

int([x]) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by ‘+’ or ‘-’ and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int(‘0b100’, base=0)
4

@example
1
@end example
@end deffn

@geindex Null_Iir_Flist (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Null_Iir_Flist}@anchor{8f8}
@deffn {Data} pyGHDL.libghdl.vhdl.nodes.Null_Iir_Flist

int([x]) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by ‘+’ or ‘-’ and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int(‘0b100’, base=0)
4

@example
0
@end example
@end deffn

@geindex Iir_Flist_Others (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Iir_Flist_Others}@anchor{8f9}
@deffn {Data} pyGHDL.libghdl.vhdl.nodes.Iir_Flist_Others

int([x]) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by ‘+’ or ‘-’ and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int(‘0b100’, base=0)
4

@example
1
@end example
@end deffn

@geindex Iir_Flist_All (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Iir_Flist_All}@anchor{8fa}
@deffn {Data} pyGHDL.libghdl.vhdl.nodes.Iir_Flist_All

int([x]) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by ‘+’ or ‘-’ and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int(‘0b100’, base=0)
4

@example
2
@end example
@end deffn


__________________________________________________________________


`Functions'

@geindex Get_Kind() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Kind}@anchor{8fb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Kind (node)

Get node kind.

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{IirKind}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex Get_Location() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Location}@anchor{8fc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Location (node)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{LocationType}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Parameters: 
@code{node} (@code{Iir}) – 

@end deffn

@geindex Get_First_Design_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_First_Design_Unit}@anchor{8fd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_First_Design_Unit (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_First_Design_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_First_Design_Unit}@anchor{8fe}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_First_Design_Unit (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Last_Design_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Last_Design_Unit}@anchor{8ff}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Last_Design_Unit (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Last_Design_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Last_Design_Unit}@anchor{900}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Last_Design_Unit (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Library_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Library_Declaration}@anchor{901}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Library_Declaration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Library_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Library_Declaration}@anchor{902}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Library_Declaration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_File_Checksum() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_File_Checksum}@anchor{903}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_File_Checksum (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{FileChecksumId}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_File_Checksum() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_File_Checksum}@anchor{904}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_File_Checksum (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{FileChecksumId}) – 
@end itemize

@end deffn

@geindex Get_Analysis_Time_Stamp() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Analysis_Time_Stamp}@anchor{905}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Analysis_Time_Stamp (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{TimeStampId}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Analysis_Time_Stamp() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Analysis_Time_Stamp}@anchor{906}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Analysis_Time_Stamp (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{TimeStampId}) – 
@end itemize

@end deffn

@geindex Get_Design_File_Source() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Design_File_Source}@anchor{907}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Design_File_Source (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Design_File_Source() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Design_File_Source}@anchor{908}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Design_File_Source (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{SourceFileEntry}) – 
@end itemize

@end deffn

@geindex Get_Library() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Library}@anchor{909}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Library (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Library() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Library}@anchor{90a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Library (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_File_Dependence_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_File_Dependence_List}@anchor{90b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_File_Dependence_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_File_Dependence_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_File_Dependence_List}@anchor{90c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_File_Dependence_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Design_File_Filename() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Design_File_Filename}@anchor{90d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Design_File_Filename (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Design_File_Filename() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Design_File_Filename}@anchor{90e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Design_File_Filename (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{NameId}) – 
@end itemize

@end deffn

@geindex Get_Design_File_Directory() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Design_File_Directory}@anchor{90f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Design_File_Directory (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Design_File_Directory() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Design_File_Directory}@anchor{910}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Design_File_Directory (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{NameId}) – 
@end itemize

@end deffn

@geindex Get_Design_File() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Design_File}@anchor{911}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Design_File (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Design_File() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Design_File}@anchor{912}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Design_File (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Design_File_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Design_File_Chain}@anchor{913}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Design_File_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Design_File_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Design_File_Chain}@anchor{914}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Design_File_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Library_Directory() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Library_Directory}@anchor{915}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Library_Directory (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Library_Directory() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Library_Directory}@anchor{916}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Library_Directory (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{NameId}) – 
@end itemize

@end deffn

@geindex Get_Date() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Date}@anchor{917}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Date (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{DateType}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Date() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Date}@anchor{918}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Date (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{DateType}) – 
@end itemize

@end deffn

@geindex Get_Context_Items() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Context_Items}@anchor{919}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Context_Items (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Context_Items() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Context_Items}@anchor{91a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Context_Items (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Dependence_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Dependence_List}@anchor{91b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Dependence_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Dependence_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Dependence_List}@anchor{91c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Dependence_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Analysis_Checks_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Analysis_Checks_List}@anchor{91d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Analysis_Checks_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Analysis_Checks_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Analysis_Checks_List}@anchor{91e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Analysis_Checks_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Date_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Date_State}@anchor{91f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Date_State (obj)

@*Return type: 
@ref{c0b,,DateStateType}


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Date_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Date_State}@anchor{920}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Date_State (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@ref{c0b,,DateStateType}) – 
@end itemize

@end deffn

@geindex Get_Guarded_Target_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Guarded_Target_State}@anchor{921}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Guarded_Target_State (obj)

@*Return type: 
@ref{833,,TriStateType}


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Guarded_Target_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Guarded_Target_State}@anchor{922}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Guarded_Target_State (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@ref{833,,TriStateType}) – 
@end itemize

@end deffn

@geindex Get_Library_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Library_Unit}@anchor{923}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Library_Unit (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Library_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Library_Unit}@anchor{924}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Library_Unit (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Hash_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Hash_Chain}@anchor{925}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Hash_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Hash_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Hash_Chain}@anchor{926}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Hash_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Design_Unit_Source_Pos() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Design_Unit_Source_Pos}@anchor{927}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Design_Unit_Source_Pos (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourcePtr}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Design_Unit_Source_Pos() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Design_Unit_Source_Pos}@anchor{928}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Design_Unit_Source_Pos (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{SourcePtr}) – 
@end itemize

@end deffn

@geindex Get_Design_Unit_Source_Line() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Design_Unit_Source_Line}@anchor{929}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Design_Unit_Source_Line (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Int32}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Design_Unit_Source_Line() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Design_Unit_Source_Line}@anchor{92a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Design_Unit_Source_Line (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Int32}) – 
@end itemize

@end deffn

@geindex Get_Design_Unit_Source_Col() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Design_Unit_Source_Col}@anchor{92b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Design_Unit_Source_Col (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Int32}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Design_Unit_Source_Col() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Design_Unit_Source_Col}@anchor{92c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Design_Unit_Source_Col (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Int32}) – 
@end itemize

@end deffn

@geindex Get_Value() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Value}@anchor{92d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Value (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Int64}, bound= c_long@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_long})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Value() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Value}@anchor{92e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Value (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Int64}) – 
@end itemize

@end deffn

@geindex Get_Enum_Pos() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Enum_Pos}@anchor{92f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Enum_Pos (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Enum_Pos() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Enum_Pos}@anchor{930}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Enum_Pos (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Physical_Literal() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Physical_Literal}@anchor{931}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Physical_Literal (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Physical_Literal() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Physical_Literal}@anchor{932}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Physical_Literal (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Fp_Value() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Fp_Value}@anchor{933}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Fp_Value (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Fp64}, bound= c_double@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_double})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Fp_Value() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Fp_Value}@anchor{934}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Fp_Value (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Fp64}) – 
@end itemize

@end deffn

@geindex Get_Simple_Aggregate_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Simple_Aggregate_List}@anchor{935}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Simple_Aggregate_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Simple_Aggregate_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Simple_Aggregate_List}@anchor{936}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Simple_Aggregate_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_String8_Id() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_String8_Id}@anchor{937}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_String8_Id (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{String8Id}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_String8_Id() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_String8_Id}@anchor{938}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_String8_Id (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{String8Id}) – 
@end itemize

@end deffn

@geindex Get_String_Length() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_String_Length}@anchor{939}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_String_Length (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Int32}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_String_Length() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_String_Length}@anchor{93a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_String_Length (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Int32}) – 
@end itemize

@end deffn

@geindex Get_Bit_String_Base() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Bit_String_Base}@anchor{93b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Bit_String_Base (obj)

@*Return type: 
@ref{c0c,,NumberBaseType}


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Bit_String_Base() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Bit_String_Base}@anchor{93c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Bit_String_Base (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@ref{c0c,,NumberBaseType}) – 
@end itemize

@end deffn

@geindex Get_Has_Signed() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Signed}@anchor{93d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Signed (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Signed() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Signed}@anchor{93e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Signed (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Sign() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Sign}@anchor{93f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Sign (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Sign() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Sign}@anchor{940}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Sign (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Length() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Length}@anchor{941}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Length (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Length() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Length}@anchor{942}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Length (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Literal_Length() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Literal_Length}@anchor{943}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Literal_Length (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Int32}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Literal_Length() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Literal_Length}@anchor{944}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Literal_Length (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Int32}) – 
@end itemize

@end deffn

@geindex Get_Literal_Origin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Literal_Origin}@anchor{945}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Literal_Origin (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Literal_Origin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Literal_Origin}@anchor{946}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Literal_Origin (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Range_Origin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Range_Origin}@anchor{947}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Range_Origin (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Range_Origin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Range_Origin}@anchor{948}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Range_Origin (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Literal_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Literal_Subtype}@anchor{949}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Literal_Subtype (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Literal_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Literal_Subtype}@anchor{94a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Literal_Subtype (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Allocator_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Allocator_Subtype}@anchor{94b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Allocator_Subtype (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Allocator_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Allocator_Subtype}@anchor{94c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Allocator_Subtype (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Entity_Class() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Entity_Class}@anchor{94d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Entity_Class (obj)

@*Return type: 
@ref{c0e,,Tok}


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Entity_Class() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Entity_Class}@anchor{94e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Entity_Class (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@ref{c0e,,Tok}) – 
@end itemize

@end deffn

@geindex Get_Entity_Name_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Entity_Name_List}@anchor{94f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Entity_Name_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Entity_Name_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Entity_Name_List}@anchor{950}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Entity_Name_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Attribute_Designator() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Attribute_Designator}@anchor{951}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Attribute_Designator (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Attribute_Designator() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Attribute_Designator}@anchor{952}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Attribute_Designator (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Attribute_Specification_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Attribute_Specification_Chain}@anchor{953}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Attribute_Specification_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Attribute_Specification_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Attribute_Specification_Chain}@anchor{954}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Attribute_Specification_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Attribute_Specification() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Attribute_Specification}@anchor{955}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Attribute_Specification (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Attribute_Specification() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Attribute_Specification}@anchor{956}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Attribute_Specification (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Static_Attribute_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Static_Attribute_Flag}@anchor{957}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Static_Attribute_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Static_Attribute_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Static_Attribute_Flag}@anchor{958}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Static_Attribute_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Signal_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Signal_List}@anchor{959}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Signal_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Signal_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Signal_List}@anchor{95a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Signal_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Quantity_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Quantity_List}@anchor{95b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Quantity_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Quantity_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Quantity_List}@anchor{95c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Quantity_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Designated_Entity() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Designated_Entity}@anchor{95d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Designated_Entity (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Designated_Entity() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Designated_Entity}@anchor{95e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Designated_Entity (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Formal() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Formal}@anchor{95f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Formal (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Formal() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Formal}@anchor{960}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Formal (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Actual() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Actual}@anchor{961}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Actual (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Actual() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Actual}@anchor{962}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Actual (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Open_Actual() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Open_Actual}@anchor{963}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Open_Actual (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Open_Actual() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Open_Actual}@anchor{964}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Open_Actual (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Actual_Conversion() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Actual_Conversion}@anchor{965}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Actual_Conversion (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Actual_Conversion() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Actual_Conversion}@anchor{966}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Actual_Conversion (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Formal_Conversion() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Formal_Conversion}@anchor{967}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Formal_Conversion (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Formal_Conversion() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Formal_Conversion}@anchor{968}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Formal_Conversion (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Whole_Association_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Whole_Association_Flag}@anchor{969}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Whole_Association_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Whole_Association_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Whole_Association_Flag}@anchor{96a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Whole_Association_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Collapse_Signal_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Collapse_Signal_Flag}@anchor{96b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Collapse_Signal_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Collapse_Signal_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Collapse_Signal_Flag}@anchor{96c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Collapse_Signal_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Artificial_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Artificial_Flag}@anchor{96d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Artificial_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Artificial_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Artificial_Flag}@anchor{96e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Artificial_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Open_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Open_Flag}@anchor{96f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Open_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Open_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Open_Flag}@anchor{970}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Open_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_After_Drivers_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_After_Drivers_Flag}@anchor{971}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_After_Drivers_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_After_Drivers_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_After_Drivers_Flag}@anchor{972}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_After_Drivers_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_We_Value() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_We_Value}@anchor{973}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_We_Value (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_We_Value() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_We_Value}@anchor{974}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_We_Value (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Time() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Time}@anchor{975}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Time (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Time() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Time}@anchor{976}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Time (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Associated_Expr() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Associated_Expr}@anchor{977}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Associated_Expr (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Associated_Expr() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Associated_Expr}@anchor{978}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Associated_Expr (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Associated_Block() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Associated_Block}@anchor{979}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Associated_Block (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Associated_Block() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Associated_Block}@anchor{97a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Associated_Block (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Associated_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Associated_Chain}@anchor{97b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Associated_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Associated_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Associated_Chain}@anchor{97c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Associated_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Choice_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Choice_Name}@anchor{97d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Choice_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Choice_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Choice_Name}@anchor{97e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Choice_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Choice_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Choice_Expression}@anchor{97f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Choice_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Choice_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Choice_Expression}@anchor{980}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Choice_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Choice_Range() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Choice_Range}@anchor{981}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Choice_Range (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Choice_Range() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Choice_Range}@anchor{982}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Choice_Range (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Same_Alternative_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Same_Alternative_Flag}@anchor{983}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Same_Alternative_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Same_Alternative_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Same_Alternative_Flag}@anchor{984}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Same_Alternative_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Element_Type_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Element_Type_Flag}@anchor{985}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Element_Type_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Element_Type_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Element_Type_Flag}@anchor{986}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Element_Type_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Architecture() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Architecture}@anchor{987}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Architecture (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Architecture() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Architecture}@anchor{988}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Architecture (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Block_Specification() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Block_Specification}@anchor{989}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Block_Specification (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Block_Specification() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Block_Specification}@anchor{98a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Block_Specification (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Prev_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Prev_Block_Configuration}@anchor{98b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Prev_Block_Configuration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Prev_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Prev_Block_Configuration}@anchor{98c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Prev_Block_Configuration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Configuration_Item_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Configuration_Item_Chain}@anchor{98d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Configuration_Item_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Configuration_Item_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Configuration_Item_Chain}@anchor{98e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Configuration_Item_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Attribute_Value_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Attribute_Value_Chain}@anchor{98f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Attribute_Value_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Attribute_Value_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Attribute_Value_Chain}@anchor{990}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Attribute_Value_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Spec_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Spec_Chain}@anchor{991}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Spec_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Spec_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Spec_Chain}@anchor{992}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Spec_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Value_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Value_Chain}@anchor{993}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Value_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Value_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Value_Chain}@anchor{994}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Value_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Attribute_Value_Spec_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Attribute_Value_Spec_Chain}@anchor{995}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Attribute_Value_Spec_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Attribute_Value_Spec_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Attribute_Value_Spec_Chain}@anchor{996}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Attribute_Value_Spec_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Entity_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Entity_Name}@anchor{997}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Entity_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Entity_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Entity_Name}@anchor{998}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Entity_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Package() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Package}@anchor{999}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Package (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Package() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Package}@anchor{99a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Package (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Package_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Package_Body}@anchor{99b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Package_Body (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Package_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Package_Body}@anchor{99c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Package_Body (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Instance_Package_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Instance_Package_Body}@anchor{99d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Instance_Package_Body (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Instance_Package_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Instance_Package_Body}@anchor{99e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Instance_Package_Body (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Need_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Need_Body}@anchor{99f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Need_Body (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Need_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Need_Body}@anchor{9a0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Need_Body (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Macro_Expanded_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Macro_Expanded_Flag}@anchor{9a1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Macro_Expanded_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Macro_Expanded_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Macro_Expanded_Flag}@anchor{9a2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Macro_Expanded_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Need_Instance_Bodies() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Need_Instance_Bodies}@anchor{9a3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Need_Instance_Bodies (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Need_Instance_Bodies() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Need_Instance_Bodies}@anchor{9a4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Need_Instance_Bodies (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Hierarchical_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Hierarchical_Name}@anchor{9a5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Hierarchical_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Hierarchical_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Hierarchical_Name}@anchor{9a6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Hierarchical_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Vunit_Item_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Vunit_Item_Chain}@anchor{9a7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Vunit_Item_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Vunit_Item_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Vunit_Item_Chain}@anchor{9a8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Vunit_Item_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Bound_Vunit_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Bound_Vunit_Chain}@anchor{9a9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Bound_Vunit_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Bound_Vunit_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Bound_Vunit_Chain}@anchor{9aa}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Bound_Vunit_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Verification_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Verification_Block_Configuration}@anchor{9ab}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Verification_Block_Configuration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Verification_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Verification_Block_Configuration}@anchor{9ac}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Verification_Block_Configuration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Block_Configuration}@anchor{9ad}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Block_Configuration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Block_Configuration}@anchor{9ae}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Block_Configuration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Concurrent_Statement_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Concurrent_Statement_Chain}@anchor{9af}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Concurrent_Statement_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Concurrent_Statement_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Concurrent_Statement_Chain}@anchor{9b0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Concurrent_Statement_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Chain}@anchor{9b1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Chain}@anchor{9b2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Port_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Port_Chain}@anchor{9b3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Port_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Port_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Port_Chain}@anchor{9b4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Port_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Generic_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Generic_Chain}@anchor{9b5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Generic_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Generic_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Generic_Chain}@anchor{9b6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Generic_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Type}@anchor{9b7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Type (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Type}@anchor{9b8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Type (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Subtype_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Subtype_Indication}@anchor{9b9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Subtype_Indication (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Subtype_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Subtype_Indication}@anchor{9ba}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Subtype_Indication (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Discrete_Range() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Discrete_Range}@anchor{9bb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Discrete_Range (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Discrete_Range() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Discrete_Range}@anchor{9bc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Discrete_Range (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Type_Definition}@anchor{9bd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Type_Definition (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Type_Definition}@anchor{9be}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Type_Definition (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Subtype_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Subtype_Definition}@anchor{9bf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Subtype_Definition (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Subtype_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Subtype_Definition}@anchor{9c0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Subtype_Definition (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Incomplete_Type_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Incomplete_Type_Declaration}@anchor{9c1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Incomplete_Type_Declaration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Incomplete_Type_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Incomplete_Type_Declaration}@anchor{9c2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Incomplete_Type_Declaration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Interface_Type_Subprograms() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Interface_Type_Subprograms}@anchor{9c3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Interface_Type_Subprograms (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Interface_Type_Subprograms() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Interface_Type_Subprograms}@anchor{9c4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Interface_Type_Subprograms (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Interface_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Interface_Type_Definition}@anchor{9c5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Interface_Type_Definition (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Interface_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Interface_Type_Definition}@anchor{9c6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Interface_Type_Definition (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Nature_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Nature_Definition}@anchor{9c7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Nature_Definition (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Nature_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Nature_Definition}@anchor{9c8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Nature_Definition (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Nature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Nature}@anchor{9c9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Nature (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Nature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Nature}@anchor{9ca}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Nature (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Subnature_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Subnature_Indication}@anchor{9cb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Subnature_Indication (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Subnature_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Subnature_Indication}@anchor{9cc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Subnature_Indication (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Reference_Terminal_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Reference_Terminal_Flag}@anchor{9cd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Reference_Terminal_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Reference_Terminal_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Reference_Terminal_Flag}@anchor{9ce}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Reference_Terminal_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Mode() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Mode}@anchor{9cf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Mode (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Mode() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Mode}@anchor{9d0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Mode (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Guarded_Signal_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Guarded_Signal_Flag}@anchor{9d1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Guarded_Signal_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Guarded_Signal_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Guarded_Signal_Flag}@anchor{9d2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Guarded_Signal_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Signal_Kind() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Signal_Kind}@anchor{9d3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Signal_Kind (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Signal_Kind() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Signal_Kind}@anchor{9d4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Signal_Kind (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Base_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Base_Name}@anchor{9d5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Base_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Base_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Base_Name}@anchor{9d6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Base_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Interface_Declaration_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Interface_Declaration_Chain}@anchor{9d7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Interface_Declaration_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Interface_Declaration_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Interface_Declaration_Chain}@anchor{9d8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Interface_Declaration_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Default_Subprogram() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Default_Subprogram}@anchor{9d9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Default_Subprogram (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Default_Subprogram() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Default_Subprogram}@anchor{9da}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Default_Subprogram (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Associated_Subprogram() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Associated_Subprogram}@anchor{9db}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Associated_Subprogram (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Associated_Subprogram() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Associated_Subprogram}@anchor{9dc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Associated_Subprogram (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Subprogram_Specification() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Subprogram_Specification}@anchor{9dd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Subprogram_Specification (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Subprogram_Specification() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Subprogram_Specification}@anchor{9de}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Subprogram_Specification (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Sequential_Statement_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Sequential_Statement_Chain}@anchor{9df}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Sequential_Statement_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Sequential_Statement_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Sequential_Statement_Chain}@anchor{9e0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Sequential_Statement_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Simultaneous_Statement_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Simultaneous_Statement_Chain}@anchor{9e1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Simultaneous_Statement_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Simultaneous_Statement_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Simultaneous_Statement_Chain}@anchor{9e2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Simultaneous_Statement_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Subprogram_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Subprogram_Body}@anchor{9e3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Subprogram_Body (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Subprogram_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Subprogram_Body}@anchor{9e4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Subprogram_Body (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Overload_Number() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Overload_Number}@anchor{9e5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Overload_Number (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Overload_Number() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Overload_Number}@anchor{9e6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Overload_Number (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Subprogram_Depth() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Subprogram_Depth}@anchor{9e7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Subprogram_Depth (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Subprogram_Depth() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Subprogram_Depth}@anchor{9e8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Subprogram_Depth (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Subprogram_Hash() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Subprogram_Hash}@anchor{9e9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Subprogram_Hash (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Subprogram_Hash() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Subprogram_Hash}@anchor{9ea}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Subprogram_Hash (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Impure_Depth() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Impure_Depth}@anchor{9eb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Impure_Depth (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Impure_Depth() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Impure_Depth}@anchor{9ec}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Impure_Depth (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Return_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Return_Type}@anchor{9ed}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Return_Type (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Return_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Return_Type}@anchor{9ee}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Return_Type (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Implicit_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Implicit_Definition}@anchor{9ef}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Implicit_Definition (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Implicit_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Implicit_Definition}@anchor{9f0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Implicit_Definition (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Uninstantiated_Subprogram_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Uninstantiated_Subprogram_Name}@anchor{9f1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Uninstantiated_Subprogram_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Uninstantiated_Subprogram_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Uninstantiated_Subprogram_Name}@anchor{9f2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Uninstantiated_Subprogram_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Default_Value() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Default_Value}@anchor{9f3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Default_Value (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Default_Value() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Default_Value}@anchor{9f4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Default_Value (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Deferred_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Deferred_Declaration}@anchor{9f5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Deferred_Declaration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Deferred_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Deferred_Declaration}@anchor{9f6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Deferred_Declaration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Deferred_Declaration_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Deferred_Declaration_Flag}@anchor{9f7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Deferred_Declaration_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Deferred_Declaration_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Deferred_Declaration_Flag}@anchor{9f8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Deferred_Declaration_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Shared_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Shared_Flag}@anchor{9f9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Shared_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Shared_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Shared_Flag}@anchor{9fa}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Shared_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Design_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Design_Unit}@anchor{9fb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Design_Unit (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Design_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Design_Unit}@anchor{9fc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Design_Unit (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Block_Statement() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Block_Statement}@anchor{9fd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Block_Statement (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Block_Statement() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Block_Statement}@anchor{9fe}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Block_Statement (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Signal_Driver() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Signal_Driver}@anchor{9ff}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Signal_Driver (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Signal_Driver() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Signal_Driver}@anchor{a00}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Signal_Driver (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Declaration_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Declaration_Chain}@anchor{a01}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Declaration_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Declaration_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Declaration_Chain}@anchor{a02}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Declaration_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_File_Logical_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_File_Logical_Name}@anchor{a03}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_File_Logical_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_File_Logical_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_File_Logical_Name}@anchor{a04}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_File_Logical_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_File_Open_Kind() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_File_Open_Kind}@anchor{a05}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_File_Open_Kind (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_File_Open_Kind() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_File_Open_Kind}@anchor{a06}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_File_Open_Kind (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Element_Position() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Element_Position}@anchor{a07}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Element_Position (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Element_Position() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Element_Position}@anchor{a08}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Element_Position (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Use_Clause_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Use_Clause_Chain}@anchor{a09}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Use_Clause_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Use_Clause_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Use_Clause_Chain}@anchor{a0a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Use_Clause_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Context_Reference_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Context_Reference_Chain}@anchor{a0b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Context_Reference_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Context_Reference_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Context_Reference_Chain}@anchor{a0c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Context_Reference_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Inherit_Spec_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Inherit_Spec_Chain}@anchor{a0d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Inherit_Spec_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Inherit_Spec_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Inherit_Spec_Chain}@anchor{a0e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Inherit_Spec_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Selected_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Selected_Name}@anchor{a0f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Selected_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Selected_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Selected_Name}@anchor{a10}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Selected_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Type_Declarator() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Type_Declarator}@anchor{a11}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Type_Declarator (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Type_Declarator() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Type_Declarator}@anchor{a12}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Type_Declarator (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Complete_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Complete_Type_Definition}@anchor{a13}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Complete_Type_Definition (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Complete_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Complete_Type_Definition}@anchor{a14}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Complete_Type_Definition (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Incomplete_Type_Ref_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Incomplete_Type_Ref_Chain}@anchor{a15}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Incomplete_Type_Ref_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Incomplete_Type_Ref_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Incomplete_Type_Ref_Chain}@anchor{a16}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Incomplete_Type_Ref_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Associated_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Associated_Type}@anchor{a17}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Associated_Type (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Associated_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Associated_Type}@anchor{a18}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Associated_Type (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Enumeration_Literal_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Enumeration_Literal_List}@anchor{a19}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Enumeration_Literal_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Enumeration_Literal_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Enumeration_Literal_List}@anchor{a1a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Enumeration_Literal_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Entity_Class_Entry_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Entity_Class_Entry_Chain}@anchor{a1b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Entity_Class_Entry_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Entity_Class_Entry_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Entity_Class_Entry_Chain}@anchor{a1c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Entity_Class_Entry_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Group_Constituent_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Group_Constituent_List}@anchor{a1d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Group_Constituent_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Group_Constituent_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Group_Constituent_List}@anchor{a1e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Group_Constituent_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Unit_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Unit_Chain}@anchor{a1f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Unit_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Unit_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Unit_Chain}@anchor{a20}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Unit_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Primary_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Primary_Unit}@anchor{a21}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Primary_Unit (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Primary_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Primary_Unit}@anchor{a22}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Primary_Unit (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Identifier() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Identifier}@anchor{a23}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Identifier (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Identifier() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Identifier}@anchor{a24}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Identifier (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{NameId}) – 
@end itemize

@end deffn

@geindex Get_Label() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Label}@anchor{a25}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Label (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Label() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Label}@anchor{a26}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Label (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{NameId}) – 
@end itemize

@end deffn

@geindex Get_Return_Identifier() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Return_Identifier}@anchor{a27}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Return_Identifier (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Return_Identifier() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Return_Identifier}@anchor{a28}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Return_Identifier (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Visible_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Visible_Flag}@anchor{a29}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Visible_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Visible_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Visible_Flag}@anchor{a2a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Visible_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Range_Constraint() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Range_Constraint}@anchor{a2b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Range_Constraint (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Range_Constraint() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Range_Constraint}@anchor{a2c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Range_Constraint (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Direction() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Direction}@anchor{a2d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Direction (obj)

@*Return type: 
@ref{834,,DirectionType}


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Direction() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Direction}@anchor{a2e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Direction (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@ref{834,,DirectionType}) – 
@end itemize

@end deffn

@geindex Get_Left_Limit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Left_Limit}@anchor{a2f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Left_Limit (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Left_Limit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Left_Limit}@anchor{a30}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Left_Limit (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Right_Limit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Right_Limit}@anchor{a31}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Right_Limit (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Right_Limit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Right_Limit}@anchor{a32}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Right_Limit (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Left_Limit_Expr() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Left_Limit_Expr}@anchor{a33}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Left_Limit_Expr (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Left_Limit_Expr() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Left_Limit_Expr}@anchor{a34}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Left_Limit_Expr (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Right_Limit_Expr() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Right_Limit_Expr}@anchor{a35}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Right_Limit_Expr (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Right_Limit_Expr() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Right_Limit_Expr}@anchor{a36}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Right_Limit_Expr (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Parent_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Parent_Type}@anchor{a37}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Parent_Type (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Parent_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Parent_Type}@anchor{a38}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Parent_Type (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Simple_Nature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Simple_Nature}@anchor{a39}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Simple_Nature (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Simple_Nature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Simple_Nature}@anchor{a3a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Simple_Nature (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Base_Nature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Base_Nature}@anchor{a3b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Base_Nature (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Base_Nature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Base_Nature}@anchor{a3c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Base_Nature (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Resolution_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Resolution_Indication}@anchor{a3d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Resolution_Indication (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Resolution_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Resolution_Indication}@anchor{a3e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Resolution_Indication (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Record_Element_Resolution_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Record_Element_Resolution_Chain}@anchor{a3f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Record_Element_Resolution_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Record_Element_Resolution_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Record_Element_Resolution_Chain}@anchor{a40}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Record_Element_Resolution_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Tolerance() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Tolerance}@anchor{a41}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Tolerance (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Tolerance() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Tolerance}@anchor{a42}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Tolerance (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Plus_Terminal_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Plus_Terminal_Name}@anchor{a43}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Plus_Terminal_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Plus_Terminal_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Plus_Terminal_Name}@anchor{a44}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Plus_Terminal_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Minus_Terminal_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Minus_Terminal_Name}@anchor{a45}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Minus_Terminal_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Minus_Terminal_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Minus_Terminal_Name}@anchor{a46}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Minus_Terminal_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Plus_Terminal() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Plus_Terminal}@anchor{a47}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Plus_Terminal (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Plus_Terminal() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Plus_Terminal}@anchor{a48}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Plus_Terminal (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Minus_Terminal() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Minus_Terminal}@anchor{a49}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Minus_Terminal (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Minus_Terminal() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Minus_Terminal}@anchor{a4a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Minus_Terminal (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Magnitude_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Magnitude_Expression}@anchor{a4b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Magnitude_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Magnitude_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Magnitude_Expression}@anchor{a4c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Magnitude_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Phase_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Phase_Expression}@anchor{a4d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Phase_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Phase_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Phase_Expression}@anchor{a4e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Phase_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Power_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Power_Expression}@anchor{a4f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Power_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Power_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Power_Expression}@anchor{a50}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Power_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Simultaneous_Left() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Simultaneous_Left}@anchor{a51}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Simultaneous_Left (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Simultaneous_Left() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Simultaneous_Left}@anchor{a52}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Simultaneous_Left (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Simultaneous_Right() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Simultaneous_Right}@anchor{a53}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Simultaneous_Right (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Simultaneous_Right() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Simultaneous_Right}@anchor{a54}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Simultaneous_Right (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Text_File_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Text_File_Flag}@anchor{a55}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Text_File_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Text_File_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Text_File_Flag}@anchor{a56}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Text_File_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Only_Characters_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Only_Characters_Flag}@anchor{a57}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Only_Characters_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Only_Characters_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Only_Characters_Flag}@anchor{a58}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Only_Characters_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Is_Character_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Is_Character_Type}@anchor{a59}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Is_Character_Type (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Is_Character_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Is_Character_Type}@anchor{a5a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Is_Character_Type (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Nature_Staticness() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Nature_Staticness}@anchor{a5b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Nature_Staticness (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Nature_Staticness() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Nature_Staticness}@anchor{a5c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Nature_Staticness (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Type_Staticness() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Type_Staticness}@anchor{a5d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Type_Staticness (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Type_Staticness() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Type_Staticness}@anchor{a5e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Type_Staticness (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Constraint_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Constraint_State}@anchor{a5f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Constraint_State (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Constraint_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Constraint_State}@anchor{a60}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Constraint_State (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Index_Subtype_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Index_Subtype_List}@anchor{a61}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Index_Subtype_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Index_Subtype_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Index_Subtype_List}@anchor{a62}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Index_Subtype_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Index_Subtype_Definition_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Index_Subtype_Definition_List}@anchor{a63}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Index_Subtype_Definition_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Index_Subtype_Definition_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Index_Subtype_Definition_List}@anchor{a64}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Index_Subtype_Definition_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Element_Subtype_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Element_Subtype_Indication}@anchor{a65}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Element_Subtype_Indication (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Element_Subtype_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Element_Subtype_Indication}@anchor{a66}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Element_Subtype_Indication (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Element_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Element_Subtype}@anchor{a67}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Element_Subtype (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Element_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Element_Subtype}@anchor{a68}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Element_Subtype (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Element_Subnature_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Element_Subnature_Indication}@anchor{a69}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Element_Subnature_Indication (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Element_Subnature_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Element_Subnature_Indication}@anchor{a6a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Element_Subnature_Indication (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Element_Subnature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Element_Subnature}@anchor{a6b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Element_Subnature (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Element_Subnature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Element_Subnature}@anchor{a6c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Element_Subnature (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Index_Constraint_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Index_Constraint_List}@anchor{a6d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Index_Constraint_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Index_Constraint_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Index_Constraint_List}@anchor{a6e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Index_Constraint_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Array_Element_Constraint() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Array_Element_Constraint}@anchor{a6f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Array_Element_Constraint (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Array_Element_Constraint() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Array_Element_Constraint}@anchor{a70}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Array_Element_Constraint (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Has_Array_Constraint_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Array_Constraint_Flag}@anchor{a71}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Array_Constraint_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Array_Constraint_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Array_Constraint_Flag}@anchor{a72}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Array_Constraint_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Element_Constraint_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Element_Constraint_Flag}@anchor{a73}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Element_Constraint_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Element_Constraint_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Element_Constraint_Flag}@anchor{a74}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Element_Constraint_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Elements_Declaration_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Elements_Declaration_List}@anchor{a75}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Elements_Declaration_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Elements_Declaration_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Elements_Declaration_List}@anchor{a76}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Elements_Declaration_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Owned_Elements_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Owned_Elements_Chain}@anchor{a77}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Owned_Elements_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Owned_Elements_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Owned_Elements_Chain}@anchor{a78}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Owned_Elements_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Designated_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Designated_Type}@anchor{a79}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Designated_Type (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Designated_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Designated_Type}@anchor{a7a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Designated_Type (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Designated_Subtype_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Designated_Subtype_Indication}@anchor{a7b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Designated_Subtype_Indication (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Designated_Subtype_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Designated_Subtype_Indication}@anchor{a7c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Designated_Subtype_Indication (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Index_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Index_List}@anchor{a7d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Index_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Index_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Index_List}@anchor{a7e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Index_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Reference() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Reference}@anchor{a7f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Reference (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Reference() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Reference}@anchor{a80}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Reference (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Nature_Declarator() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Nature_Declarator}@anchor{a81}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Nature_Declarator (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Nature_Declarator() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Nature_Declarator}@anchor{a82}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Nature_Declarator (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Across_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Across_Type_Mark}@anchor{a83}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Across_Type_Mark (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Across_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Across_Type_Mark}@anchor{a84}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Across_Type_Mark (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Through_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Through_Type_Mark}@anchor{a85}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Through_Type_Mark (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Through_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Through_Type_Mark}@anchor{a86}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Through_Type_Mark (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Across_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Across_Type_Definition}@anchor{a87}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Across_Type_Definition (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Across_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Across_Type_Definition}@anchor{a88}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Across_Type_Definition (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Through_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Through_Type_Definition}@anchor{a89}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Through_Type_Definition (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Through_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Through_Type_Definition}@anchor{a8a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Through_Type_Definition (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Across_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Across_Type}@anchor{a8b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Across_Type (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Across_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Across_Type}@anchor{a8c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Across_Type (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Through_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Through_Type}@anchor{a8d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Through_Type (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Through_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Through_Type}@anchor{a8e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Through_Type (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Target() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Target}@anchor{a8f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Target (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Target() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Target}@anchor{a90}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Target (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Waveform_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Waveform_Chain}@anchor{a91}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Waveform_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Waveform_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Waveform_Chain}@anchor{a92}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Waveform_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Guard() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Guard}@anchor{a93}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Guard (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Guard() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Guard}@anchor{a94}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Guard (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Delay_Mechanism() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Delay_Mechanism}@anchor{a95}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Delay_Mechanism (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Delay_Mechanism() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Delay_Mechanism}@anchor{a96}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Delay_Mechanism (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Reject_Time_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Reject_Time_Expression}@anchor{a97}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Reject_Time_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Reject_Time_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Reject_Time_Expression}@anchor{a98}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Reject_Time_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Force_Mode() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Force_Mode}@anchor{a99}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Force_Mode (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Force_Mode() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Force_Mode}@anchor{a9a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Force_Mode (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Has_Force_Mode() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Force_Mode}@anchor{a9b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Force_Mode (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Force_Mode() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Force_Mode}@anchor{a9c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Force_Mode (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Sensitivity_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Sensitivity_List}@anchor{a9d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Sensitivity_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Sensitivity_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Sensitivity_List}@anchor{a9e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Sensitivity_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Process_Origin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Process_Origin}@anchor{a9f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Process_Origin (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Process_Origin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Process_Origin}@anchor{aa0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Process_Origin (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Package_Origin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Package_Origin}@anchor{aa1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Package_Origin (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Package_Origin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Package_Origin}@anchor{aa2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Package_Origin (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Condition_Clause() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Condition_Clause}@anchor{aa3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Condition_Clause (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Condition_Clause() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Condition_Clause}@anchor{aa4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Condition_Clause (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Break_Element() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Break_Element}@anchor{aa5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Break_Element (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Break_Element() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Break_Element}@anchor{aa6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Break_Element (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Selector_Quantity() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Selector_Quantity}@anchor{aa7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Selector_Quantity (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Selector_Quantity() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Selector_Quantity}@anchor{aa8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Selector_Quantity (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Break_Quantity() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Break_Quantity}@anchor{aa9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Break_Quantity (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Break_Quantity() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Break_Quantity}@anchor{aaa}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Break_Quantity (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Timeout_Clause() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Timeout_Clause}@anchor{aab}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Timeout_Clause (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Timeout_Clause() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Timeout_Clause}@anchor{aac}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Timeout_Clause (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Postponed_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Postponed_Flag}@anchor{aad}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Postponed_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Postponed_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Postponed_Flag}@anchor{aae}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Postponed_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Callees_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Callees_List}@anchor{aaf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Callees_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Callees_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Callees_List}@anchor{ab0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Callees_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Passive_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Passive_Flag}@anchor{ab1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Passive_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Passive_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Passive_Flag}@anchor{ab2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Passive_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Resolution_Function_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Resolution_Function_Flag}@anchor{ab3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Resolution_Function_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Resolution_Function_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Resolution_Function_Flag}@anchor{ab4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Resolution_Function_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Wait_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Wait_State}@anchor{ab5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Wait_State (obj)

@*Return type: 
@ref{833,,TriStateType}


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Wait_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Wait_State}@anchor{ab6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Wait_State (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@ref{833,,TriStateType}) – 
@end itemize

@end deffn

@geindex Get_All_Sensitized_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_All_Sensitized_State}@anchor{ab7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_All_Sensitized_State (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_All_Sensitized_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_All_Sensitized_State}@anchor{ab8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_All_Sensitized_State (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Seen_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Seen_Flag}@anchor{ab9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Seen_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Seen_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Seen_Flag}@anchor{aba}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Seen_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Pure_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Pure_Flag}@anchor{abb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Pure_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Pure_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Pure_Flag}@anchor{abc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Pure_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Foreign_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Foreign_Flag}@anchor{abd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Foreign_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Foreign_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Foreign_Flag}@anchor{abe}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Foreign_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Resolved_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Resolved_Flag}@anchor{abf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Resolved_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Resolved_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Resolved_Flag}@anchor{ac0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Resolved_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Signal_Type_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Signal_Type_Flag}@anchor{ac1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Signal_Type_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Signal_Type_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Signal_Type_Flag}@anchor{ac2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Signal_Type_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Signal_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Signal_Flag}@anchor{ac3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Signal_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Signal_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Signal_Flag}@anchor{ac4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Signal_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Purity_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Purity_State}@anchor{ac5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Purity_State (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Purity_State() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Purity_State}@anchor{ac6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Purity_State (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Elab_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Elab_Flag}@anchor{ac7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Elab_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Elab_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Elab_Flag}@anchor{ac8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Elab_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Vendor_Library_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Vendor_Library_Flag}@anchor{ac9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Vendor_Library_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Vendor_Library_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Vendor_Library_Flag}@anchor{aca}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Vendor_Library_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Configuration_Mark_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Configuration_Mark_Flag}@anchor{acb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Configuration_Mark_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Configuration_Mark_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Configuration_Mark_Flag}@anchor{acc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Configuration_Mark_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Configuration_Done_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Configuration_Done_Flag}@anchor{acd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Configuration_Done_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Configuration_Done_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Configuration_Done_Flag}@anchor{ace}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Configuration_Done_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Index_Constraint_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Index_Constraint_Flag}@anchor{acf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Index_Constraint_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Index_Constraint_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Index_Constraint_Flag}@anchor{ad0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Index_Constraint_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Hide_Implicit_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Hide_Implicit_Flag}@anchor{ad1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Hide_Implicit_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Hide_Implicit_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Hide_Implicit_Flag}@anchor{ad2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Hide_Implicit_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Assertion_Condition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Assertion_Condition}@anchor{ad3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Assertion_Condition (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Assertion_Condition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Assertion_Condition}@anchor{ad4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Assertion_Condition (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Report_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Report_Expression}@anchor{ad5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Report_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Report_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Report_Expression}@anchor{ad6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Report_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Severity_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Severity_Expression}@anchor{ad7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Severity_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Severity_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Severity_Expression}@anchor{ad8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Severity_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Instantiated_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Instantiated_Unit}@anchor{ad9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Instantiated_Unit (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Instantiated_Unit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Instantiated_Unit}@anchor{ada}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Instantiated_Unit (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Instantiated_Header() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Instantiated_Header}@anchor{adb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Instantiated_Header (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Instantiated_Header() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Instantiated_Header}@anchor{adc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Instantiated_Header (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Generic_Map_Aspect_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Generic_Map_Aspect_Chain}@anchor{add}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Generic_Map_Aspect_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Generic_Map_Aspect_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Generic_Map_Aspect_Chain}@anchor{ade}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Generic_Map_Aspect_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Port_Map_Aspect_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Port_Map_Aspect_Chain}@anchor{adf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Port_Map_Aspect_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Port_Map_Aspect_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Port_Map_Aspect_Chain}@anchor{ae0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Port_Map_Aspect_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Configuration_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Configuration_Name}@anchor{ae1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Configuration_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Configuration_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Configuration_Name}@anchor{ae2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Configuration_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Component_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Component_Configuration}@anchor{ae3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Component_Configuration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Component_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Component_Configuration}@anchor{ae4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Component_Configuration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Configuration_Specification() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Configuration_Specification}@anchor{ae5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Configuration_Specification (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Configuration_Specification() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Configuration_Specification}@anchor{ae6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Configuration_Specification (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Default_Binding_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Default_Binding_Indication}@anchor{ae7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Default_Binding_Indication (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Default_Binding_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Default_Binding_Indication}@anchor{ae8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Default_Binding_Indication (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Default_Configuration_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Default_Configuration_Declaration}@anchor{ae9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Default_Configuration_Declaration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Default_Configuration_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Default_Configuration_Declaration}@anchor{aea}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Default_Configuration_Declaration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Expression}@anchor{aeb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Expression}@anchor{aec}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Conditional_Expression_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Conditional_Expression_Chain}@anchor{aed}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Conditional_Expression_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Conditional_Expression_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Conditional_Expression_Chain}@anchor{aee}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Conditional_Expression_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Allocator_Designated_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Allocator_Designated_Type}@anchor{aef}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Allocator_Designated_Type (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Allocator_Designated_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Allocator_Designated_Type}@anchor{af0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Allocator_Designated_Type (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Selected_Waveform_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Selected_Waveform_Chain}@anchor{af1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Selected_Waveform_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Selected_Waveform_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Selected_Waveform_Chain}@anchor{af2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Selected_Waveform_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Conditional_Waveform_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Conditional_Waveform_Chain}@anchor{af3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Conditional_Waveform_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Conditional_Waveform_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Conditional_Waveform_Chain}@anchor{af4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Conditional_Waveform_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Guard_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Guard_Expression}@anchor{af5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Guard_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Guard_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Guard_Expression}@anchor{af6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Guard_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Guard_Decl() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Guard_Decl}@anchor{af7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Guard_Decl (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Guard_Decl() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Guard_Decl}@anchor{af8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Guard_Decl (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Guard_Sensitivity_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Guard_Sensitivity_List}@anchor{af9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Guard_Sensitivity_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Guard_Sensitivity_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Guard_Sensitivity_List}@anchor{afa}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Guard_Sensitivity_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Attribute_Implicit_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Attribute_Implicit_Chain}@anchor{afb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Attribute_Implicit_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Attribute_Implicit_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Attribute_Implicit_Chain}@anchor{afc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Attribute_Implicit_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Block_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Block_Block_Configuration}@anchor{afd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Block_Block_Configuration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Block_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Block_Block_Configuration}@anchor{afe}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Block_Block_Configuration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Package_Header() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Package_Header}@anchor{aff}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Package_Header (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Package_Header() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Package_Header}@anchor{b00}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Package_Header (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Block_Header() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Block_Header}@anchor{b01}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Block_Header (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Block_Header() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Block_Header}@anchor{b02}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Block_Header (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Uninstantiated_Package_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Uninstantiated_Package_Name}@anchor{b03}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Uninstantiated_Package_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Uninstantiated_Package_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Uninstantiated_Package_Name}@anchor{b04}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Uninstantiated_Package_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Uninstantiated_Package_Decl() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Uninstantiated_Package_Decl}@anchor{b05}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Uninstantiated_Package_Decl (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Uninstantiated_Package_Decl() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Uninstantiated_Package_Decl}@anchor{b06}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Uninstantiated_Package_Decl (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Associated_Package() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Associated_Package}@anchor{b07}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Associated_Package (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Associated_Package() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Associated_Package}@anchor{b08}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Associated_Package (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Instance_Source_File() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Instance_Source_File}@anchor{b09}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Instance_Source_File (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Instance_Source_File() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Instance_Source_File}@anchor{b0a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Instance_Source_File (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{SourceFileEntry}) – 
@end itemize

@end deffn

@geindex Get_Generate_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Generate_Block_Configuration}@anchor{b0b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Generate_Block_Configuration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Generate_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Generate_Block_Configuration}@anchor{b0c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Generate_Block_Configuration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Generate_Statement_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Generate_Statement_Body}@anchor{b0d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Generate_Statement_Body (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Generate_Statement_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Generate_Statement_Body}@anchor{b0e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Generate_Statement_Body (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Alternative_Label() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Alternative_Label}@anchor{b0f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Alternative_Label (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Alternative_Label() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Alternative_Label}@anchor{b10}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Alternative_Label (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{NameId}) – 
@end itemize

@end deffn

@geindex Get_Generate_Else_Clause() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Generate_Else_Clause}@anchor{b11}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Generate_Else_Clause (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Generate_Else_Clause() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Generate_Else_Clause}@anchor{b12}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Generate_Else_Clause (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Condition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Condition}@anchor{b13}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Condition (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Condition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Condition}@anchor{b14}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Condition (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Else_Clause() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Else_Clause}@anchor{b15}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Else_Clause (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Else_Clause() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Else_Clause}@anchor{b16}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Else_Clause (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Parameter_Specification() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Parameter_Specification}@anchor{b17}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Parameter_Specification (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Parameter_Specification() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Parameter_Specification}@anchor{b18}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Parameter_Specification (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Parent() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Parent}@anchor{b19}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Parent (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Parent() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Parent}@anchor{b1a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Parent (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Loop_Label() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Loop_Label}@anchor{b1b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Loop_Label (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Loop_Label() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Loop_Label}@anchor{b1c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Loop_Label (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Exit_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Exit_Flag}@anchor{b1d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Exit_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Exit_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Exit_Flag}@anchor{b1e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Exit_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Next_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Next_Flag}@anchor{b1f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Next_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Next_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Next_Flag}@anchor{b20}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Next_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Component_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Component_Name}@anchor{b21}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Component_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Component_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Component_Name}@anchor{b22}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Component_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Instantiation_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Instantiation_List}@anchor{b23}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Instantiation_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Instantiation_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Instantiation_List}@anchor{b24}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Instantiation_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Entity_Aspect() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Entity_Aspect}@anchor{b25}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Entity_Aspect (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Entity_Aspect() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Entity_Aspect}@anchor{b26}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Entity_Aspect (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Default_Entity_Aspect() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Default_Entity_Aspect}@anchor{b27}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Default_Entity_Aspect (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Default_Entity_Aspect() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Default_Entity_Aspect}@anchor{b28}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Default_Entity_Aspect (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Binding_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Binding_Indication}@anchor{b29}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Binding_Indication (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Binding_Indication() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Binding_Indication}@anchor{b2a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Binding_Indication (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Named_Entity() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Named_Entity}@anchor{b2b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Named_Entity (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Named_Entity() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Named_Entity}@anchor{b2c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Named_Entity (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Referenced_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Referenced_Name}@anchor{b2d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Referenced_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Referenced_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Referenced_Name}@anchor{b2e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Referenced_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Expr_Staticness() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Expr_Staticness}@anchor{b2f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Expr_Staticness (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Expr_Staticness() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Expr_Staticness}@anchor{b30}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Expr_Staticness (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Scalar_Size() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Scalar_Size}@anchor{b31}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Scalar_Size (obj)

@*Return type: 
@ref{c07,,ScalarSize}


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Scalar_Size() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Scalar_Size}@anchor{b32}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Scalar_Size (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@ref{c07,,ScalarSize}) – 
@end itemize

@end deffn

@geindex Get_Error_Origin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Error_Origin}@anchor{b33}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Error_Origin (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Error_Origin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Error_Origin}@anchor{b34}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Error_Origin (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Operand() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Operand}@anchor{b35}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Operand (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Operand() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Operand}@anchor{b36}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Operand (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Left() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Left}@anchor{b37}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Left (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Left() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Left}@anchor{b38}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Left (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Right() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Right}@anchor{b39}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Right (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Right() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Right}@anchor{b3a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Right (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Unit_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Unit_Name}@anchor{b3b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Unit_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Unit_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Unit_Name}@anchor{b3c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Unit_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Name}@anchor{b3d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Name}@anchor{b3e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Group_Template_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Group_Template_Name}@anchor{b3f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Group_Template_Name (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Group_Template_Name() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Group_Template_Name}@anchor{b40}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Group_Template_Name (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Name_Staticness() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Name_Staticness}@anchor{b41}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Name_Staticness (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Name_Staticness() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Name_Staticness}@anchor{b42}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Name_Staticness (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Prefix() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Prefix}@anchor{b43}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Prefix (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Prefix() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Prefix}@anchor{b44}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Prefix (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Signature_Prefix() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Signature_Prefix}@anchor{b45}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Signature_Prefix (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Signature_Prefix() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Signature_Prefix}@anchor{b46}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Signature_Prefix (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_External_Pathname() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_External_Pathname}@anchor{b47}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_External_Pathname (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_External_Pathname() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_External_Pathname}@anchor{b48}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_External_Pathname (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Pathname_Suffix() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Pathname_Suffix}@anchor{b49}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Pathname_Suffix (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Pathname_Suffix() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Pathname_Suffix}@anchor{b4a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Pathname_Suffix (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Pathname_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Pathname_Expression}@anchor{b4b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Pathname_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Pathname_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Pathname_Expression}@anchor{b4c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Pathname_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_In_Formal_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_In_Formal_Flag}@anchor{b4d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_In_Formal_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_In_Formal_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_In_Formal_Flag}@anchor{b4e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_In_Formal_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Inertial_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Inertial_Flag}@anchor{b4f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Inertial_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Inertial_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Inertial_Flag}@anchor{b50}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Inertial_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Slice_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Slice_Subtype}@anchor{b51}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Slice_Subtype (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Slice_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Slice_Subtype}@anchor{b52}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Slice_Subtype (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Suffix() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Suffix}@anchor{b53}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Suffix (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Suffix() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Suffix}@anchor{b54}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Suffix (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Index_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Index_Subtype}@anchor{b55}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Index_Subtype (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Index_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Index_Subtype}@anchor{b56}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Index_Subtype (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Parameter() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Parameter}@anchor{b57}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Parameter (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Parameter() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Parameter}@anchor{b58}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Parameter (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Parameter_2() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Parameter_2}@anchor{b59}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Parameter_2 (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Parameter_2() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Parameter_2}@anchor{b5a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Parameter_2 (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Parameter_3() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Parameter_3}@anchor{b5b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Parameter_3 (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Parameter_3() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Parameter_3}@anchor{b5c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Parameter_3 (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Parameter_4() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Parameter_4}@anchor{b5d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Parameter_4 (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Parameter_4() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Parameter_4}@anchor{b5e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Parameter_4 (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Attr_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Attr_Chain}@anchor{b5f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Attr_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Attr_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Attr_Chain}@anchor{b60}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Attr_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Attribute_Implicit_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Attribute_Implicit_Declaration}@anchor{b61}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Attribute_Implicit_Declaration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Attribute_Implicit_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Attribute_Implicit_Declaration}@anchor{b62}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Attribute_Implicit_Declaration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Actual_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Actual_Type}@anchor{b63}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Actual_Type (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Actual_Type() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Actual_Type}@anchor{b64}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Actual_Type (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Actual_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Actual_Type_Definition}@anchor{b65}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Actual_Type_Definition (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Actual_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Actual_Type_Definition}@anchor{b66}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Actual_Type_Definition (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Association_Chain}@anchor{b67}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Association_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Association_Chain}@anchor{b68}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Association_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Individual_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Individual_Association_Chain}@anchor{b69}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Individual_Association_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Individual_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Individual_Association_Chain}@anchor{b6a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Individual_Association_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Subprogram_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Subprogram_Association_Chain}@anchor{b6b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Subprogram_Association_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Subprogram_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Subprogram_Association_Chain}@anchor{b6c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Subprogram_Association_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Aggregate_Info() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Aggregate_Info}@anchor{b6d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Aggregate_Info (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Aggregate_Info() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Aggregate_Info}@anchor{b6e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Aggregate_Info (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Sub_Aggregate_Info() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Sub_Aggregate_Info}@anchor{b6f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Sub_Aggregate_Info (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Sub_Aggregate_Info() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Sub_Aggregate_Info}@anchor{b70}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Sub_Aggregate_Info (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Aggr_Dynamic_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Aggr_Dynamic_Flag}@anchor{b71}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Aggr_Dynamic_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Aggr_Dynamic_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Aggr_Dynamic_Flag}@anchor{b72}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Aggr_Dynamic_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Aggr_Min_Length() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Aggr_Min_Length}@anchor{b73}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Aggr_Min_Length (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Aggr_Min_Length() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Aggr_Min_Length}@anchor{b74}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Aggr_Min_Length (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Aggr_Low_Limit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Aggr_Low_Limit}@anchor{b75}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Aggr_Low_Limit (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Aggr_Low_Limit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Aggr_Low_Limit}@anchor{b76}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Aggr_Low_Limit (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Aggr_High_Limit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Aggr_High_Limit}@anchor{b77}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Aggr_High_Limit (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Aggr_High_Limit() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Aggr_High_Limit}@anchor{b78}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Aggr_High_Limit (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Aggr_Others_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Aggr_Others_Flag}@anchor{b79}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Aggr_Others_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Aggr_Others_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Aggr_Others_Flag}@anchor{b7a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Aggr_Others_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Aggr_Named_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Aggr_Named_Flag}@anchor{b7b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Aggr_Named_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Aggr_Named_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Aggr_Named_Flag}@anchor{b7c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Aggr_Named_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Aggregate_Expand_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Aggregate_Expand_Flag}@anchor{b7d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Aggregate_Expand_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Aggregate_Expand_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Aggregate_Expand_Flag}@anchor{b7e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Aggregate_Expand_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Determined_Aggregate_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Determined_Aggregate_Flag}@anchor{b7f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Determined_Aggregate_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Determined_Aggregate_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Determined_Aggregate_Flag}@anchor{b80}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Determined_Aggregate_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Association_Choices_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Association_Choices_Chain}@anchor{b81}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Association_Choices_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Association_Choices_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Association_Choices_Chain}@anchor{b82}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Association_Choices_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Case_Statement_Alternative_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Case_Statement_Alternative_Chain}@anchor{b83}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Case_Statement_Alternative_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Case_Statement_Alternative_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Case_Statement_Alternative_Chain}@anchor{b84}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Case_Statement_Alternative_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Matching_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Matching_Flag}@anchor{b85}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Matching_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Matching_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Matching_Flag}@anchor{b86}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Matching_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Choice_Staticness() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Choice_Staticness}@anchor{b87}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Choice_Staticness (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Choice_Staticness() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Choice_Staticness}@anchor{b88}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Choice_Staticness (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Procedure_Call() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Procedure_Call}@anchor{b89}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Procedure_Call (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Procedure_Call() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Procedure_Call}@anchor{b8a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Procedure_Call (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Implementation() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Implementation}@anchor{b8b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Implementation (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Implementation() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Implementation}@anchor{b8c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Implementation (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Parameter_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Parameter_Association_Chain}@anchor{b8d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Parameter_Association_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Parameter_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Parameter_Association_Chain}@anchor{b8e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Parameter_Association_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Method_Object() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Method_Object}@anchor{b8f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Method_Object (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Method_Object() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Method_Object}@anchor{b90}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Method_Object (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Subtype_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Subtype_Type_Mark}@anchor{b91}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Subtype_Type_Mark (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Subtype_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Subtype_Type_Mark}@anchor{b92}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Subtype_Type_Mark (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Subnature_Nature_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Subnature_Nature_Mark}@anchor{b93}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Subnature_Nature_Mark (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Subnature_Nature_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Subnature_Nature_Mark}@anchor{b94}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Subnature_Nature_Mark (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Type_Conversion_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Type_Conversion_Subtype}@anchor{b95}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Type_Conversion_Subtype (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Type_Conversion_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Type_Conversion_Subtype}@anchor{b96}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Type_Conversion_Subtype (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Type_Mark}@anchor{b97}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Type_Mark (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Type_Mark}@anchor{b98}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Type_Mark (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_File_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_File_Type_Mark}@anchor{b99}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_File_Type_Mark (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_File_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_File_Type_Mark}@anchor{b9a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_File_Type_Mark (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Return_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Return_Type_Mark}@anchor{b9b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Return_Type_Mark (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Return_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Return_Type_Mark}@anchor{b9c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Return_Type_Mark (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Has_Disconnect_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Disconnect_Flag}@anchor{b9d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Disconnect_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Disconnect_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Disconnect_Flag}@anchor{b9e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Disconnect_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Active_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Active_Flag}@anchor{b9f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Active_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Active_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Active_Flag}@anchor{ba0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Active_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Is_Within_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Is_Within_Flag}@anchor{ba1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Is_Within_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Is_Within_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Is_Within_Flag}@anchor{ba2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Is_Within_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Type_Marks_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Type_Marks_List}@anchor{ba3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Type_Marks_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Type_Marks_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Type_Marks_List}@anchor{ba4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Type_Marks_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Implicit_Alias_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Implicit_Alias_Flag}@anchor{ba5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Implicit_Alias_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Implicit_Alias_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Implicit_Alias_Flag}@anchor{ba6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Implicit_Alias_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Alias_Signature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Alias_Signature}@anchor{ba7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Alias_Signature (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Alias_Signature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Alias_Signature}@anchor{ba8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Alias_Signature (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Attribute_Signature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Attribute_Signature}@anchor{ba9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Attribute_Signature (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Attribute_Signature() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Attribute_Signature}@anchor{baa}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Attribute_Signature (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Overload_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Overload_List}@anchor{bab}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Overload_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Overload_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Overload_List}@anchor{bac}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Overload_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Simple_Name_Identifier() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Simple_Name_Identifier}@anchor{bad}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Simple_Name_Identifier (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Simple_Name_Identifier() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Simple_Name_Identifier}@anchor{bae}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Simple_Name_Identifier (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{NameId}) – 
@end itemize

@end deffn

@geindex Get_Simple_Name_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Simple_Name_Subtype}@anchor{baf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Simple_Name_Subtype (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Simple_Name_Subtype() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Simple_Name_Subtype}@anchor{bb0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Simple_Name_Subtype (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Protected_Type_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Protected_Type_Body}@anchor{bb1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Protected_Type_Body (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Protected_Type_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Protected_Type_Body}@anchor{bb2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Protected_Type_Body (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Protected_Type_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Protected_Type_Declaration}@anchor{bb3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Protected_Type_Declaration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Protected_Type_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Protected_Type_Declaration}@anchor{bb4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Protected_Type_Declaration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Use_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Use_Flag}@anchor{bb5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Use_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Use_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Use_Flag}@anchor{bb6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Use_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Elaborated_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Elaborated_Flag}@anchor{bb7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Elaborated_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Elaborated_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Elaborated_Flag}@anchor{bb8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Elaborated_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_End_Has_Reserved_Id() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_End_Has_Reserved_Id}@anchor{bb9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_End_Has_Reserved_Id (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_End_Has_Reserved_Id() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_End_Has_Reserved_Id}@anchor{bba}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_End_Has_Reserved_Id (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_End_Has_Identifier() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_End_Has_Identifier}@anchor{bbb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_End_Has_Identifier (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_End_Has_Identifier() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_End_Has_Identifier}@anchor{bbc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_End_Has_Identifier (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_End_Has_Postponed() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_End_Has_Postponed}@anchor{bbd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_End_Has_Postponed (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_End_Has_Postponed() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_End_Has_Postponed}@anchor{bbe}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_End_Has_Postponed (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Label() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Label}@anchor{bbf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Label (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Label() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Label}@anchor{bc0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Label (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Begin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Begin}@anchor{bc1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Begin (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Begin() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Begin}@anchor{bc2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Begin (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_End() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_End}@anchor{bc3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_End (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_End() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_End}@anchor{bc4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_End (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Is() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Is}@anchor{bc5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Is (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Is() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Is}@anchor{bc6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Is (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Pure() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Pure}@anchor{bc7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Pure (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Pure() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Pure}@anchor{bc8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Pure (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Body}@anchor{bc9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Body (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Body() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Body}@anchor{bca}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Body (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Parameter() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Parameter}@anchor{bcb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Parameter (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Parameter() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Parameter}@anchor{bcc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Parameter (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Component() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Component}@anchor{bcd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Component (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Component() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Component}@anchor{bce}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Component (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Identifier_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Identifier_List}@anchor{bcf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Identifier_List (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Identifier_List() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Identifier_List}@anchor{bd0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Identifier_List (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Mode() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Mode}@anchor{bd1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Mode (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Mode() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Mode}@anchor{bd2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Mode (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Class() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Class}@anchor{bd3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Class (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Class() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Class}@anchor{bd4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Class (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Has_Delay_Mechanism() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Has_Delay_Mechanism}@anchor{bd5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Has_Delay_Mechanism (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Has_Delay_Mechanism() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Has_Delay_Mechanism}@anchor{bd6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Has_Delay_Mechanism (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Suspend_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Suspend_Flag}@anchor{bd7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Suspend_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Suspend_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Suspend_Flag}@anchor{bd8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Suspend_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Stop_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Stop_Flag}@anchor{bd9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Stop_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Stop_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Stop_Flag}@anchor{bda}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Stop_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Is_Ref() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Is_Ref}@anchor{bdb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Is_Ref (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Is_Ref() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Is_Ref}@anchor{bdc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Is_Ref (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Is_Forward_Ref() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Is_Forward_Ref}@anchor{bdd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Is_Forward_Ref (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Is_Forward_Ref() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Is_Forward_Ref}@anchor{bde}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Is_Forward_Ref (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Psl_Property() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Psl_Property}@anchor{bdf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Psl_Property (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{PSLNode}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Psl_Property() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Psl_Property}@anchor{be0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Psl_Property (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{PSLNode}) – 
@end itemize

@end deffn

@geindex Get_Psl_Sequence() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Psl_Sequence}@anchor{be1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Psl_Sequence (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{PSLNode}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Psl_Sequence() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Psl_Sequence}@anchor{be2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Psl_Sequence (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{PSLNode}) – 
@end itemize

@end deffn

@geindex Get_Psl_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Psl_Declaration}@anchor{be3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Psl_Declaration (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{PSLNode}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Psl_Declaration() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Psl_Declaration}@anchor{be4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Psl_Declaration (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{PSLNode}) – 
@end itemize

@end deffn

@geindex Get_Psl_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Psl_Expression}@anchor{be5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Psl_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{PSLNode}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Psl_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Psl_Expression}@anchor{be6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Psl_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{PSLNode}) – 
@end itemize

@end deffn

@geindex Get_Psl_Boolean() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Psl_Boolean}@anchor{be7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Psl_Boolean (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{PSLNode}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Psl_Boolean() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Psl_Boolean}@anchor{be8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Psl_Boolean (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{PSLNode}) – 
@end itemize

@end deffn

@geindex Get_PSL_Clock() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_PSL_Clock}@anchor{be9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_PSL_Clock (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{PSLNode}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_PSL_Clock() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_PSL_Clock}@anchor{bea}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_PSL_Clock (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{PSLNode}) – 
@end itemize

@end deffn

@geindex Get_PSL_NFA() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_PSL_NFA}@anchor{beb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_PSL_NFA (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{PSLNFA}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_PSL_NFA() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_PSL_NFA}@anchor{bec}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_PSL_NFA (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{PSLNFA}) – 
@end itemize

@end deffn

@geindex Get_PSL_Nbr_States() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_PSL_Nbr_States}@anchor{bed}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_PSL_Nbr_States (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Int32}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_PSL_Nbr_States() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_PSL_Nbr_States}@anchor{bee}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_PSL_Nbr_States (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Int32}) – 
@end itemize

@end deffn

@geindex Get_PSL_Clock_Sensitivity() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_PSL_Clock_Sensitivity}@anchor{bef}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_PSL_Clock_Sensitivity (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_PSL_Clock_Sensitivity() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_PSL_Clock_Sensitivity}@anchor{bf0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_PSL_Clock_Sensitivity (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_PSL_EOS_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_PSL_EOS_Flag}@anchor{bf1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_PSL_EOS_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_PSL_EOS_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_PSL_EOS_Flag}@anchor{bf2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_PSL_EOS_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_PSL_Abort_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_PSL_Abort_Flag}@anchor{bf3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_PSL_Abort_Flag (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Boolean}, bound= c_bool@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_bool})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_PSL_Abort_Flag() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_PSL_Abort_Flag}@anchor{bf4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_PSL_Abort_Flag (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Boolean}) – 
@end itemize

@end deffn

@geindex Get_Count_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Count_Expression}@anchor{bf5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Count_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Count_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Count_Expression}@anchor{bf6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Count_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Clock_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Clock_Expression}@anchor{bf7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Clock_Expression (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Clock_Expression() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Clock_Expression}@anchor{bf8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Clock_Expression (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Default_Clock() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Default_Clock}@anchor{bf9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Default_Clock (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Default_Clock() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Default_Clock}@anchor{bfa}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Default_Clock (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Foreign_Node() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Foreign_Node}@anchor{bfb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Foreign_Node (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Int32}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Foreign_Node() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Foreign_Node}@anchor{bfc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Foreign_Node (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Int32}) – 
@end itemize

@end deffn

@geindex Get_Suspend_State_Index() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Suspend_State_Index}@anchor{bfd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Suspend_State_Index (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Int32}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Suspend_State_Index() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Suspend_State_Index}@anchor{bfe}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Suspend_State_Index (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Int32}) – 
@end itemize

@end deffn

@geindex Get_Suspend_State_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Suspend_State_Chain}@anchor{bff}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Suspend_State_Chain (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Suspend_State_Chain() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Suspend_State_Chain}@anchor{c00}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Suspend_State_Chain (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Suspend_State_Last() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Suspend_State_Last}@anchor{c01}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Suspend_State_Last (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Suspend_State_Last() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Suspend_State_Last}@anchor{c02}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Suspend_State_Last (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn

@geindex Get_Suspend_State_Decl() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Get_Suspend_State_Decl}@anchor{c03}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Get_Suspend_State_Decl (obj)

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Parameters: 
@code{obj} (@code{Iir}) – 

@end deffn

@geindex Set_Suspend_State_Decl() (in module pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Set_Suspend_State_Decl}@anchor{c04}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes.Set_Suspend_State_Decl (obj, value)

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}


@*Parameters: 

@itemize *

@item 
@code{obj} (@code{Iir}) – 

@item 
@code{value} (@code{Iir}) – 
@end itemize

@end deffn


__________________________________________________________________


`Classes'

@geindex Iir_Kind (class in pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Iir_Kind}@anchor{815}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes.Iir_Kind (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-0536f252af06a368bc36c20bb81a8c947bca0593,,,[graphviz],png}
@end deffn

@geindex Iir_Kinds (class in pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Iir_Kinds}@anchor{c05}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes.Iir_Kinds

@subsubheading Inheritance

@image{inheritance-7aae59ce66161c45b21f1d5e3a261ab8ab70dc23,,,[graphviz],png}
@end deffn

@geindex Iir_Mode (class in pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Iir_Mode}@anchor{c06}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes.Iir_Mode (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-57f0e8b91c82de6e3d36a4b236243881a88e9ef0,,,[graphviz],png}
@end deffn

@geindex ScalarSize (class in pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes ScalarSize}@anchor{c07}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes.ScalarSize (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-a972576b8ee6b48a52e5c660f6447358e158a729,,,[graphviz],png}
@end deffn

@geindex Iir_Staticness (class in pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Iir_Staticness}@anchor{c08}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes.Iir_Staticness (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-db07abb420e4718f52f1368d69a61c7dd76fa7b3,,,[graphviz],png}
@end deffn

@geindex Iir_Constraint (class in pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Iir_Constraint}@anchor{c09}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes.Iir_Constraint (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-3c6fff0768560cf9a11966724863aec2dd21dc4b,,,[graphviz],png}
@end deffn

@geindex Iir_Delay_Mechanism (class in pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Iir_Delay_Mechanism}@anchor{c0a}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes.Iir_Delay_Mechanism (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-07b7eb2228e746ff9416842de6ae497243ba0654,,,[graphviz],png}
@end deffn

@geindex DateStateType (class in pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes DateStateType}@anchor{c0b}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes.DateStateType (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-0aae8686a611164fb74d0f660cfa506abfe13c5a,,,[graphviz],png}
@end deffn

@geindex NumberBaseType (class in pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes NumberBaseType}@anchor{c0c}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes.NumberBaseType (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-32a2358250014933b8c7cec5d2f0d4b4fa056b82,,,[graphviz],png}
@end deffn

@geindex Iir_Predefined (class in pyGHDL.libghdl.vhdl.nodes)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes pyGHDL libghdl vhdl nodes Iir_Predefined}@anchor{c0d}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes.Iir_Predefined (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-40c5a039f3180d99d1b6b290eec3577f7e9ba2bb,,,[graphviz],png}
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl nodes_meta,pyGHDL libghdl vhdl nodes_utils,pyGHDL libghdl vhdl nodes,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta doc}@anchor{c0f}@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta module-pyGHDL libghdl vhdl nodes_meta}@anchor{32}@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyghdl-libghdl-vhdl-nodes-meta}@anchor{c10}
@subsubsection @code{pyGHDL.libghdl.vhdl.nodes_meta}


@geindex module; pyGHDL.libghdl.vhdl.nodes_meta

`Functions'


@itemize -

@item 
@ref{c11,,get_fields_first()}:
Return the list of fields for node @code{K}.

@item 
@ref{c12,,get_fields_last()}:
Return the list of fields for node @code{K}.

@item 
@ref{c13,,get_field_by_index()}:

@item 
@ref{c14,,get_field_type()}:
Undocumented.

@item 
@ref{c15,,get_field_attribute()}:
Undocumented.

@item 
@ref{c16,,Has_First_Design_Unit()}:

@item 
@ref{c17,,Has_Last_Design_Unit()}:

@item 
@ref{c18,,Has_Library_Declaration()}:

@item 
@ref{c19,,Has_File_Checksum()}:

@item 
@ref{c1a,,Has_Analysis_Time_Stamp()}:

@item 
@ref{c1b,,Has_Design_File_Source()}:

@item 
@ref{c1c,,Has_Library()}:

@item 
@ref{c1d,,Has_File_Dependence_List()}:

@item 
@ref{c1e,,Has_Design_File_Filename()}:

@item 
@ref{c1f,,Has_Design_File_Directory()}:

@item 
@ref{c20,,Has_Design_File()}:

@item 
@ref{c21,,Has_Design_File_Chain()}:

@item 
@ref{c22,,Has_Library_Directory()}:

@item 
@ref{c23,,Has_Date()}:

@item 
@ref{c24,,Has_Context_Items()}:

@item 
@ref{c25,,Has_Dependence_List()}:

@item 
@ref{c26,,Has_Analysis_Checks_List()}:

@item 
@ref{c27,,Has_Date_State()}:

@item 
@ref{c28,,Has_Guarded_Target_State()}:

@item 
@ref{c29,,Has_Library_Unit()}:

@item 
@ref{c2a,,Has_Hash_Chain()}:

@item 
@ref{c2b,,Has_Design_Unit_Source_Pos()}:

@item 
@ref{c2c,,Has_Design_Unit_Source_Line()}:

@item 
@ref{c2d,,Has_Design_Unit_Source_Col()}:

@item 
@ref{c2e,,Has_Value()}:

@item 
@ref{c2f,,Has_Enum_Pos()}:

@item 
@ref{c30,,Has_Physical_Literal()}:

@item 
@ref{c31,,Has_Fp_Value()}:

@item 
@ref{c32,,Has_Simple_Aggregate_List()}:

@item 
@ref{c33,,Has_String8_Id()}:

@item 
@ref{c34,,Has_String_Length()}:

@item 
@ref{c35,,Has_Bit_String_Base()}:

@item 
@ref{c36,,Has_Has_Signed()}:

@item 
@ref{c37,,Has_Has_Sign()}:

@item 
@ref{c38,,Has_Has_Length()}:

@item 
@ref{c39,,Has_Literal_Length()}:

@item 
@ref{c3a,,Has_Literal_Origin()}:

@item 
@ref{c3b,,Has_Range_Origin()}:

@item 
@ref{c3c,,Has_Literal_Subtype()}:

@item 
@ref{c3d,,Has_Allocator_Subtype()}:

@item 
@ref{c3e,,Has_Entity_Class()}:

@item 
@ref{c3f,,Has_Entity_Name_List()}:

@item 
@ref{c40,,Has_Attribute_Designator()}:

@item 
@ref{c41,,Has_Attribute_Specification_Chain()}:

@item 
@ref{c42,,Has_Attribute_Specification()}:

@item 
@ref{c43,,Has_Static_Attribute_Flag()}:

@item 
@ref{c44,,Has_Signal_List()}:

@item 
@ref{c45,,Has_Quantity_List()}:

@item 
@ref{c46,,Has_Designated_Entity()}:

@item 
@ref{c47,,Has_Formal()}:

@item 
@ref{c48,,Has_Actual()}:

@item 
@ref{c49,,Has_Open_Actual()}:

@item 
@ref{c4a,,Has_Actual_Conversion()}:

@item 
@ref{c4b,,Has_Formal_Conversion()}:

@item 
@ref{c4c,,Has_Whole_Association_Flag()}:

@item 
@ref{c4d,,Has_Collapse_Signal_Flag()}:

@item 
@ref{c4e,,Has_Artificial_Flag()}:

@item 
@ref{c4f,,Has_Open_Flag()}:

@item 
@ref{c50,,Has_After_Drivers_Flag()}:

@item 
@ref{c51,,Has_We_Value()}:

@item 
@ref{c52,,Has_Time()}:

@item 
@ref{c53,,Has_Associated_Expr()}:

@item 
@ref{c54,,Has_Associated_Block()}:

@item 
@ref{c55,,Has_Associated_Chain()}:

@item 
@ref{c56,,Has_Choice_Name()}:

@item 
@ref{c57,,Has_Choice_Expression()}:

@item 
@ref{c58,,Has_Choice_Range()}:

@item 
@ref{c59,,Has_Same_Alternative_Flag()}:

@item 
@ref{c5a,,Has_Element_Type_Flag()}:

@item 
@ref{c5b,,Has_Architecture()}:

@item 
@ref{c5c,,Has_Block_Specification()}:

@item 
@ref{c5d,,Has_Prev_Block_Configuration()}:

@item 
@ref{c5e,,Has_Configuration_Item_Chain()}:

@item 
@ref{c5f,,Has_Attribute_Value_Chain()}:

@item 
@ref{c60,,Has_Spec_Chain()}:

@item 
@ref{c61,,Has_Value_Chain()}:

@item 
@ref{c62,,Has_Attribute_Value_Spec_Chain()}:

@item 
@ref{c63,,Has_Entity_Name()}:

@item 
@ref{c64,,Has_Package()}:

@item 
@ref{c65,,Has_Package_Body()}:

@item 
@ref{c66,,Has_Instance_Package_Body()}:

@item 
@ref{c67,,Has_Need_Body()}:

@item 
@ref{c68,,Has_Macro_Expanded_Flag()}:

@item 
@ref{c69,,Has_Need_Instance_Bodies()}:

@item 
@ref{c6a,,Has_Hierarchical_Name()}:

@item 
@ref{c6b,,Has_Vunit_Item_Chain()}:

@item 
@ref{c6c,,Has_Bound_Vunit_Chain()}:

@item 
@ref{c6d,,Has_Verification_Block_Configuration()}:

@item 
@ref{c6e,,Has_Block_Configuration()}:

@item 
@ref{c6f,,Has_Concurrent_Statement_Chain()}:

@item 
@ref{c70,,Has_Chain()}:

@item 
@ref{c71,,Has_Port_Chain()}:

@item 
@ref{c72,,Has_Generic_Chain()}:

@item 
@ref{c73,,Has_Type()}:

@item 
@ref{c74,,Has_Subtype_Indication()}:

@item 
@ref{c75,,Has_Discrete_Range()}:

@item 
@ref{c76,,Has_Type_Definition()}:

@item 
@ref{c77,,Has_Subtype_Definition()}:

@item 
@ref{c78,,Has_Incomplete_Type_Declaration()}:

@item 
@ref{c79,,Has_Interface_Type_Subprograms()}:

@item 
@ref{c7a,,Has_Interface_Type_Definition()}:

@item 
@ref{c7b,,Has_Nature_Definition()}:

@item 
@ref{c7c,,Has_Nature()}:

@item 
@ref{c7d,,Has_Subnature_Indication()}:

@item 
@ref{c7e,,Has_Reference_Terminal_Flag()}:

@item 
@ref{c7f,,Has_Mode()}:

@item 
@ref{c80,,Has_Guarded_Signal_Flag()}:

@item 
@ref{c81,,Has_Signal_Kind()}:

@item 
@ref{c82,,Has_Base_Name()}:

@item 
@ref{c83,,Has_Interface_Declaration_Chain()}:

@item 
@ref{c84,,Has_Default_Subprogram()}:

@item 
@ref{c85,,Has_Associated_Subprogram()}:

@item 
@ref{c86,,Has_Subprogram_Specification()}:

@item 
@ref{c87,,Has_Sequential_Statement_Chain()}:

@item 
@ref{c88,,Has_Simultaneous_Statement_Chain()}:

@item 
@ref{c89,,Has_Subprogram_Body()}:

@item 
@ref{c8a,,Has_Overload_Number()}:

@item 
@ref{c8b,,Has_Subprogram_Depth()}:

@item 
@ref{c8c,,Has_Subprogram_Hash()}:

@item 
@ref{c8d,,Has_Impure_Depth()}:

@item 
@ref{c8e,,Has_Return_Type()}:

@item 
@ref{c8f,,Has_Implicit_Definition()}:

@item 
@ref{c90,,Has_Uninstantiated_Subprogram_Name()}:

@item 
@ref{c91,,Has_Default_Value()}:

@item 
@ref{c92,,Has_Deferred_Declaration()}:

@item 
@ref{c93,,Has_Deferred_Declaration_Flag()}:

@item 
@ref{c94,,Has_Shared_Flag()}:

@item 
@ref{c95,,Has_Design_Unit()}:

@item 
@ref{c96,,Has_Block_Statement()}:

@item 
@ref{c97,,Has_Signal_Driver()}:

@item 
@ref{c98,,Has_Declaration_Chain()}:

@item 
@ref{c99,,Has_File_Logical_Name()}:

@item 
@ref{c9a,,Has_File_Open_Kind()}:

@item 
@ref{c9b,,Has_Element_Position()}:

@item 
@ref{c9c,,Has_Use_Clause_Chain()}:

@item 
@ref{c9d,,Has_Context_Reference_Chain()}:

@item 
@ref{c9e,,Has_Inherit_Spec_Chain()}:

@item 
@ref{c9f,,Has_Selected_Name()}:

@item 
@ref{ca0,,Has_Type_Declarator()}:

@item 
@ref{ca1,,Has_Complete_Type_Definition()}:

@item 
@ref{ca2,,Has_Incomplete_Type_Ref_Chain()}:

@item 
@ref{ca3,,Has_Associated_Type()}:

@item 
@ref{ca4,,Has_Enumeration_Literal_List()}:

@item 
@ref{ca5,,Has_Entity_Class_Entry_Chain()}:

@item 
@ref{ca6,,Has_Group_Constituent_List()}:

@item 
@ref{ca7,,Has_Unit_Chain()}:

@item 
@ref{ca8,,Has_Primary_Unit()}:

@item 
@ref{ca9,,Has_Identifier()}:

@item 
@ref{caa,,Has_Label()}:

@item 
@ref{cab,,Has_Return_Identifier()}:

@item 
@ref{cac,,Has_Visible_Flag()}:

@item 
@ref{cad,,Has_Range_Constraint()}:

@item 
@ref{cae,,Has_Direction()}:

@item 
@ref{caf,,Has_Left_Limit()}:

@item 
@ref{cb0,,Has_Right_Limit()}:

@item 
@ref{cb1,,Has_Left_Limit_Expr()}:

@item 
@ref{cb2,,Has_Right_Limit_Expr()}:

@item 
@ref{cb3,,Has_Parent_Type()}:

@item 
@ref{cb4,,Has_Simple_Nature()}:

@item 
@ref{cb5,,Has_Base_Nature()}:

@item 
@ref{cb6,,Has_Resolution_Indication()}:

@item 
@ref{cb7,,Has_Record_Element_Resolution_Chain()}:

@item 
@ref{cb8,,Has_Tolerance()}:

@item 
@ref{cb9,,Has_Plus_Terminal_Name()}:

@item 
@ref{cba,,Has_Minus_Terminal_Name()}:

@item 
@ref{cbb,,Has_Plus_Terminal()}:

@item 
@ref{cbc,,Has_Minus_Terminal()}:

@item 
@ref{cbd,,Has_Magnitude_Expression()}:

@item 
@ref{cbe,,Has_Phase_Expression()}:

@item 
@ref{cbf,,Has_Power_Expression()}:

@item 
@ref{cc0,,Has_Simultaneous_Left()}:

@item 
@ref{cc1,,Has_Simultaneous_Right()}:

@item 
@ref{cc2,,Has_Text_File_Flag()}:

@item 
@ref{cc3,,Has_Only_Characters_Flag()}:

@item 
@ref{cc4,,Has_Is_Character_Type()}:

@item 
@ref{cc5,,Has_Nature_Staticness()}:

@item 
@ref{cc6,,Has_Type_Staticness()}:

@item 
@ref{cc7,,Has_Constraint_State()}:

@item 
@ref{cc8,,Has_Index_Subtype_List()}:

@item 
@ref{cc9,,Has_Index_Subtype_Definition_List()}:

@item 
@ref{cca,,Has_Element_Subtype_Indication()}:

@item 
@ref{ccb,,Has_Element_Subtype()}:

@item 
@ref{ccc,,Has_Element_Subnature_Indication()}:

@item 
@ref{ccd,,Has_Element_Subnature()}:

@item 
@ref{cce,,Has_Index_Constraint_List()}:

@item 
@ref{ccf,,Has_Array_Element_Constraint()}:

@item 
@ref{cd0,,Has_Has_Array_Constraint_Flag()}:

@item 
@ref{cd1,,Has_Has_Element_Constraint_Flag()}:

@item 
@ref{cd2,,Has_Elements_Declaration_List()}:

@item 
@ref{cd3,,Has_Owned_Elements_Chain()}:

@item 
@ref{cd4,,Has_Designated_Type()}:

@item 
@ref{cd5,,Has_Designated_Subtype_Indication()}:

@item 
@ref{cd6,,Has_Index_List()}:

@item 
@ref{cd7,,Has_Reference()}:

@item 
@ref{cd8,,Has_Nature_Declarator()}:

@item 
@ref{cd9,,Has_Across_Type_Mark()}:

@item 
@ref{cda,,Has_Through_Type_Mark()}:

@item 
@ref{cdb,,Has_Across_Type_Definition()}:

@item 
@ref{cdc,,Has_Through_Type_Definition()}:

@item 
@ref{cdd,,Has_Across_Type()}:

@item 
@ref{cde,,Has_Through_Type()}:

@item 
@ref{cdf,,Has_Target()}:

@item 
@ref{ce0,,Has_Waveform_Chain()}:

@item 
@ref{ce1,,Has_Guard()}:

@item 
@ref{ce2,,Has_Delay_Mechanism()}:

@item 
@ref{ce3,,Has_Reject_Time_Expression()}:

@item 
@ref{ce4,,Has_Force_Mode()}:

@item 
@ref{ce5,,Has_Has_Force_Mode()}:

@item 
@ref{ce6,,Has_Sensitivity_List()}:

@item 
@ref{ce7,,Has_Process_Origin()}:

@item 
@ref{ce8,,Has_Package_Origin()}:

@item 
@ref{ce9,,Has_Condition_Clause()}:

@item 
@ref{cea,,Has_Break_Element()}:

@item 
@ref{ceb,,Has_Selector_Quantity()}:

@item 
@ref{cec,,Has_Break_Quantity()}:

@item 
@ref{ced,,Has_Timeout_Clause()}:

@item 
@ref{cee,,Has_Postponed_Flag()}:

@item 
@ref{cef,,Has_Callees_List()}:

@item 
@ref{cf0,,Has_Passive_Flag()}:

@item 
@ref{cf1,,Has_Resolution_Function_Flag()}:

@item 
@ref{cf2,,Has_Wait_State()}:

@item 
@ref{cf3,,Has_All_Sensitized_State()}:

@item 
@ref{cf4,,Has_Seen_Flag()}:

@item 
@ref{cf5,,Has_Pure_Flag()}:

@item 
@ref{cf6,,Has_Foreign_Flag()}:

@item 
@ref{cf7,,Has_Resolved_Flag()}:

@item 
@ref{cf8,,Has_Signal_Type_Flag()}:

@item 
@ref{cf9,,Has_Has_Signal_Flag()}:

@item 
@ref{cfa,,Has_Purity_State()}:

@item 
@ref{cfb,,Has_Elab_Flag()}:

@item 
@ref{cfc,,Has_Vendor_Library_Flag()}:

@item 
@ref{cfd,,Has_Configuration_Mark_Flag()}:

@item 
@ref{cfe,,Has_Configuration_Done_Flag()}:

@item 
@ref{cff,,Has_Index_Constraint_Flag()}:

@item 
@ref{d00,,Has_Hide_Implicit_Flag()}:

@item 
@ref{d01,,Has_Assertion_Condition()}:

@item 
@ref{d02,,Has_Report_Expression()}:

@item 
@ref{d03,,Has_Severity_Expression()}:

@item 
@ref{d04,,Has_Instantiated_Unit()}:

@item 
@ref{d05,,Has_Instantiated_Header()}:

@item 
@ref{d06,,Has_Generic_Map_Aspect_Chain()}:

@item 
@ref{d07,,Has_Port_Map_Aspect_Chain()}:

@item 
@ref{d08,,Has_Configuration_Name()}:

@item 
@ref{d09,,Has_Component_Configuration()}:

@item 
@ref{d0a,,Has_Configuration_Specification()}:

@item 
@ref{d0b,,Has_Default_Binding_Indication()}:

@item 
@ref{d0c,,Has_Default_Configuration_Declaration()}:

@item 
@ref{d0d,,Has_Expression()}:

@item 
@ref{d0e,,Has_Conditional_Expression_Chain()}:

@item 
@ref{d0f,,Has_Allocator_Designated_Type()}:

@item 
@ref{d10,,Has_Selected_Waveform_Chain()}:

@item 
@ref{d11,,Has_Conditional_Waveform_Chain()}:

@item 
@ref{d12,,Has_Guard_Expression()}:

@item 
@ref{d13,,Has_Guard_Decl()}:

@item 
@ref{d14,,Has_Guard_Sensitivity_List()}:

@item 
@ref{d15,,Has_Attribute_Implicit_Chain()}:

@item 
@ref{d16,,Has_Block_Block_Configuration()}:

@item 
@ref{d17,,Has_Package_Header()}:

@item 
@ref{d18,,Has_Block_Header()}:

@item 
@ref{d19,,Has_Uninstantiated_Package_Name()}:

@item 
@ref{d1a,,Has_Uninstantiated_Package_Decl()}:

@item 
@ref{d1b,,Has_Associated_Package()}:

@item 
@ref{d1c,,Has_Instance_Source_File()}:

@item 
@ref{d1d,,Has_Generate_Block_Configuration()}:

@item 
@ref{d1e,,Has_Generate_Statement_Body()}:

@item 
@ref{d1f,,Has_Alternative_Label()}:

@item 
@ref{d20,,Has_Generate_Else_Clause()}:

@item 
@ref{d21,,Has_Condition()}:

@item 
@ref{d22,,Has_Else_Clause()}:

@item 
@ref{d23,,Has_Parameter_Specification()}:

@item 
@ref{d24,,Has_Parent()}:

@item 
@ref{d25,,Has_Loop_Label()}:

@item 
@ref{d26,,Has_Exit_Flag()}:

@item 
@ref{d27,,Has_Next_Flag()}:

@item 
@ref{d28,,Has_Component_Name()}:

@item 
@ref{d29,,Has_Instantiation_List()}:

@item 
@ref{d2a,,Has_Entity_Aspect()}:

@item 
@ref{d2b,,Has_Default_Entity_Aspect()}:

@item 
@ref{d2c,,Has_Binding_Indication()}:

@item 
@ref{d2d,,Has_Named_Entity()}:

@item 
@ref{d2e,,Has_Referenced_Name()}:

@item 
@ref{d2f,,Has_Expr_Staticness()}:

@item 
@ref{d30,,Has_Scalar_Size()}:

@item 
@ref{d31,,Has_Error_Origin()}:

@item 
@ref{d32,,Has_Operand()}:

@item 
@ref{d33,,Has_Left()}:

@item 
@ref{d34,,Has_Right()}:

@item 
@ref{d35,,Has_Unit_Name()}:

@item 
@ref{d36,,Has_Name()}:

@item 
@ref{d37,,Has_Group_Template_Name()}:

@item 
@ref{d38,,Has_Name_Staticness()}:

@item 
@ref{d39,,Has_Prefix()}:

@item 
@ref{d3a,,Has_Signature_Prefix()}:

@item 
@ref{d3b,,Has_External_Pathname()}:

@item 
@ref{d3c,,Has_Pathname_Suffix()}:

@item 
@ref{d3d,,Has_Pathname_Expression()}:

@item 
@ref{d3e,,Has_In_Formal_Flag()}:

@item 
@ref{d3f,,Has_Inertial_Flag()}:

@item 
@ref{d40,,Has_Slice_Subtype()}:

@item 
@ref{d41,,Has_Suffix()}:

@item 
@ref{d42,,Has_Index_Subtype()}:

@item 
@ref{d43,,Has_Parameter()}:

@item 
@ref{d44,,Has_Parameter_2()}:

@item 
@ref{d45,,Has_Parameter_3()}:

@item 
@ref{d46,,Has_Parameter_4()}:

@item 
@ref{d47,,Has_Attr_Chain()}:

@item 
@ref{d48,,Has_Attribute_Implicit_Declaration()}:

@item 
@ref{d49,,Has_Actual_Type()}:

@item 
@ref{d4a,,Has_Actual_Type_Definition()}:

@item 
@ref{d4b,,Has_Association_Chain()}:

@item 
@ref{d4c,,Has_Individual_Association_Chain()}:

@item 
@ref{d4d,,Has_Subprogram_Association_Chain()}:

@item 
@ref{d4e,,Has_Aggregate_Info()}:

@item 
@ref{d4f,,Has_Sub_Aggregate_Info()}:

@item 
@ref{d50,,Has_Aggr_Dynamic_Flag()}:

@item 
@ref{d51,,Has_Aggr_Min_Length()}:

@item 
@ref{d52,,Has_Aggr_Low_Limit()}:

@item 
@ref{d53,,Has_Aggr_High_Limit()}:

@item 
@ref{d54,,Has_Aggr_Others_Flag()}:

@item 
@ref{d55,,Has_Aggr_Named_Flag()}:

@item 
@ref{d56,,Has_Aggregate_Expand_Flag()}:

@item 
@ref{d57,,Has_Determined_Aggregate_Flag()}:

@item 
@ref{d58,,Has_Association_Choices_Chain()}:

@item 
@ref{d59,,Has_Case_Statement_Alternative_Chain()}:

@item 
@ref{d5a,,Has_Matching_Flag()}:

@item 
@ref{d5b,,Has_Choice_Staticness()}:

@item 
@ref{d5c,,Has_Procedure_Call()}:

@item 
@ref{d5d,,Has_Implementation()}:

@item 
@ref{d5e,,Has_Parameter_Association_Chain()}:

@item 
@ref{d5f,,Has_Method_Object()}:

@item 
@ref{d60,,Has_Subtype_Type_Mark()}:

@item 
@ref{d61,,Has_Subnature_Nature_Mark()}:

@item 
@ref{d62,,Has_Type_Conversion_Subtype()}:

@item 
@ref{d63,,Has_Type_Mark()}:

@item 
@ref{d64,,Has_File_Type_Mark()}:

@item 
@ref{d65,,Has_Return_Type_Mark()}:

@item 
@ref{d66,,Has_Has_Disconnect_Flag()}:

@item 
@ref{d67,,Has_Has_Active_Flag()}:

@item 
@ref{d68,,Has_Is_Within_Flag()}:

@item 
@ref{d69,,Has_Type_Marks_List()}:

@item 
@ref{d6a,,Has_Implicit_Alias_Flag()}:

@item 
@ref{d6b,,Has_Alias_Signature()}:

@item 
@ref{d6c,,Has_Attribute_Signature()}:

@item 
@ref{d6d,,Has_Overload_List()}:

@item 
@ref{d6e,,Has_Simple_Name_Identifier()}:

@item 
@ref{d6f,,Has_Simple_Name_Subtype()}:

@item 
@ref{d70,,Has_Protected_Type_Body()}:

@item 
@ref{d71,,Has_Protected_Type_Declaration()}:

@item 
@ref{d72,,Has_Use_Flag()}:

@item 
@ref{d73,,Has_Elaborated_Flag()}:

@item 
@ref{d74,,Has_End_Has_Reserved_Id()}:

@item 
@ref{d75,,Has_End_Has_Identifier()}:

@item 
@ref{d76,,Has_End_Has_Postponed()}:

@item 
@ref{d77,,Has_Has_Label()}:

@item 
@ref{d78,,Has_Has_Begin()}:

@item 
@ref{d79,,Has_Has_End()}:

@item 
@ref{d7a,,Has_Has_Is()}:

@item 
@ref{d7b,,Has_Has_Pure()}:

@item 
@ref{d7c,,Has_Has_Body()}:

@item 
@ref{d7d,,Has_Has_Parameter()}:

@item 
@ref{d7e,,Has_Has_Component()}:

@item 
@ref{d7f,,Has_Has_Identifier_List()}:

@item 
@ref{d80,,Has_Has_Mode()}:

@item 
@ref{d81,,Has_Has_Class()}:

@item 
@ref{d82,,Has_Has_Delay_Mechanism()}:

@item 
@ref{d83,,Has_Suspend_Flag()}:

@item 
@ref{d84,,Has_Stop_Flag()}:

@item 
@ref{d85,,Has_Is_Ref()}:

@item 
@ref{d86,,Has_Is_Forward_Ref()}:

@item 
@ref{d87,,Has_Psl_Property()}:

@item 
@ref{d88,,Has_Psl_Sequence()}:

@item 
@ref{d89,,Has_Psl_Declaration()}:

@item 
@ref{d8a,,Has_Psl_Expression()}:

@item 
@ref{d8b,,Has_Psl_Boolean()}:

@item 
@ref{d8c,,Has_PSL_Clock()}:

@item 
@ref{d8d,,Has_PSL_NFA()}:

@item 
@ref{d8e,,Has_PSL_Nbr_States()}:

@item 
@ref{d8f,,Has_PSL_Clock_Sensitivity()}:

@item 
@ref{d90,,Has_PSL_EOS_Flag()}:

@item 
@ref{d91,,Has_PSL_Abort_Flag()}:

@item 
@ref{d92,,Has_Count_Expression()}:

@item 
@ref{d93,,Has_Clock_Expression()}:

@item 
@ref{d94,,Has_Default_Clock()}:

@item 
@ref{d95,,Has_Foreign_Node()}:

@item 
@ref{d96,,Has_Suspend_State_Index()}:

@item 
@ref{d97,,Has_Suspend_State_Chain()}:

@item 
@ref{d98,,Has_Suspend_State_Last()}:

@item 
@ref{d99,,Has_Suspend_State_Decl()}:
@end itemize

`Classes'


@itemize -

@item 
@ref{d9a,,types}:
An enumeration.

@item 
@ref{d9b,,Attr}:
An enumeration.

@item 
@ref{d9c,,fields}:
An enumeration.
@end itemize


__________________________________________________________________


`Functions'

@geindex get_fields_first() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta get_fields_first}@anchor{c11}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.get_fields_first (K)

Return the list of fields for node @code{K}.

In Ada @code{Vhdl.Nodes_Meta.Get_Fields} returns a @code{Fields_Array}. To emulate
this array access, the API provides @code{get_fields_first} and @ref{c12,,get_fields_last()}.

The fields are sorted: first the non nodes/list of nodes, then the
nodes/lists that aren’t reference, and then the reference.

@*Parameters: 
@code{K} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{IirKind}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Node to get first array index from.


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}

@end deffn

@geindex get_fields_last() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta get_fields_last}@anchor{c12}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.get_fields_last (K)

Return the list of fields for node @code{K}.

In Ada @code{Vhdl.Nodes_Meta.Get_Fields} returns a @code{Fields_Array}. To emulate
this array access, the API provides @ref{c11,,get_fields_first()} and @code{get_fields_last}.

The fields are sorted: first the non nodes/list of nodes, then the
nodes/lists that aren’t reference, and then the reference.

@*Parameters: 
@code{K} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{IirKind}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Node to get last array index from.


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}

@end deffn

@geindex get_field_by_index() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta get_field_by_index}@anchor{c13}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.get_field_by_index (K)

@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Parameters: 
@code{K} (@code{IirKind}) – 

@end deffn

@geindex get_field_type() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta get_field_type}@anchor{c14}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.get_field_type (*args)
@end deffn

@geindex get_field_attribute() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta get_field_attribute}@anchor{c15}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.get_field_attribute (*args)
@end deffn

@geindex Has_First_Design_Unit() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_First_Design_Unit}@anchor{c16}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_First_Design_Unit (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Last_Design_Unit() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Last_Design_Unit}@anchor{c17}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Last_Design_Unit (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Library_Declaration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Library_Declaration}@anchor{c18}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Library_Declaration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_File_Checksum() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_File_Checksum}@anchor{c19}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_File_Checksum (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Analysis_Time_Stamp() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Analysis_Time_Stamp}@anchor{c1a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Analysis_Time_Stamp (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Design_File_Source() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Design_File_Source}@anchor{c1b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Design_File_Source (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Library() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Library}@anchor{c1c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Library (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_File_Dependence_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_File_Dependence_List}@anchor{c1d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_File_Dependence_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Design_File_Filename() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Design_File_Filename}@anchor{c1e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Design_File_Filename (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Design_File_Directory() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Design_File_Directory}@anchor{c1f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Design_File_Directory (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Design_File() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Design_File}@anchor{c20}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Design_File (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Design_File_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Design_File_Chain}@anchor{c21}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Design_File_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Library_Directory() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Library_Directory}@anchor{c22}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Library_Directory (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Date() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Date}@anchor{c23}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Date (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Context_Items() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Context_Items}@anchor{c24}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Context_Items (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Dependence_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Dependence_List}@anchor{c25}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Dependence_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Analysis_Checks_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Analysis_Checks_List}@anchor{c26}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Analysis_Checks_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Date_State() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Date_State}@anchor{c27}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Date_State (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Guarded_Target_State() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Guarded_Target_State}@anchor{c28}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Guarded_Target_State (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Library_Unit() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Library_Unit}@anchor{c29}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Library_Unit (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Hash_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Hash_Chain}@anchor{c2a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Hash_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Design_Unit_Source_Pos() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Design_Unit_Source_Pos}@anchor{c2b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Design_Unit_Source_Pos (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Design_Unit_Source_Line() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Design_Unit_Source_Line}@anchor{c2c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Design_Unit_Source_Line (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Design_Unit_Source_Col() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Design_Unit_Source_Col}@anchor{c2d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Design_Unit_Source_Col (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Value() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Value}@anchor{c2e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Value (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Enum_Pos() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Enum_Pos}@anchor{c2f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Enum_Pos (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Physical_Literal() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Physical_Literal}@anchor{c30}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Physical_Literal (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Fp_Value() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Fp_Value}@anchor{c31}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Fp_Value (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Simple_Aggregate_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Simple_Aggregate_List}@anchor{c32}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Simple_Aggregate_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_String8_Id() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_String8_Id}@anchor{c33}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_String8_Id (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_String_Length() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_String_Length}@anchor{c34}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_String_Length (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Bit_String_Base() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Bit_String_Base}@anchor{c35}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Bit_String_Base (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Signed() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Signed}@anchor{c36}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Signed (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Sign() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Sign}@anchor{c37}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Sign (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Length() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Length}@anchor{c38}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Length (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Literal_Length() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Literal_Length}@anchor{c39}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Literal_Length (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Literal_Origin() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Literal_Origin}@anchor{c3a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Literal_Origin (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Range_Origin() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Range_Origin}@anchor{c3b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Range_Origin (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Literal_Subtype() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Literal_Subtype}@anchor{c3c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Literal_Subtype (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Allocator_Subtype() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Allocator_Subtype}@anchor{c3d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Allocator_Subtype (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Entity_Class() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Entity_Class}@anchor{c3e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Entity_Class (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Entity_Name_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Entity_Name_List}@anchor{c3f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Entity_Name_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Attribute_Designator() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Attribute_Designator}@anchor{c40}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Attribute_Designator (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Attribute_Specification_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Attribute_Specification_Chain}@anchor{c41}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Attribute_Specification_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Attribute_Specification() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Attribute_Specification}@anchor{c42}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Attribute_Specification (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Static_Attribute_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Static_Attribute_Flag}@anchor{c43}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Static_Attribute_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Signal_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Signal_List}@anchor{c44}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Signal_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Quantity_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Quantity_List}@anchor{c45}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Quantity_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Designated_Entity() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Designated_Entity}@anchor{c46}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Designated_Entity (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Formal() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Formal}@anchor{c47}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Formal (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Actual() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Actual}@anchor{c48}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Actual (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Open_Actual() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Open_Actual}@anchor{c49}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Open_Actual (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Actual_Conversion() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Actual_Conversion}@anchor{c4a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Actual_Conversion (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Formal_Conversion() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Formal_Conversion}@anchor{c4b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Formal_Conversion (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Whole_Association_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Whole_Association_Flag}@anchor{c4c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Whole_Association_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Collapse_Signal_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Collapse_Signal_Flag}@anchor{c4d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Collapse_Signal_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Artificial_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Artificial_Flag}@anchor{c4e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Artificial_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Open_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Open_Flag}@anchor{c4f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Open_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_After_Drivers_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_After_Drivers_Flag}@anchor{c50}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_After_Drivers_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_We_Value() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_We_Value}@anchor{c51}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_We_Value (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Time() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Time}@anchor{c52}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Time (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Associated_Expr() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Associated_Expr}@anchor{c53}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Associated_Expr (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Associated_Block() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Associated_Block}@anchor{c54}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Associated_Block (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Associated_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Associated_Chain}@anchor{c55}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Associated_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Choice_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Choice_Name}@anchor{c56}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Choice_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Choice_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Choice_Expression}@anchor{c57}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Choice_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Choice_Range() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Choice_Range}@anchor{c58}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Choice_Range (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Same_Alternative_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Same_Alternative_Flag}@anchor{c59}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Same_Alternative_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Element_Type_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Element_Type_Flag}@anchor{c5a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Element_Type_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Architecture() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Architecture}@anchor{c5b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Architecture (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Block_Specification() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Block_Specification}@anchor{c5c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Block_Specification (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Prev_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Prev_Block_Configuration}@anchor{c5d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Prev_Block_Configuration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Configuration_Item_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Configuration_Item_Chain}@anchor{c5e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Configuration_Item_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Attribute_Value_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Attribute_Value_Chain}@anchor{c5f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Attribute_Value_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Spec_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Spec_Chain}@anchor{c60}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Spec_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Value_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Value_Chain}@anchor{c61}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Value_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Attribute_Value_Spec_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Attribute_Value_Spec_Chain}@anchor{c62}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Attribute_Value_Spec_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Entity_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Entity_Name}@anchor{c63}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Entity_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Package() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Package}@anchor{c64}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Package (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Package_Body() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Package_Body}@anchor{c65}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Package_Body (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Instance_Package_Body() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Instance_Package_Body}@anchor{c66}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Instance_Package_Body (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Need_Body() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Need_Body}@anchor{c67}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Need_Body (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Macro_Expanded_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Macro_Expanded_Flag}@anchor{c68}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Macro_Expanded_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Need_Instance_Bodies() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Need_Instance_Bodies}@anchor{c69}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Need_Instance_Bodies (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Hierarchical_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Hierarchical_Name}@anchor{c6a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Hierarchical_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Vunit_Item_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Vunit_Item_Chain}@anchor{c6b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Vunit_Item_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Bound_Vunit_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Bound_Vunit_Chain}@anchor{c6c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Bound_Vunit_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Verification_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Verification_Block_Configuration}@anchor{c6d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Verification_Block_Configuration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Block_Configuration}@anchor{c6e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Block_Configuration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Concurrent_Statement_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Concurrent_Statement_Chain}@anchor{c6f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Concurrent_Statement_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Chain}@anchor{c70}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Port_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Port_Chain}@anchor{c71}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Port_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Generic_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Generic_Chain}@anchor{c72}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Generic_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Type() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Type}@anchor{c73}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Type (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Subtype_Indication() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Subtype_Indication}@anchor{c74}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Subtype_Indication (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Discrete_Range() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Discrete_Range}@anchor{c75}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Discrete_Range (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Type_Definition}@anchor{c76}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Type_Definition (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Subtype_Definition() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Subtype_Definition}@anchor{c77}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Subtype_Definition (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Incomplete_Type_Declaration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Incomplete_Type_Declaration}@anchor{c78}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Incomplete_Type_Declaration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Interface_Type_Subprograms() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Interface_Type_Subprograms}@anchor{c79}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Interface_Type_Subprograms (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Interface_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Interface_Type_Definition}@anchor{c7a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Interface_Type_Definition (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Nature_Definition() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Nature_Definition}@anchor{c7b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Nature_Definition (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Nature() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Nature}@anchor{c7c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Nature (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Subnature_Indication() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Subnature_Indication}@anchor{c7d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Subnature_Indication (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Reference_Terminal_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Reference_Terminal_Flag}@anchor{c7e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Reference_Terminal_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Mode() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Mode}@anchor{c7f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Mode (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Guarded_Signal_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Guarded_Signal_Flag}@anchor{c80}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Guarded_Signal_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Signal_Kind() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Signal_Kind}@anchor{c81}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Signal_Kind (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Base_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Base_Name}@anchor{c82}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Base_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Interface_Declaration_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Interface_Declaration_Chain}@anchor{c83}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Interface_Declaration_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Default_Subprogram() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Default_Subprogram}@anchor{c84}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Default_Subprogram (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Associated_Subprogram() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Associated_Subprogram}@anchor{c85}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Associated_Subprogram (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Subprogram_Specification() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Subprogram_Specification}@anchor{c86}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Subprogram_Specification (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Sequential_Statement_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Sequential_Statement_Chain}@anchor{c87}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Sequential_Statement_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Simultaneous_Statement_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Simultaneous_Statement_Chain}@anchor{c88}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Simultaneous_Statement_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Subprogram_Body() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Subprogram_Body}@anchor{c89}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Subprogram_Body (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Overload_Number() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Overload_Number}@anchor{c8a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Overload_Number (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Subprogram_Depth() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Subprogram_Depth}@anchor{c8b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Subprogram_Depth (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Subprogram_Hash() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Subprogram_Hash}@anchor{c8c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Subprogram_Hash (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Impure_Depth() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Impure_Depth}@anchor{c8d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Impure_Depth (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Return_Type() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Return_Type}@anchor{c8e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Return_Type (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Implicit_Definition() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Implicit_Definition}@anchor{c8f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Implicit_Definition (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Uninstantiated_Subprogram_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Uninstantiated_Subprogram_Name}@anchor{c90}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Uninstantiated_Subprogram_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Default_Value() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Default_Value}@anchor{c91}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Default_Value (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Deferred_Declaration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Deferred_Declaration}@anchor{c92}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Deferred_Declaration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Deferred_Declaration_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Deferred_Declaration_Flag}@anchor{c93}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Deferred_Declaration_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Shared_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Shared_Flag}@anchor{c94}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Shared_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Design_Unit() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Design_Unit}@anchor{c95}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Design_Unit (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Block_Statement() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Block_Statement}@anchor{c96}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Block_Statement (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Signal_Driver() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Signal_Driver}@anchor{c97}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Signal_Driver (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Declaration_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Declaration_Chain}@anchor{c98}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Declaration_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_File_Logical_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_File_Logical_Name}@anchor{c99}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_File_Logical_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_File_Open_Kind() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_File_Open_Kind}@anchor{c9a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_File_Open_Kind (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Element_Position() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Element_Position}@anchor{c9b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Element_Position (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Use_Clause_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Use_Clause_Chain}@anchor{c9c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Use_Clause_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Context_Reference_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Context_Reference_Chain}@anchor{c9d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Context_Reference_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Inherit_Spec_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Inherit_Spec_Chain}@anchor{c9e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Inherit_Spec_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Selected_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Selected_Name}@anchor{c9f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Selected_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Type_Declarator() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Type_Declarator}@anchor{ca0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Type_Declarator (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Complete_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Complete_Type_Definition}@anchor{ca1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Complete_Type_Definition (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Incomplete_Type_Ref_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Incomplete_Type_Ref_Chain}@anchor{ca2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Incomplete_Type_Ref_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Associated_Type() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Associated_Type}@anchor{ca3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Associated_Type (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Enumeration_Literal_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Enumeration_Literal_List}@anchor{ca4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Enumeration_Literal_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Entity_Class_Entry_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Entity_Class_Entry_Chain}@anchor{ca5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Entity_Class_Entry_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Group_Constituent_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Group_Constituent_List}@anchor{ca6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Group_Constituent_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Unit_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Unit_Chain}@anchor{ca7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Unit_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Primary_Unit() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Primary_Unit}@anchor{ca8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Primary_Unit (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Identifier() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Identifier}@anchor{ca9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Identifier (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Label() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Label}@anchor{caa}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Label (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Return_Identifier() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Return_Identifier}@anchor{cab}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Return_Identifier (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Visible_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Visible_Flag}@anchor{cac}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Visible_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Range_Constraint() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Range_Constraint}@anchor{cad}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Range_Constraint (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Direction() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Direction}@anchor{cae}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Direction (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Left_Limit() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Left_Limit}@anchor{caf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Left_Limit (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Right_Limit() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Right_Limit}@anchor{cb0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Right_Limit (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Left_Limit_Expr() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Left_Limit_Expr}@anchor{cb1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Left_Limit_Expr (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Right_Limit_Expr() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Right_Limit_Expr}@anchor{cb2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Right_Limit_Expr (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Parent_Type() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Parent_Type}@anchor{cb3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Parent_Type (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Simple_Nature() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Simple_Nature}@anchor{cb4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Simple_Nature (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Base_Nature() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Base_Nature}@anchor{cb5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Base_Nature (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Resolution_Indication() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Resolution_Indication}@anchor{cb6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Resolution_Indication (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Record_Element_Resolution_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Record_Element_Resolution_Chain}@anchor{cb7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Record_Element_Resolution_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Tolerance() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Tolerance}@anchor{cb8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Tolerance (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Plus_Terminal_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Plus_Terminal_Name}@anchor{cb9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Plus_Terminal_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Minus_Terminal_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Minus_Terminal_Name}@anchor{cba}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Minus_Terminal_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Plus_Terminal() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Plus_Terminal}@anchor{cbb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Plus_Terminal (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Minus_Terminal() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Minus_Terminal}@anchor{cbc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Minus_Terminal (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Magnitude_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Magnitude_Expression}@anchor{cbd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Magnitude_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Phase_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Phase_Expression}@anchor{cbe}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Phase_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Power_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Power_Expression}@anchor{cbf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Power_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Simultaneous_Left() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Simultaneous_Left}@anchor{cc0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Simultaneous_Left (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Simultaneous_Right() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Simultaneous_Right}@anchor{cc1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Simultaneous_Right (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Text_File_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Text_File_Flag}@anchor{cc2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Text_File_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Only_Characters_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Only_Characters_Flag}@anchor{cc3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Only_Characters_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Is_Character_Type() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Is_Character_Type}@anchor{cc4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Is_Character_Type (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Nature_Staticness() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Nature_Staticness}@anchor{cc5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Nature_Staticness (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Type_Staticness() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Type_Staticness}@anchor{cc6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Type_Staticness (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Constraint_State() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Constraint_State}@anchor{cc7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Constraint_State (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Index_Subtype_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Index_Subtype_List}@anchor{cc8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Index_Subtype_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Index_Subtype_Definition_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Index_Subtype_Definition_List}@anchor{cc9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Index_Subtype_Definition_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Element_Subtype_Indication() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Element_Subtype_Indication}@anchor{cca}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Element_Subtype_Indication (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Element_Subtype() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Element_Subtype}@anchor{ccb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Element_Subtype (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Element_Subnature_Indication() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Element_Subnature_Indication}@anchor{ccc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Element_Subnature_Indication (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Element_Subnature() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Element_Subnature}@anchor{ccd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Element_Subnature (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Index_Constraint_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Index_Constraint_List}@anchor{cce}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Index_Constraint_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Array_Element_Constraint() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Array_Element_Constraint}@anchor{ccf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Array_Element_Constraint (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Array_Constraint_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Array_Constraint_Flag}@anchor{cd0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Array_Constraint_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Element_Constraint_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Element_Constraint_Flag}@anchor{cd1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Element_Constraint_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Elements_Declaration_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Elements_Declaration_List}@anchor{cd2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Elements_Declaration_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Owned_Elements_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Owned_Elements_Chain}@anchor{cd3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Owned_Elements_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Designated_Type() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Designated_Type}@anchor{cd4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Designated_Type (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Designated_Subtype_Indication() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Designated_Subtype_Indication}@anchor{cd5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Designated_Subtype_Indication (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Index_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Index_List}@anchor{cd6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Index_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Reference() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Reference}@anchor{cd7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Reference (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Nature_Declarator() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Nature_Declarator}@anchor{cd8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Nature_Declarator (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Across_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Across_Type_Mark}@anchor{cd9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Across_Type_Mark (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Through_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Through_Type_Mark}@anchor{cda}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Through_Type_Mark (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Across_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Across_Type_Definition}@anchor{cdb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Across_Type_Definition (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Through_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Through_Type_Definition}@anchor{cdc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Through_Type_Definition (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Across_Type() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Across_Type}@anchor{cdd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Across_Type (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Through_Type() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Through_Type}@anchor{cde}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Through_Type (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Target() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Target}@anchor{cdf}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Target (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Waveform_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Waveform_Chain}@anchor{ce0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Waveform_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Guard() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Guard}@anchor{ce1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Guard (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Delay_Mechanism() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Delay_Mechanism}@anchor{ce2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Delay_Mechanism (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Reject_Time_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Reject_Time_Expression}@anchor{ce3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Reject_Time_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Force_Mode() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Force_Mode}@anchor{ce4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Force_Mode (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Force_Mode() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Force_Mode}@anchor{ce5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Force_Mode (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Sensitivity_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Sensitivity_List}@anchor{ce6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Sensitivity_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Process_Origin() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Process_Origin}@anchor{ce7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Process_Origin (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Package_Origin() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Package_Origin}@anchor{ce8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Package_Origin (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Condition_Clause() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Condition_Clause}@anchor{ce9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Condition_Clause (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Break_Element() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Break_Element}@anchor{cea}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Break_Element (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Selector_Quantity() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Selector_Quantity}@anchor{ceb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Selector_Quantity (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Break_Quantity() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Break_Quantity}@anchor{cec}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Break_Quantity (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Timeout_Clause() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Timeout_Clause}@anchor{ced}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Timeout_Clause (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Postponed_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Postponed_Flag}@anchor{cee}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Postponed_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Callees_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Callees_List}@anchor{cef}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Callees_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Passive_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Passive_Flag}@anchor{cf0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Passive_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Resolution_Function_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Resolution_Function_Flag}@anchor{cf1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Resolution_Function_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Wait_State() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Wait_State}@anchor{cf2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Wait_State (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_All_Sensitized_State() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_All_Sensitized_State}@anchor{cf3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_All_Sensitized_State (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Seen_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Seen_Flag}@anchor{cf4}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Seen_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Pure_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Pure_Flag}@anchor{cf5}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Pure_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Foreign_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Foreign_Flag}@anchor{cf6}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Foreign_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Resolved_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Resolved_Flag}@anchor{cf7}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Resolved_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Signal_Type_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Signal_Type_Flag}@anchor{cf8}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Signal_Type_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Signal_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Signal_Flag}@anchor{cf9}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Signal_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Purity_State() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Purity_State}@anchor{cfa}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Purity_State (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Elab_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Elab_Flag}@anchor{cfb}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Elab_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Vendor_Library_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Vendor_Library_Flag}@anchor{cfc}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Vendor_Library_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Configuration_Mark_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Configuration_Mark_Flag}@anchor{cfd}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Configuration_Mark_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Configuration_Done_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Configuration_Done_Flag}@anchor{cfe}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Configuration_Done_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Index_Constraint_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Index_Constraint_Flag}@anchor{cff}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Index_Constraint_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Hide_Implicit_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Hide_Implicit_Flag}@anchor{d00}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Hide_Implicit_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Assertion_Condition() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Assertion_Condition}@anchor{d01}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Assertion_Condition (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Report_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Report_Expression}@anchor{d02}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Report_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Severity_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Severity_Expression}@anchor{d03}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Severity_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Instantiated_Unit() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Instantiated_Unit}@anchor{d04}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Instantiated_Unit (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Instantiated_Header() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Instantiated_Header}@anchor{d05}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Instantiated_Header (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Generic_Map_Aspect_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Generic_Map_Aspect_Chain}@anchor{d06}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Generic_Map_Aspect_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Port_Map_Aspect_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Port_Map_Aspect_Chain}@anchor{d07}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Port_Map_Aspect_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Configuration_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Configuration_Name}@anchor{d08}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Configuration_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Component_Configuration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Component_Configuration}@anchor{d09}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Component_Configuration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Configuration_Specification() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Configuration_Specification}@anchor{d0a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Configuration_Specification (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Default_Binding_Indication() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Default_Binding_Indication}@anchor{d0b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Default_Binding_Indication (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Default_Configuration_Declaration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Default_Configuration_Declaration}@anchor{d0c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Default_Configuration_Declaration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Expression}@anchor{d0d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Conditional_Expression_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Conditional_Expression_Chain}@anchor{d0e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Conditional_Expression_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Allocator_Designated_Type() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Allocator_Designated_Type}@anchor{d0f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Allocator_Designated_Type (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Selected_Waveform_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Selected_Waveform_Chain}@anchor{d10}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Selected_Waveform_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Conditional_Waveform_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Conditional_Waveform_Chain}@anchor{d11}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Conditional_Waveform_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Guard_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Guard_Expression}@anchor{d12}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Guard_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Guard_Decl() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Guard_Decl}@anchor{d13}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Guard_Decl (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Guard_Sensitivity_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Guard_Sensitivity_List}@anchor{d14}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Guard_Sensitivity_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Attribute_Implicit_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Attribute_Implicit_Chain}@anchor{d15}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Attribute_Implicit_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Block_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Block_Block_Configuration}@anchor{d16}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Block_Block_Configuration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Package_Header() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Package_Header}@anchor{d17}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Package_Header (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Block_Header() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Block_Header}@anchor{d18}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Block_Header (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Uninstantiated_Package_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Uninstantiated_Package_Name}@anchor{d19}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Uninstantiated_Package_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Uninstantiated_Package_Decl() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Uninstantiated_Package_Decl}@anchor{d1a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Uninstantiated_Package_Decl (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Associated_Package() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Associated_Package}@anchor{d1b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Associated_Package (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Instance_Source_File() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Instance_Source_File}@anchor{d1c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Instance_Source_File (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Generate_Block_Configuration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Generate_Block_Configuration}@anchor{d1d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Generate_Block_Configuration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Generate_Statement_Body() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Generate_Statement_Body}@anchor{d1e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Generate_Statement_Body (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Alternative_Label() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Alternative_Label}@anchor{d1f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Alternative_Label (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Generate_Else_Clause() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Generate_Else_Clause}@anchor{d20}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Generate_Else_Clause (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Condition() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Condition}@anchor{d21}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Condition (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Else_Clause() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Else_Clause}@anchor{d22}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Else_Clause (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Parameter_Specification() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Parameter_Specification}@anchor{d23}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Parameter_Specification (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Parent() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Parent}@anchor{d24}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Parent (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Loop_Label() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Loop_Label}@anchor{d25}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Loop_Label (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Exit_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Exit_Flag}@anchor{d26}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Exit_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Next_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Next_Flag}@anchor{d27}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Next_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Component_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Component_Name}@anchor{d28}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Component_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Instantiation_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Instantiation_List}@anchor{d29}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Instantiation_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Entity_Aspect() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Entity_Aspect}@anchor{d2a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Entity_Aspect (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Default_Entity_Aspect() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Default_Entity_Aspect}@anchor{d2b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Default_Entity_Aspect (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Binding_Indication() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Binding_Indication}@anchor{d2c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Binding_Indication (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Named_Entity() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Named_Entity}@anchor{d2d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Named_Entity (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Referenced_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Referenced_Name}@anchor{d2e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Referenced_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Expr_Staticness() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Expr_Staticness}@anchor{d2f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Expr_Staticness (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Scalar_Size() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Scalar_Size}@anchor{d30}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Scalar_Size (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Error_Origin() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Error_Origin}@anchor{d31}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Error_Origin (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Operand() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Operand}@anchor{d32}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Operand (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Left() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Left}@anchor{d33}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Left (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Right() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Right}@anchor{d34}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Right (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Unit_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Unit_Name}@anchor{d35}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Unit_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Name}@anchor{d36}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Group_Template_Name() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Group_Template_Name}@anchor{d37}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Group_Template_Name (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Name_Staticness() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Name_Staticness}@anchor{d38}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Name_Staticness (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Prefix() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Prefix}@anchor{d39}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Prefix (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Signature_Prefix() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Signature_Prefix}@anchor{d3a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Signature_Prefix (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_External_Pathname() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_External_Pathname}@anchor{d3b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_External_Pathname (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Pathname_Suffix() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Pathname_Suffix}@anchor{d3c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Pathname_Suffix (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Pathname_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Pathname_Expression}@anchor{d3d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Pathname_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_In_Formal_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_In_Formal_Flag}@anchor{d3e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_In_Formal_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Inertial_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Inertial_Flag}@anchor{d3f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Inertial_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Slice_Subtype() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Slice_Subtype}@anchor{d40}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Slice_Subtype (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Suffix() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Suffix}@anchor{d41}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Suffix (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Index_Subtype() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Index_Subtype}@anchor{d42}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Index_Subtype (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Parameter() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Parameter}@anchor{d43}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Parameter (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Parameter_2() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Parameter_2}@anchor{d44}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Parameter_2 (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Parameter_3() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Parameter_3}@anchor{d45}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Parameter_3 (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Parameter_4() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Parameter_4}@anchor{d46}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Parameter_4 (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Attr_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Attr_Chain}@anchor{d47}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Attr_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Attribute_Implicit_Declaration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Attribute_Implicit_Declaration}@anchor{d48}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Attribute_Implicit_Declaration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Actual_Type() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Actual_Type}@anchor{d49}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Actual_Type (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Actual_Type_Definition() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Actual_Type_Definition}@anchor{d4a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Actual_Type_Definition (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Association_Chain}@anchor{d4b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Association_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Individual_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Individual_Association_Chain}@anchor{d4c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Individual_Association_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Subprogram_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Subprogram_Association_Chain}@anchor{d4d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Subprogram_Association_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Aggregate_Info() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Aggregate_Info}@anchor{d4e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Aggregate_Info (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Sub_Aggregate_Info() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Sub_Aggregate_Info}@anchor{d4f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Sub_Aggregate_Info (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Aggr_Dynamic_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Aggr_Dynamic_Flag}@anchor{d50}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Aggr_Dynamic_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Aggr_Min_Length() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Aggr_Min_Length}@anchor{d51}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Aggr_Min_Length (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Aggr_Low_Limit() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Aggr_Low_Limit}@anchor{d52}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Aggr_Low_Limit (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Aggr_High_Limit() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Aggr_High_Limit}@anchor{d53}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Aggr_High_Limit (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Aggr_Others_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Aggr_Others_Flag}@anchor{d54}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Aggr_Others_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Aggr_Named_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Aggr_Named_Flag}@anchor{d55}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Aggr_Named_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Aggregate_Expand_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Aggregate_Expand_Flag}@anchor{d56}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Aggregate_Expand_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Determined_Aggregate_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Determined_Aggregate_Flag}@anchor{d57}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Determined_Aggregate_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Association_Choices_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Association_Choices_Chain}@anchor{d58}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Association_Choices_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Case_Statement_Alternative_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Case_Statement_Alternative_Chain}@anchor{d59}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Case_Statement_Alternative_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Matching_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Matching_Flag}@anchor{d5a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Matching_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Choice_Staticness() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Choice_Staticness}@anchor{d5b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Choice_Staticness (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Procedure_Call() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Procedure_Call}@anchor{d5c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Procedure_Call (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Implementation() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Implementation}@anchor{d5d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Implementation (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Parameter_Association_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Parameter_Association_Chain}@anchor{d5e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Parameter_Association_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Method_Object() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Method_Object}@anchor{d5f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Method_Object (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Subtype_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Subtype_Type_Mark}@anchor{d60}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Subtype_Type_Mark (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Subnature_Nature_Mark() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Subnature_Nature_Mark}@anchor{d61}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Subnature_Nature_Mark (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Type_Conversion_Subtype() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Type_Conversion_Subtype}@anchor{d62}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Type_Conversion_Subtype (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Type_Mark}@anchor{d63}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Type_Mark (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_File_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_File_Type_Mark}@anchor{d64}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_File_Type_Mark (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Return_Type_Mark() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Return_Type_Mark}@anchor{d65}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Return_Type_Mark (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Disconnect_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Disconnect_Flag}@anchor{d66}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Disconnect_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Active_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Active_Flag}@anchor{d67}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Active_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Is_Within_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Is_Within_Flag}@anchor{d68}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Is_Within_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Type_Marks_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Type_Marks_List}@anchor{d69}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Type_Marks_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Implicit_Alias_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Implicit_Alias_Flag}@anchor{d6a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Implicit_Alias_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Alias_Signature() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Alias_Signature}@anchor{d6b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Alias_Signature (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Attribute_Signature() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Attribute_Signature}@anchor{d6c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Attribute_Signature (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Overload_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Overload_List}@anchor{d6d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Overload_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Simple_Name_Identifier() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Simple_Name_Identifier}@anchor{d6e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Simple_Name_Identifier (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Simple_Name_Subtype() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Simple_Name_Subtype}@anchor{d6f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Simple_Name_Subtype (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Protected_Type_Body() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Protected_Type_Body}@anchor{d70}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Protected_Type_Body (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Protected_Type_Declaration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Protected_Type_Declaration}@anchor{d71}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Protected_Type_Declaration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Use_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Use_Flag}@anchor{d72}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Use_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Elaborated_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Elaborated_Flag}@anchor{d73}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Elaborated_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_End_Has_Reserved_Id() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_End_Has_Reserved_Id}@anchor{d74}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_End_Has_Reserved_Id (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_End_Has_Identifier() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_End_Has_Identifier}@anchor{d75}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_End_Has_Identifier (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_End_Has_Postponed() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_End_Has_Postponed}@anchor{d76}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_End_Has_Postponed (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Label() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Label}@anchor{d77}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Label (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Begin() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Begin}@anchor{d78}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Begin (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_End() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_End}@anchor{d79}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_End (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Is() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Is}@anchor{d7a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Is (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Pure() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Pure}@anchor{d7b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Pure (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Body() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Body}@anchor{d7c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Body (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Parameter() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Parameter}@anchor{d7d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Parameter (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Component() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Component}@anchor{d7e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Component (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Identifier_List() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Identifier_List}@anchor{d7f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Identifier_List (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Mode() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Mode}@anchor{d80}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Mode (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Class() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Class}@anchor{d81}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Class (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Has_Delay_Mechanism() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Has_Delay_Mechanism}@anchor{d82}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Has_Delay_Mechanism (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Suspend_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Suspend_Flag}@anchor{d83}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Suspend_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Stop_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Stop_Flag}@anchor{d84}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Stop_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Is_Ref() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Is_Ref}@anchor{d85}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Is_Ref (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Is_Forward_Ref() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Is_Forward_Ref}@anchor{d86}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Is_Forward_Ref (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Psl_Property() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Psl_Property}@anchor{d87}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Psl_Property (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Psl_Sequence() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Psl_Sequence}@anchor{d88}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Psl_Sequence (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Psl_Declaration() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Psl_Declaration}@anchor{d89}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Psl_Declaration (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Psl_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Psl_Expression}@anchor{d8a}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Psl_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Psl_Boolean() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Psl_Boolean}@anchor{d8b}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Psl_Boolean (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_PSL_Clock() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_PSL_Clock}@anchor{d8c}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_PSL_Clock (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_PSL_NFA() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_PSL_NFA}@anchor{d8d}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_PSL_NFA (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_PSL_Nbr_States() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_PSL_Nbr_States}@anchor{d8e}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_PSL_Nbr_States (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_PSL_Clock_Sensitivity() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_PSL_Clock_Sensitivity}@anchor{d8f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_PSL_Clock_Sensitivity (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_PSL_EOS_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_PSL_EOS_Flag}@anchor{d90}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_PSL_EOS_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_PSL_Abort_Flag() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_PSL_Abort_Flag}@anchor{d91}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_PSL_Abort_Flag (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Count_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Count_Expression}@anchor{d92}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Count_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Clock_Expression() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Clock_Expression}@anchor{d93}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Clock_Expression (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Default_Clock() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Default_Clock}@anchor{d94}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Default_Clock (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Foreign_Node() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Foreign_Node}@anchor{d95}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Foreign_Node (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Suspend_State_Index() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Suspend_State_Index}@anchor{d96}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Suspend_State_Index (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Suspend_State_Chain() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Suspend_State_Chain}@anchor{d97}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Suspend_State_Chain (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Suspend_State_Last() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Suspend_State_Last}@anchor{d98}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Suspend_State_Last (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn

@geindex Has_Suspend_State_Decl() (in module pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Has_Suspend_State_Decl}@anchor{d99}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_meta.Has_Suspend_State_Decl (kind)

@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Parameters: 
@code{kind} (@code{IirKind}) – 

@end deffn


__________________________________________________________________


`Classes'

@geindex types (class in pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta types}@anchor{d9a}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes_meta.types (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-7d951822f1cb663b4dc831df2782ce0819407c4d,,,[graphviz],png}
@end deffn

@geindex Attr (class in pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta Attr}@anchor{d9b}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes_meta.Attr (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-4355ec527ee4f564d0b6b9bb31d0a43816131ae5,,,[graphviz],png}
@end deffn

@geindex fields (class in pyGHDL.libghdl.vhdl.nodes_meta)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_meta pyGHDL libghdl vhdl nodes_meta fields}@anchor{d9c}
@deffn {Class} pyGHDL.libghdl.vhdl.nodes_meta.fields (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-91ac845863fb0255eda601fa0922259a1081c517,,,[graphviz],png}
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl nodes_utils,pyGHDL libghdl vhdl parse,pyGHDL libghdl vhdl nodes_meta,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_utils doc}@anchor{d9d}@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_utils module-pyGHDL libghdl vhdl nodes_utils}@anchor{33}@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_utils pyghdl-libghdl-vhdl-nodes-utils}@anchor{d9e}
@subsubsection @code{pyGHDL.libghdl.vhdl.nodes_utils}


@geindex module; pyGHDL.libghdl.vhdl.nodes_utils

`Functions'


@itemize -

@item 
@ref{d9f,,Strip_Denoting_Name()}:
If @code{Name} is a simple or an expanded name, return the denoted declaration.

@item 
@ref{da0,,Get_Entity()}:
This is a wrapper around @code{Get_Entity_Name} to return the entity declaration

@item 
@ref{da1,,Is_Second_Subprogram_Specification()}:
Check if @code{Spec} is the subprogram specification of a subprogram body

@item 
@ref{da2,,Get_Entity_From_Entity_Aspect()}:
Extract the entity from @code{Aspect}.

@item 
@ref{da3,,Get_Interface_Of_Formal()}:
Get the interface corresponding to the formal name @code{Formal}. This is
@end itemize


__________________________________________________________________


`Functions'

@geindex Strip_Denoting_Name() (in module pyGHDL.libghdl.vhdl.nodes_utils)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_utils pyGHDL libghdl vhdl nodes_utils Strip_Denoting_Name}@anchor{d9f}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_utils.Strip_Denoting_Name (Name)

If @code{Name} is a simple or an expanded name, return the denoted declaration.
Otherwise, return @code{Name}.

@*Parameters: 
@code{Name} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Simple or an expanded name.


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
Denoted declaration.

@end deffn

@geindex Get_Entity() (in module pyGHDL.libghdl.vhdl.nodes_utils)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_utils pyGHDL libghdl vhdl nodes_utils Get_Entity}@anchor{da0}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_utils.Get_Entity (Decl)

This is a wrapper around @code{Get_Entity_Name} to return the entity declaration
of the entity name of @code{Decl}, or @code{Null_Iir} in case of error.

@*Parameters: 
@code{Decl} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Declaration


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
Entity

@end deffn

@geindex Is_Second_Subprogram_Specification() (in module pyGHDL.libghdl.vhdl.nodes_utils)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_utils pyGHDL libghdl vhdl nodes_utils Is_Second_Subprogram_Specification}@anchor{da1}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_utils.Is_Second_Subprogram_Specification (Spec)

Check if @code{Spec} is the subprogram specification of a subprogram body
which was previously declared. In that case, the only use of @code{Spec}
is to match the body with its declaration.

@*Parameters: 
@code{Spec} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Specification


@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Returns: 
@code{True} if subprogram specification and previously declared subprogram body match

@end deffn

@geindex Get_Entity_From_Entity_Aspect() (in module pyGHDL.libghdl.vhdl.nodes_utils)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_utils pyGHDL libghdl vhdl nodes_utils Get_Entity_From_Entity_Aspect}@anchor{da2}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_utils.Get_Entity_From_Entity_Aspect (Aspect)

Extract the entity from @code{Aspect}.

If @code{Aspect} is a component declaration, return @code{Aspect}. If it’s
open, return @code{Null_Iir}

@*Parameters: 
@code{Aspect} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Aspect


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
Entity

@end deffn

@geindex Get_Interface_Of_Formal() (in module pyGHDL.libghdl.vhdl.nodes_utils)
@anchor{pyGHDL/pyGHDL libghdl vhdl nodes_utils pyGHDL libghdl vhdl nodes_utils Get_Interface_Of_Formal}@anchor{da3}
@deffn {Function} pyGHDL.libghdl.vhdl.nodes_utils.Get_Interface_Of_Formal (Formal)

Get the interface corresponding to the formal name @code{Formal}. This is
always an interface, even if the formal is a name.

@*Parameters: 
@code{Formal} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – The formal.


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
The corresponding interface.

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl parse,pyGHDL libghdl vhdl prints,pyGHDL libghdl vhdl nodes_utils,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl parse doc}@anchor{da4}@anchor{pyGHDL/pyGHDL libghdl vhdl parse module-pyGHDL libghdl vhdl parse}@anchor{34}@anchor{pyGHDL/pyGHDL libghdl vhdl parse pyghdl-libghdl-vhdl-parse}@anchor{da5}
@subsubsection @code{pyGHDL.libghdl.vhdl.parse}


@geindex module; pyGHDL.libghdl.vhdl.parse

`Variables'


@itemize -

@item 
@ref{da6,,Flag_Parse_Parenthesis}
@end itemize

`Functions'


@itemize -

@item 
@ref{da7,,Parse_Design_File()}:
Parse a file.
@end itemize


__________________________________________________________________


`Variables'

@geindex Flag_Parse_Parenthesis (in module pyGHDL.libghdl.vhdl.parse)
@anchor{pyGHDL/pyGHDL libghdl vhdl parse pyGHDL libghdl vhdl parse Flag_Parse_Parenthesis}@anchor{da6}
@deffn {Data} pyGHDL.libghdl.vhdl.parse.Flag_Parse_Parenthesis

@example
c_bool(False)
@end example
@end deffn


__________________________________________________________________


`Functions'

@geindex Parse_Design_File() (in module pyGHDL.libghdl.vhdl.parse)
@anchor{pyGHDL/pyGHDL libghdl vhdl parse pyGHDL libghdl vhdl parse Parse_Design_File}@anchor{da7}
@deffn {Function} pyGHDL.libghdl.vhdl.parse.Parse_Design_File ()

Parse a file.

..note:: The scanner must have been initialized as for parse_design_unit.

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
Return @ref{816,,Null_Iir} in case of error. Type: @code{Iir_Design_File}

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl prints,pyGHDL libghdl vhdl scanner,pyGHDL libghdl vhdl parse,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl prints doc}@anchor{da8}@anchor{pyGHDL/pyGHDL libghdl vhdl prints module-pyGHDL libghdl vhdl prints}@anchor{35}@anchor{pyGHDL/pyGHDL libghdl vhdl prints pyghdl-libghdl-vhdl-prints}@anchor{da9}
@subsubsection @code{pyGHDL.libghdl.vhdl.prints}


@geindex module; pyGHDL.libghdl.vhdl.prints

`Functions'


@itemize -

@item 
@ref{daa,,Print_String()}:
Reindent all lines of F between [First_Line; Last_Line] to @code{Handle}.

@item 
@ref{dab,,Allocate_Handle()}:
.. todo:: Undocumented in Ada code.

@item 
@ref{dac,,Get_Length()}:
.. todo:: Undocumented in Ada code.

@item 
@ref{dad,,Get_C_String()}:
.. todo:: Undocumented in Ada code.

@item 
@ref{dae,,Free_Handle()}:
.. todo:: Undocumented in Ada code.
@end itemize


__________________________________________________________________


`Functions'

@geindex Print_String() (in module pyGHDL.libghdl.vhdl.prints)
@anchor{pyGHDL/pyGHDL libghdl vhdl prints pyGHDL libghdl vhdl prints Print_String}@anchor{daa}
@deffn {Function} pyGHDL.libghdl.vhdl.prints.Print_String (File, Handle)

Reindent all lines of F between [First_Line; Last_Line] to @code{Handle}.

@*Parameters: 

@itemize *

@item 
@code{File} (int@footnote{https://docs.python.org/3/library/functions.html#int}) – File to indent lines within. Type: @code{Iir_Design_File}

@item 
@code{Handle} (c_void_p@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_void_p}) – undocumented. Type: @code{Vstring_Acc}

@item 
@code{FirstLine} – undocumented.

@item 
@code{LastLine} – undocumented.
@end itemize


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Allocate_Handle() (in module pyGHDL.libghdl.vhdl.prints)
@anchor{pyGHDL/pyGHDL libghdl vhdl prints pyGHDL libghdl vhdl prints Allocate_Handle}@anchor{dab}
@deffn {Function} pyGHDL.libghdl.vhdl.prints.Allocate_Handle ()

@cartouche
@quotation Todo 
Undocumented in Ada code.
@end quotation
@end cartouche

@*Return type: 
c_void_p@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_void_p}


@*Returns: 
undocumented. Type: @code{Vstring_Acc}

@end deffn

@geindex Get_Length() (in module pyGHDL.libghdl.vhdl.prints)
@anchor{pyGHDL/pyGHDL libghdl vhdl prints pyGHDL libghdl vhdl prints Get_Length}@anchor{dac}
@deffn {Function} pyGHDL.libghdl.vhdl.prints.Get_Length (Handle)

@cartouche
@quotation Todo 
Undocumented in Ada code.
@end quotation
@end cartouche

@*Parameters: 
@code{Handle} (c_void_p@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_void_p}) – undocumented. Type: @code{Vstring_Acc}


@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
undocumented.

@end deffn

@geindex Get_C_String() (in module pyGHDL.libghdl.vhdl.prints)
@anchor{pyGHDL/pyGHDL libghdl vhdl prints pyGHDL libghdl vhdl prints Get_C_String}@anchor{dad}
@deffn {Function} pyGHDL.libghdl.vhdl.prints.Get_C_String (Handle)

@cartouche
@quotation Todo 
Undocumented in Ada code.
@end quotation
@end cartouche

@*Parameters: 
@code{Handle} (c_void_p@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_void_p}) – undocumented. Type: @code{Vstring_Acc}


@*Return type: 
c_char_p@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_char_p}


@*Returns: 
Type: @code{Grt.Types.Ghdl_C_String}

@end deffn

@geindex Free_Handle() (in module pyGHDL.libghdl.vhdl.prints)
@anchor{pyGHDL/pyGHDL libghdl vhdl prints pyGHDL libghdl vhdl prints Free_Handle}@anchor{dae}
@deffn {Function} pyGHDL.libghdl.vhdl.prints.Free_Handle (Handle)

@cartouche
@quotation Todo 
Undocumented in Ada code.
@end quotation
@end cartouche

@*Parameters: 
@code{Handle} (c_void_p@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_void_p}) – undocumented. Type: @code{Vstring_Acc}


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl scanner,pyGHDL libghdl vhdl sem,pyGHDL libghdl vhdl prints,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl scanner doc}@anchor{daf}@anchor{pyGHDL/pyGHDL libghdl vhdl scanner module-pyGHDL libghdl vhdl scanner}@anchor{36}@anchor{pyGHDL/pyGHDL libghdl vhdl scanner pyghdl-libghdl-vhdl-scanner}@anchor{db0}
@subsubsection @code{pyGHDL.libghdl.vhdl.scanner}


@geindex module; pyGHDL.libghdl.vhdl.scanner

`Variables'


@itemize -

@item 
@ref{db1,,Current_Token}

@item 
@ref{db2,,Flag_Comment}
@end itemize

`Functions'


@itemize -

@item 
@ref{db3,,Set_File()}:
Initialize the scanner with file @code{SourceFile}.

@item 
@ref{db4,,Close_File()}:
Finalize the scanner.

@item 
@ref{db5,,Scan()}:
Get a new token.

@item 
@ref{db6,,Get_Current_Line()}:
Get the current location, or the location of the current token.

@item 
@ref{db7,,Get_Token_Offset()}:
Get the current token’s offset in the current line.

@item 
@ref{db8,,Get_Token_Position()}:
Get the current token’s position.

@item 
@ref{db9,,Get_Position()}:
Get the current position.

@item 
@ref{dba,,Current_Identifier()}:
When @ref{db1,,Current_Token} is an
@end itemize


__________________________________________________________________


`Variables'

@geindex Current_Token (in module pyGHDL.libghdl.vhdl.scanner)
@anchor{pyGHDL/pyGHDL libghdl vhdl scanner pyGHDL libghdl vhdl scanner Current_Token}@anchor{db1}
@deffn {Data} pyGHDL.libghdl.vhdl.scanner.Current_Token

@example
c_int(0)
@end example
@end deffn

@geindex Flag_Comment (in module pyGHDL.libghdl.vhdl.scanner)
@anchor{pyGHDL/pyGHDL libghdl vhdl scanner pyGHDL libghdl vhdl scanner Flag_Comment}@anchor{db2}
@deffn {Data} pyGHDL.libghdl.vhdl.scanner.Flag_Comment

@example
c_bool(False)
@end example
@end deffn


__________________________________________________________________


`Functions'

@geindex Set_File() (in module pyGHDL.libghdl.vhdl.scanner)
@anchor{pyGHDL/pyGHDL libghdl vhdl scanner pyGHDL libghdl vhdl scanner Set_File}@anchor{db3}
@deffn {Function} pyGHDL.libghdl.vhdl.scanner.Set_File (SourceFile)

Initialize the scanner with file @code{SourceFile}.

@*Parameters: 
@code{SourceFile} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – File to scan.


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Close_File() (in module pyGHDL.libghdl.vhdl.scanner)
@anchor{pyGHDL/pyGHDL libghdl vhdl scanner pyGHDL libghdl vhdl scanner Close_File}@anchor{db4}
@deffn {Function} pyGHDL.libghdl.vhdl.scanner.Close_File ()

Finalize the scanner.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Scan() (in module pyGHDL.libghdl.vhdl.scanner)
@anchor{pyGHDL/pyGHDL libghdl vhdl scanner pyGHDL libghdl vhdl scanner Scan}@anchor{db5}
@deffn {Function} pyGHDL.libghdl.vhdl.scanner.Scan ()

Get a new token.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Get_Current_Line() (in module pyGHDL.libghdl.vhdl.scanner)
@anchor{pyGHDL/pyGHDL libghdl vhdl scanner pyGHDL libghdl vhdl scanner Get_Current_Line}@anchor{db6}
@deffn {Function} pyGHDL.libghdl.vhdl.scanner.Get_Current_Line ()

Get the current location, or the location of the current token.

Since a token cannot spread over lines, file and line of the current token are
the same as those of the current position. The offset is the offset in the current line.

@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Current token’s line.

@end deffn

@geindex Get_Token_Offset() (in module pyGHDL.libghdl.vhdl.scanner)
@anchor{pyGHDL/pyGHDL libghdl vhdl scanner pyGHDL libghdl vhdl scanner Get_Token_Offset}@anchor{db7}
@deffn {Function} pyGHDL.libghdl.vhdl.scanner.Get_Token_Offset ()

Get the current token’s offset in the current line.

@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Current token’s offset.

@end deffn

@geindex Get_Token_Position() (in module pyGHDL.libghdl.vhdl.scanner)
@anchor{pyGHDL/pyGHDL libghdl vhdl scanner pyGHDL libghdl vhdl scanner Get_Token_Position}@anchor{db8}
@deffn {Function} pyGHDL.libghdl.vhdl.scanner.Get_Token_Position ()

Get the current token’s position.

@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Current token’s position. Type: @code{Source_Ptr}

@end deffn

@geindex Get_Position() (in module pyGHDL.libghdl.vhdl.scanner)
@anchor{pyGHDL/pyGHDL libghdl vhdl scanner pyGHDL libghdl vhdl scanner Get_Position}@anchor{db9}
@deffn {Function} pyGHDL.libghdl.vhdl.scanner.Get_Position ()

Get the current position.

@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Current position. Type: @code{Source_Ptr}

@end deffn

@geindex Current_Identifier() (in module pyGHDL.libghdl.vhdl.scanner)
@anchor{pyGHDL/pyGHDL libghdl vhdl scanner pyGHDL libghdl vhdl scanner Current_Identifier}@anchor{dba}
@deffn {Function} pyGHDL.libghdl.vhdl.scanner.Current_Identifier ()

When @ref{db1,,Current_Token} is an
@code{tok_identifier}, @code{tok_char} or @code{tok_string}, its name_id can be
retrieved via this function.

@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
NameId of the current token.

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl sem,pyGHDL libghdl vhdl sem_lib,pyGHDL libghdl vhdl scanner,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl sem doc}@anchor{dbb}@anchor{pyGHDL/pyGHDL libghdl vhdl sem module-pyGHDL libghdl vhdl sem}@anchor{37}@anchor{pyGHDL/pyGHDL libghdl vhdl sem pyghdl-libghdl-vhdl-sem}@anchor{dbc}
@subsubsection @code{pyGHDL.libghdl.vhdl.sem}


@geindex module; pyGHDL.libghdl.vhdl.sem

`Functions'


@itemize -

@item 
@ref{dbd,,Semantic()}:
Do the semantic analysis of design unit @code{DesignUnit}.
@end itemize


__________________________________________________________________


`Functions'

@geindex Semantic() (in module pyGHDL.libghdl.vhdl.sem)
@anchor{pyGHDL/pyGHDL libghdl vhdl sem pyGHDL libghdl vhdl sem Semantic}@anchor{dbd}
@deffn {Function} pyGHDL.libghdl.vhdl.sem.Semantic (DesignUnit)

Do the semantic analysis of design unit @code{DesignUnit}.

Also add a few node or change some nodes, when for example an identifier is
changed into an access to the type.

@*Parameters: 
@code{DesignUnit} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir_Design_Unit}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Design unit to semantically analyze. Type: @code{Iir_Design_Unit}


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl sem_lib,pyGHDL libghdl vhdl std_package,pyGHDL libghdl vhdl sem,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl sem_lib doc}@anchor{dbe}@anchor{pyGHDL/pyGHDL libghdl vhdl sem_lib module-pyGHDL libghdl vhdl sem_lib}@anchor{38}@anchor{pyGHDL/pyGHDL libghdl vhdl sem_lib pyghdl-libghdl-vhdl-sem-lib}@anchor{dbf}
@subsubsection @code{pyGHDL.libghdl.vhdl.sem_lib}


@geindex module; pyGHDL.libghdl.vhdl.sem_lib

`Functions'


@itemize -

@item 
@ref{dc0,,Load_File()}:
Start to analyse a file (i.e. load and parse it).

@item 
@ref{dc1,,Finish_Compilation()}:
Analyze @code{Unit}.

@item 
@ref{dc2,,Free_Dependence_List()}:
Free the dependence list of @code{Design}.
@end itemize


__________________________________________________________________


`Functions'

@geindex Load_File() (in module pyGHDL.libghdl.vhdl.sem_lib)
@anchor{pyGHDL/pyGHDL libghdl vhdl sem_lib pyGHDL libghdl vhdl sem_lib Load_File}@anchor{dc0}
@deffn {Function} pyGHDL.libghdl.vhdl.sem_lib.Load_File (File)

Start to analyse a file (i.e. load and parse it).

@*Parameters: 
@code{File} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{SourceFileEntry}, bound= c_uint@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_uint})) – File to analyse.


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir_Design_File}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
Return @ref{816,,Null_Iir} in case of parse error. Type: @code{Iir_Design_File}

@end deffn

@geindex Finish_Compilation() (in module pyGHDL.libghdl.vhdl.sem_lib)
@anchor{pyGHDL/pyGHDL libghdl vhdl sem_lib pyGHDL libghdl vhdl sem_lib Finish_Compilation}@anchor{dc1}
@deffn {Function} pyGHDL.libghdl.vhdl.sem_lib.Finish_Compilation (Unit, Main=False)

Analyze @code{Unit}.

@*Parameters: 

@itemize *

@item 
@code{Unit} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir_Design_Unit}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Design unit to analyze.

@item 
@code{Main} (bool@footnote{https://docs.python.org/3/library/functions.html#bool}) – Is main unit.
@end itemize


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex Free_Dependence_List() (in module pyGHDL.libghdl.vhdl.sem_lib)
@anchor{pyGHDL/pyGHDL libghdl vhdl sem_lib pyGHDL libghdl vhdl sem_lib Free_Dependence_List}@anchor{dc2}
@deffn {Function} pyGHDL.libghdl.vhdl.sem_lib.Free_Dependence_List (Design)

Free the dependence list of @code{Design}.

@*Parameters: 
@code{Design} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir_Design_Unit}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Design unit to free dependencies for.


@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl std_package,pyGHDL libghdl vhdl tokens,pyGHDL libghdl vhdl sem_lib,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl std_package doc}@anchor{dc3}@anchor{pyGHDL/pyGHDL libghdl vhdl std_package module-pyGHDL libghdl vhdl std_package}@anchor{39}@anchor{pyGHDL/pyGHDL libghdl vhdl std_package pyghdl-libghdl-vhdl-std-package}@anchor{dc4}
@subsubsection @code{pyGHDL.libghdl.vhdl.std_package}


@geindex module; pyGHDL.libghdl.vhdl.std_package

`Variables'


@itemize -

@item 
@ref{dc5,,Std_Location}

@item 
@ref{dc6,,Standard_Package}

@item 
@ref{dc7,,Character_Type_Definition}
@end itemize


__________________________________________________________________


`Variables'

@geindex Std_Location (in module pyGHDL.libghdl.vhdl.std_package)
@anchor{pyGHDL/pyGHDL libghdl vhdl std_package pyGHDL libghdl vhdl std_package Std_Location}@anchor{dc5}
@deffn {Data} pyGHDL.libghdl.vhdl.std_package.Std_Location

Virtual location for the @code{std.standard} package.

Use the property @code{.value} to access the variable’s value.

@example
c_int(0)
@end example
@end deffn

@geindex Standard_Package (in module pyGHDL.libghdl.vhdl.std_package)
@anchor{pyGHDL/pyGHDL libghdl vhdl std_package pyGHDL libghdl vhdl std_package Standard_Package}@anchor{dc6}
@deffn {Data} pyGHDL.libghdl.vhdl.std_package.Standard_Package

Virtual package @code{std.package}.

Use the property @code{.value} to access the variable’s value.

@example
c_int(0)
@end example
@end deffn

@geindex Character_Type_Definition (in module pyGHDL.libghdl.vhdl.std_package)
@anchor{pyGHDL/pyGHDL libghdl vhdl std_package pyGHDL libghdl vhdl std_package Character_Type_Definition}@anchor{dc7}
@deffn {Data} pyGHDL.libghdl.vhdl.std_package.Character_Type_Definition

Predefined character.

Use the property @code{.value} to access the variable’s value.

@example
c_int(0)
@end example
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl tokens,pyGHDL libghdl vhdl utils,pyGHDL libghdl vhdl std_package,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl tokens doc}@anchor{dc8}@anchor{pyGHDL/pyGHDL libghdl vhdl tokens module-pyGHDL libghdl vhdl tokens}@anchor{3a}@anchor{pyGHDL/pyGHDL libghdl vhdl tokens pyghdl-libghdl-vhdl-tokens}@anchor{dc9}
@subsubsection @code{pyGHDL.libghdl.vhdl.tokens}


@geindex module; pyGHDL.libghdl.vhdl.tokens

`Classes'


@itemize -

@item 
@ref{c0e,,Tok}:
An enumeration.
@end itemize


__________________________________________________________________


`Classes'

@geindex Tok (class in pyGHDL.libghdl.vhdl.tokens)
@anchor{pyGHDL/pyGHDL libghdl vhdl tokens pyGHDL libghdl vhdl tokens Tok}@anchor{c0e}
@deffn {Class} pyGHDL.libghdl.vhdl.tokens.Tok (value)

An enumeration.

@subsubheading Inheritance

@image{inheritance-3d810f37adde382aa068a6d957b3de4425391193,,,[graphviz],png}
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL libghdl vhdl utils,,pyGHDL libghdl vhdl tokens,pyGHDL libghdl vhdl
@anchor{pyGHDL/pyGHDL libghdl vhdl utils doc}@anchor{dca}@anchor{pyGHDL/pyGHDL libghdl vhdl utils module-pyGHDL libghdl vhdl utils}@anchor{3b}@anchor{pyGHDL/pyGHDL libghdl vhdl utils pyghdl-libghdl-vhdl-utils}@anchor{dcb}
@subsubsection @code{pyGHDL.libghdl.vhdl.utils}


@geindex module; pyGHDL.libghdl.vhdl.utils

`Functions'


@itemize -

@item 
@ref{dcc,,Get_Source_Identifier()}:
Like @code{Get_Identifier} but return a @code{NameId} for the same casing as it appears in the source file.

@item 
@ref{dcd,,Get_Source_Identifier_Str()}:
Undocumented.
@end itemize


__________________________________________________________________


`Functions'

@geindex Get_Source_Identifier() (in module pyGHDL.libghdl.vhdl.utils)
@anchor{pyGHDL/pyGHDL libghdl vhdl utils pyGHDL libghdl vhdl utils Get_Source_Identifier}@anchor{dcc}
@deffn {Function} pyGHDL.libghdl.vhdl.utils.Get_Source_Identifier (Decl)

Like @code{Get_Identifier} but return a @code{NameId} for the same casing as it appears in the source file.
Not useful for analysis as VHDL is case insensitive, but could be useful for error messages or tooling.

@*Parameters: 
@code{Decl} (TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})) – Iir Node. Type: @code{Iir}


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{NameId}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})

@end deffn

@geindex Get_Source_Identifier_Str() (in module pyGHDL.libghdl.vhdl.utils)
@anchor{pyGHDL/pyGHDL libghdl vhdl utils pyGHDL libghdl vhdl utils Get_Source_Identifier_Str}@anchor{dcd}
@deffn {Function} pyGHDL.libghdl.vhdl.utils.Get_Source_Identifier_Str (n)

@*Return type: 
str@footnote{https://docs.python.org/3/library/stdtypes.html#str}


@*Parameters: 
@code{n} (@code{Iir}) – 

@end deffn

`Variables'


@itemize -

@item 
@ref{dce,,ENCODING}
@end itemize

`Functions'


@itemize -

@item 
@ref{dcf,,_get_libghdl_name()}:
Get the name of the libghdl library (with version and extension).

@item 
@ref{dd0,,_check_libghdl_libdir()}:
Returns libghdl path in @code{libdir}, if found.

@item 
@ref{dd1,,_check_libghdl_bindir()}:
Undocumented.

@item 
@ref{dd2,,_get_libghdl_path()}:
Locate the directory where the shared library is installed.

@item 
@ref{dd3,,_initialize()}:
Undocumented.

@item 
@ref{dd4,,finalize()}:
Free all the memory, be ready for a new initialization.

@item 
@ref{dd5,,initialize()}:
Initialize or re-initialize the shared library.

@item 
@ref{dd6,,set_option()}:
Set option @code{opt}.

@item 
@ref{dd7,,analyze_init()}:
Initialize the analyzer.

@item 
@ref{dd8,,analyze_init_status()}:
Initialize the analyzer.

@item 
@ref{dd9,,analyze_file()}:
Analyze a given filename @code{fname}.

@item 
@ref{dda,,disp_config()}:
Display the configured prefixes for libghdl.
@end itemize

`Exceptions'


@itemize -

@item 
@ref{827,,LibGHDLException}:
Common base class for all non-exit exceptions.
@end itemize


__________________________________________________________________


`Variables'

@geindex ENCODING (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl ENCODING}@anchor{dce}
@deffn {Data} pyGHDL.libghdl.ENCODING

str(object=’’) -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to ‘strict’.

@example
'latin-1'
@end example
@end deffn


__________________________________________________________________


`Functions'

@geindex _get_libghdl_name() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl _get_libghdl_name}@anchor{dcf}
@deffn {Function} pyGHDL.libghdl._get_libghdl_name ()

Get the name of the libghdl library (with version and extension).

@*Return type: 
Path@footnote{https://docs.python.org/3/library/pathlib.html#pathlib.Path}

@end deffn

@geindex _check_libghdl_libdir() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl _check_libghdl_libdir}@anchor{dd0}
@deffn {Function} pyGHDL.libghdl._check_libghdl_libdir (libdir, basename)

Returns libghdl path in @code{libdir}, if found.

@*Return type: 
Path@footnote{https://docs.python.org/3/library/pathlib.html#pathlib.Path}


@*Parameters: 

@itemize *

@item 
@code{libdir} (Path@footnote{https://docs.python.org/3/library/pathlib.html#pathlib.Path}) – 

@item 
@code{basename} (Path@footnote{https://docs.python.org/3/library/pathlib.html#pathlib.Path}) – 
@end itemize

@end deffn

@geindex _check_libghdl_bindir() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl _check_libghdl_bindir}@anchor{dd1}
@deffn {Function} pyGHDL.libghdl._check_libghdl_bindir (bindir, basename)

@*Return type: 
Path@footnote{https://docs.python.org/3/library/pathlib.html#pathlib.Path}


@*Parameters: 

@itemize *

@item 
@code{bindir} (Path@footnote{https://docs.python.org/3/library/pathlib.html#pathlib.Path}) – 

@item 
@code{basename} (Path@footnote{https://docs.python.org/3/library/pathlib.html#pathlib.Path}) – 
@end itemize

@end deffn

@geindex _get_libghdl_path() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl _get_libghdl_path}@anchor{dd2}
@deffn {Function} pyGHDL.libghdl._get_libghdl_path ()

Locate the directory where the shared library is installed.

`Search order:'


@enumerate 

@item 
@cite{GHDL_PREFIX} - directory (prefix) of the vhdl libraries.

@item 
@cite{VUNIT_GHDL_PATH} - path of the @cite{ghdl} binary when using VUnit.

@item 
@cite{GHDL} - name of, or path to the @cite{ghdl} binary.

@item 
Try within @cite{libghdl/} Python installation.

@item 
Try when running from the build directory.
@end enumerate
@end deffn

@geindex _initialize() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl _initialize}@anchor{dd3}
@deffn {Function} pyGHDL.libghdl._initialize ()
@end deffn

@geindex finalize() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl finalize}@anchor{dd4}
@deffn {Function} pyGHDL.libghdl.finalize ()

Free all the memory, be ready for a new initialization.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex initialize() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl initialize}@anchor{dd5}
@deffn {Function} pyGHDL.libghdl.initialize ()

Initialize or re-initialize the shared library.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn

@geindex set_option() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl set_option}@anchor{dd6}
@deffn {Function} pyGHDL.libghdl.set_option (opt)

Set option @code{opt}.

@*Parameters: 
@code{opt} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – Option to set.


@*Return type: 
bool@footnote{https://docs.python.org/3/library/functions.html#bool}


@*Returns: 
Return @code{True}, if the option is known and handled.

@end deffn

@geindex analyze_init() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl analyze_init}@anchor{dd7}
@deffn {Function} pyGHDL.libghdl.analyze_init ()

Initialize the analyzer.
:rtype: None@footnote{https://docs.python.org/3/library/constants.html#None}


Deprecated since version 1.0.0: Deprecated as it may raise an exception. Use @ref{dd8,,analyze_init_status()}.


@*Return type: 
None

@end deffn

@geindex analyze_init_status() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl analyze_init_status}@anchor{dd8}
@deffn {Function} pyGHDL.libghdl.analyze_init_status ()

Initialize the analyzer.

@*Return type: 
int@footnote{https://docs.python.org/3/library/functions.html#int}


@*Returns: 
Returns 0 in case of success.

@end deffn

@geindex analyze_file() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl analyze_file}@anchor{dd9}
@deffn {Function} pyGHDL.libghdl.analyze_file (fname)

Analyze a given filename @code{fname}.

@*Parameters: 
@code{fname} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – File name


@*Return type: 
TypeVar@footnote{https://docs.python.org/3/library/typing.html#typing.TypeVar}(@code{Iir}, bound= c_int@footnote{https://docs.python.org/3/library/ctypes.html#ctypes.c_int})


@*Returns: 
Internal Intermediate Representation (IIR)

@end deffn

@geindex disp_config() (in module pyGHDL.libghdl)
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl disp_config}@anchor{dda}
@deffn {Function} pyGHDL.libghdl.disp_config ()

Display the configured prefixes for libghdl.

@*Return type: 
None@footnote{https://docs.python.org/3/library/constants.html#None}

@end deffn


__________________________________________________________________


`Exceptions'

@geindex LibGHDLException
@anchor{pyGHDL/pyGHDL libghdl pyGHDL libghdl LibGHDLException}@anchor{827}
@deffn {Exception} pyGHDL.libghdl.LibGHDLException (message, errors=None)

@subsubheading Inheritance

@image{inheritance-8d741282660e73fdfbce07960f9b06492bf7ba3c,,,[graphviz],png}

@*Parameters: 

@itemize *

@item 
@code{message} (str@footnote{https://docs.python.org/3/library/stdtypes.html#str}) – 

@item 
@code{errors} (List@footnote{https://docs.python.org/3/library/typing.html#typing.List}@code{[}str@footnote{https://docs.python.org/3/library/stdtypes.html#str}@code{]}) – 
@end itemize

@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL lsp,,pyGHDL libghdl,pyGHDL
@anchor{pyGHDL/pyGHDL lsp doc}@anchor{ddb}@anchor{pyGHDL/pyGHDL lsp module-pyGHDL lsp}@anchor{3c}@anchor{pyGHDL/pyGHDL lsp pyghdl-lsp}@anchor{ddc}
@section @code{pyGHDL.lsp}


@geindex module; pyGHDL.lsp

`Submodules'

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@menu
* pyGHDL.lsp.document: pyGHDL lsp document. 
* pyGHDL.lsp.lsp: pyGHDL lsp lsp. 
* pyGHDL.lsp.lsptools: pyGHDL lsp lsptools. 
* pyGHDL.lsp.references: pyGHDL lsp references. 
* pyGHDL.lsp.symbols: pyGHDL lsp symbols. 
* pyGHDL.lsp.version: pyGHDL lsp version. 
* pyGHDL.lsp.vhdl_ls: pyGHDL lsp vhdl_ls. 
* pyGHDL.lsp.workspace: pyGHDL lsp workspace. 

@end menu

@node pyGHDL lsp document,pyGHDL lsp lsp,,pyGHDL lsp
@anchor{pyGHDL/pyGHDL lsp document doc}@anchor{ddd}@anchor{pyGHDL/pyGHDL lsp document module-pyGHDL lsp document}@anchor{3d}@anchor{pyGHDL/pyGHDL lsp document pyghdl-lsp-document}@anchor{dde}
@subsection @code{pyGHDL.lsp.document}


@geindex module; pyGHDL.lsp.document

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL lsp lsp,pyGHDL lsp lsptools,pyGHDL lsp document,pyGHDL lsp
@anchor{pyGHDL/pyGHDL lsp lsp doc}@anchor{ddf}@anchor{pyGHDL/pyGHDL lsp lsp module-pyGHDL lsp lsp}@anchor{3e}@anchor{pyGHDL/pyGHDL lsp lsp pyghdl-lsp-lsp}@anchor{de0}
@subsection @code{pyGHDL.lsp.lsp}


@geindex module; pyGHDL.lsp.lsp

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL lsp lsptools,pyGHDL lsp references,pyGHDL lsp lsp,pyGHDL lsp
@anchor{pyGHDL/pyGHDL lsp lsptools doc}@anchor{de1}@anchor{pyGHDL/pyGHDL lsp lsptools module-pyGHDL lsp lsptools}@anchor{3f}@anchor{pyGHDL/pyGHDL lsp lsptools pyghdl-lsp-lsptools}@anchor{de2}
@subsection @code{pyGHDL.lsp.lsptools}


@geindex module; pyGHDL.lsp.lsptools

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL lsp references,pyGHDL lsp symbols,pyGHDL lsp lsptools,pyGHDL lsp
@anchor{pyGHDL/pyGHDL lsp references doc}@anchor{de3}@anchor{pyGHDL/pyGHDL lsp references module-pyGHDL lsp references}@anchor{40}@anchor{pyGHDL/pyGHDL lsp references pyghdl-lsp-references}@anchor{de4}
@subsection @code{pyGHDL.lsp.references}


@geindex module; pyGHDL.lsp.references

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL lsp symbols,pyGHDL lsp version,pyGHDL lsp references,pyGHDL lsp
@anchor{pyGHDL/pyGHDL lsp symbols doc}@anchor{de5}@anchor{pyGHDL/pyGHDL lsp symbols module-pyGHDL lsp symbols}@anchor{41}@anchor{pyGHDL/pyGHDL lsp symbols pyghdl-lsp-symbols}@anchor{de6}
@subsection @code{pyGHDL.lsp.symbols}


@geindex module; pyGHDL.lsp.symbols

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL lsp version,pyGHDL lsp vhdl_ls,pyGHDL lsp symbols,pyGHDL lsp
@anchor{pyGHDL/pyGHDL lsp version doc}@anchor{de7}@anchor{pyGHDL/pyGHDL lsp version module-pyGHDL lsp version}@anchor{42}@anchor{pyGHDL/pyGHDL lsp version pyghdl-lsp-version}@anchor{de8}
@subsection @code{pyGHDL.lsp.version}


@geindex module; pyGHDL.lsp.version

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL lsp vhdl_ls,pyGHDL lsp workspace,pyGHDL lsp version,pyGHDL lsp
@anchor{pyGHDL/pyGHDL lsp vhdl_ls doc}@anchor{de9}@anchor{pyGHDL/pyGHDL lsp vhdl_ls module-pyGHDL lsp vhdl_ls}@anchor{43}@anchor{pyGHDL/pyGHDL lsp vhdl_ls pyghdl-lsp-vhdl-ls}@anchor{dea}
@subsection @code{pyGHDL.lsp.vhdl_ls}


@geindex module; pyGHDL.lsp.vhdl_ls

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # Template modified  by Patrick Lehmann
@c * removed automodule on top, because private members are activated for autodoc (no doubled documentation).
@c * Made sections like 'submodules' bold text, but no headlines to reduce number of ToC levels.

@node pyGHDL lsp workspace,,pyGHDL lsp vhdl_ls,pyGHDL lsp
@anchor{pyGHDL/pyGHDL lsp workspace doc}@anchor{deb}@anchor{pyGHDL/pyGHDL lsp workspace module-pyGHDL lsp workspace}@anchor{44}@anchor{pyGHDL/pyGHDL lsp workspace pyghdl-lsp-workspace}@anchor{dec}
@subsection @code{pyGHDL.lsp.workspace}


@geindex module; pyGHDL.lsp.workspace

`Exceptions'


@itemize -

@item 
@ref{ded,,GHDLBaseException}:
Common base class for all non-exit exceptions.
@end itemize


__________________________________________________________________


`Exceptions'

@geindex GHDLBaseException
@anchor{pyGHDL/pyGHDL pyGHDL GHDLBaseException}@anchor{ded}
@deffn {Exception} pyGHDL.GHDLBaseException

@subheading Inheritance

@image{inheritance-f9f0cd4092c11697a94043d44c43104c71308ad4,,,[graphviz],png}
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node GHDL Waveform GHW,Debugging,pyGHDL,Top
@anchor{ghw/index doc}@anchor{dee}@anchor{ghw/index ghdl-waveform-ghw}@anchor{def}@anchor{ghw/index ghw}@anchor{4e}
@chapter GHDL Waveform (GHW)


The most widespread format for dumping waveforms is Value Change Dump (VCD), defined in the Verilog language (IEEE Std
1364-1995) and extended six years later as Extended VCD (EVCD), defined in IEEE Std 1364-2001.
VCD is simple and compact, which allowed it to be used in fields other than Verilog simulation tools.
For instance, GHDL supports dumping VCD files.

However, VCD/EVCD cannot handle certain signal types from the VHDL language.
There is neither any equivalent in the VHDL LRM.
So, the author of GHDL, Tristan Gingold, implemented an alternative format named GHW, for allowing all VHDL types to be
dumped.
He also contributed a reader to GTKWave based on libghw (see gtkwave/gtkwave/search?q=libghw@footnote{https://github.com/gtkwave/gtkwave/search?q=libghw} and gtkwave/gtkwave: gtkwave3/src/ghw.c@footnote{https://github.com/gtkwave/gtkwave/blob/master/gtkwave3/src/ghw.c}),
which allows visualizing GHW waves.

The GHW format is not completely fixed, and it might change slightly as new language features are implemented in GHDL
or as a result of internal tweaks.
Nevertheless, the GHDL codebase (grt/grt-waves.adb@footnote{https://github.com/ghdl/ghdl/blob/master/src/grt/grt-waves.adb}) is kept in sync with the utilities in
subdir ghw@footnote{https://github.com/ghdl/ghdl/blob/master/src/../ghw}.

@cartouche
@quotation Tip 
In nturley/ghw-notes@footnote{https://github.com/nturley/ghw-notes}, there is some work for defining the GHW format as a
Kaitai Struct (see kaitai.io@footnote{https://kaitai.io/}).
@end quotation
@end cartouche

@menu
* libghw:: 
* ghwdump:: 

@end menu

@node libghw,ghwdump,,GHDL Waveform GHW
@anchor{ghw/index libghw}@anchor{df0}
@section libghw


GHW reading features are provided as a shared library, which is built and installed with GHDL by default.

@node ghwdump,,libghw,GHDL Waveform GHW
@anchor{ghw/index ghwdump}@anchor{df1}
@section ghwdump


For debugging and learning purposes, ghwdump uses ghdlib for dumping the content of GHW waves into text files.
ghwdump is also built and installed with GHDL by default.
It’s used in the GHDL test suite for catching regressions.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Debugging,Coding Style,GHDL Waveform GHW,Top
@anchor{development/Debugging doc}@anchor{df2}@anchor{development/Debugging debugging}@anchor{df3}@anchor{development/Debugging dev-debugging}@anchor{170}
@chapter Debugging


@menu
* Simulation and runtime debugging options:: 

@end menu

@node Simulation and runtime debugging options,,,Debugging
@anchor{development/Debugging simulation-and-runtime-debugging-options}@anchor{df4}
@section Simulation and runtime debugging options


Besides the options described in @ref{c9,,Options}, @cite{GHDL} passes any debugging options (those that begin with
@code{-g}) and optimizations options (those that begin with @code{-O} or @code{-f}) to @cite{GCC}. Refer to the @cite{GCC} manual for
details. Moreover, some debugging options are also available, but not described here. The --help@footnote{https://docs.python.org/3/using/cmdline.html#cmdoption-help} option lists
all options available, including the debugging ones.

@geindex command line option; --trace-signals
@anchor{development/Debugging cmdoption-trace-signals}@anchor{df5}
@deffn {Option} @w{-}@w{-}trace@w{-}signals

Display signals after each cycle.
@end deffn

@geindex command line option; --trace-processes
@anchor{development/Debugging cmdoption-trace-processes}@anchor{df6}
@deffn {Option} @w{-}@w{-}trace@w{-}processes

Display process name before each cycle.
@end deffn

@geindex command line option; --stats
@anchor{development/Debugging cmdoption-stats}@anchor{df7}
@deffn {Option} @w{-}@w{-}stats

Display run-time statistics.
@end deffn

@geindex command line option; --disp-order
@anchor{development/Debugging cmdoption-disp-order}@anchor{df8}
@deffn {Option} @w{-}@w{-}disp@w{-}order

Display signals order.
@end deffn

@geindex command line option; --disp-sources
@anchor{development/Debugging cmdoption-disp-sources}@anchor{df9}
@deffn {Option} @w{-}@w{-}disp@w{-}sources

Display sources while displaying signals.
@end deffn

@geindex command line option; --disp-sig-types
@anchor{development/Debugging cmdoption-disp-sig-types}@anchor{dfa}
@deffn {Option} @w{-}@w{-}disp@w{-}sig@w{-}types

Display signal types.
@end deffn

@geindex command line option; --disp-signals-map
@anchor{development/Debugging cmdoption-disp-signals-map}@anchor{dfb}
@deffn {Option} @w{-}@w{-}disp@w{-}signals@w{-}map

Display map bw declared signals and internal signals.
@end deffn

@geindex command line option; --disp-signals-table
@anchor{development/Debugging cmdoption-disp-signals-table}@anchor{dfc}
@deffn {Option} @w{-}@w{-}disp@w{-}signals@w{-}table

Display internal signals.
@end deffn

@geindex command line option; --checks
@anchor{development/Debugging cmdoption-checks}@anchor{dfd}
@deffn {Option} @w{-}@w{-}checks

Do internal checks after each process run.
@end deffn

@geindex command line option; --activity
@anchor{development/Debugging cmdoption-activity}@anchor{dfe}
@deffn {Option} @w{-}@w{-}activity=<LEVEL>

Watch activity of LEVEL signals: LEVEL is @code{all}, @code{min} (default) or @code{none} (unsafe).
@end deffn

@geindex command line option; --dump-rti
@anchor{development/Debugging cmdoption-dump-rti}@anchor{dff}
@deffn {Option} @w{-}@w{-}dump@w{-}rti

Dump Run Time Information (RTI).
@end deffn

@geindex command line option; --bootstrap
@anchor{development/Debugging cmdoption-bootstrap}@anchor{e00}
@deffn {Option} @w{-}@w{-}bootstrap

Allow @code{--work=std}
@end deffn

@menu
* GNU Debugger (GDB): GNU Debugger GDB. 

@end menu

@node GNU Debugger GDB,,,Simulation and runtime debugging options
@anchor{development/Debugging gnu-debugger-gdb}@anchor{e01}
@subsection GNU Debugger (GDB)


@geindex `__ghdl_fatal`

@cartouche
@quotation Warning 
Debugging VHDL programs using @cite{GDB} is possible only with GCC/LLVM.
@end quotation
@end cartouche

GDB is a general purpose debugger for programs compiled by GCC. Currently, there is no VHDL support for GDB. It may be difficult to inspect variables or signals in GDB. However, it is still able to display the stack frame in case of error or to set a breakpoint at a specified line.

GDB can be useful to catch a runtime error, such as indexing an array beyond its bounds. All error check subprograms call the @code{__ghdl_fatal} procedure. Therefore, to a catch runtime error, set a breakpoint like this:

@example
(gdb) break __ghdl_fatal
@end example

When the breakpoint is hit, use the @code{where} or @code{bt} command to display the stack frames.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Coding Style,Scripts,Debugging,Top
@anchor{development/CodingStyle doc}@anchor{e02}@anchor{development/CodingStyle coding-style}@anchor{e03}@anchor{development/CodingStyle dev-style}@anchor{78}
@chapter Coding Style


@menu
* Ada:: 
* Shell:: 
* Guidelines to edit the documentation:: 
* Documentation configuration:: 

@end menu

@node Ada,Shell,,Coding Style
@anchor{development/CodingStyle ada}@anchor{e04}
@section Ada


Ada subset: use only a simple (VHDL like) subset of Ada: no tasking, no
controlled types… VHDL users should easily understand that subset.
Allowed Ada95 features: the standard library, child packages.
Use assertions.

We try to follow the ‘GNU Coding Standards’ when possible: comments before
declarations, one space at the end of sentences, finish sentences with a dot.
But: 2 spaces for indentation in code blocks.

No trailing spaces, no TAB (HT).

Subprograms must have a comment before to describe them, like:

@example
--  Analyze the concurrent statements of PARENT.
procedure Sem_Concurrent_Statement_Chain (Parent : Iir);
@end example

The line before the comment must be a blank line (unless this is the first
declaration). Don’t repeat the comment before the subprogram body.


@itemize *

@item 
For subprograms:


@enumerate 

@item 
Declare on one line when possible:

@example
function Translate_Static_Aggregate (Aggr : Iir) return O_Cnode
@end example

@item 
If not possible, put the return on the next line:

@example
function Translate_Static_String (Str_Type : Iir; Str_Ident : Name_Id)
                                 return O_Cnode
@end example

@item 
If not possible, put parameters and return on the next line:

@example
function Create_String_Literal_Var_Inner
  (Str : Iir; Element_Type : Iir; Str_Type : O_Tnode) return Var_Type
@end example

@item 
If not possible, return on the next line:

@example
function Translate_Shortcut_Operator
  (Imp : Iir_Implicit_Function_Declaration; Left, Right : Iir)
  return O_Enode
@end example

@item 
If not possible, one parameter per line, just after subprogram name:

@example
procedure Translate_Static_Aggregate_1 (List : in out O_Array_Aggr_List;
                                        Aggr : Iir;
                                        Info : Iir;
                                        El_Type : Iir)
@end example

@item 
If not possible, add a return after subprogram name:

@example
function Translate_Predefined_TF_Array_Element
  (Op : Predefined_Boolean_Logical;
   Left, Right : Iir;
   Res_Type : Iir;
   Loc : Iir)
  return O_Enode
@end example

@item 
If not possible, ask yourself what is wrong!  Shorten a name.
@end enumerate

@item 
Rule for the ‘is’: on a new line only if the declarative part is not empty:

@quotation

@example
procedure Translate_Assign (Target : Mnode; Expr : Iir; Target_Type : Iir)
is
  Val : O_Enode;
begin
@end example
@end quotation

vs.

@quotation

@example
function Translate_Static_Range_Dir (Expr : Iir) return O_Cnode is
begin
@end example
@end quotation

If the parameter line is too long with the ‘is’, put in on a separate line:

@quotation

@example
procedure Predeclare_Scope_Type
  (Scope : in out Var_Scope_Type; Name : O_Ident) is
@end example
@end quotation

@item 
Generic instantiation: put the generic actual part on a new line:

@quotation

@example
procedure Free is new Ada.Unchecked_Deallocation
  (Action_List, Action_List_Acc);
@end example
@end quotation

@item 
For if/then statement:


@enumerate 

@item 
‘then’ on the same line:

@example
if Get_Expr_Staticness (Decl) = Locally then
@end example

@item 
If not possible, ‘then’ is alone on its line aligned with the ‘if’:

@example
if Expr = Null_Iir
  or else Get_Kind (Expr) = Iir_Kind_Overflow_Literal
then
@end example

@item 
For a multiline condition, ‘or else’ and ‘and then’ should start lines.
@end enumerate

@item 
‘Local’ variable declaration:
Do not initialize variables, constants must be declared before variables:

@quotation

@example
is
  N_Info : constant Iir := Get_Sub_Aggregate_Info (Info);
  Assoc  : Iir;
  Sub    : Iir;
begin
@end example
@end quotation

If the initialization expression has a side effect (such as allocation), do
not use a constant.
@end itemize

@node Shell,Guidelines to edit the documentation,Ada,Coding Style
@anchor{development/CodingStyle shell}@anchor{e05}
@section Shell


Ubuntu uses @cite{dash} instead of @cite{bash} when a shell script is run. As a result, some functionalities, such as arrays like
@code{array[1]}, are not supported. Therefore, build scripts should not use those functionalities unless
they are sourced in a @cite{bash} shell. The same applies to the scripts in @cite{testsuite}.

@node Guidelines to edit the documentation,Documentation configuration,Shell,Coding Style
@anchor{development/CodingStyle guidelines-to-edit-the-documentation}@anchor{e06}
@section Guidelines to edit the documentation


@quotation


@enumerate 

@item 
It’s better for version control systems and diff tools to break lines at a sensible number of characters. Long lines appear as one diff. Also merging is more complex because merges are line based. Long unbreakable items may be longer (links, refs, etc.). We chose to use 160 chars.

@item 
Please indent all directive content by 3 spaces (not 2, and no tabs).

@item 
Please use @code{*} as an itemize character, since @code{-} and @code{+} are supported by docutils, but not officially supported by Sphinx.

@item 
Please underline all headlines with at least as many characters as the headline is long. Following the Python pattern for headlines the levels are:

@example
############
************ (sometimes skipped in small documents)
============
-------------------
‘’’’’’’’’’’’’’’’’’’’’’’’
@end example

@item 
It’s not required to write

@example
:samp:`code`
@end example

The default role for

@quotation

@example
`@w{`}code`@w{`}
@end example
@end quotation

is samp. @code{:samp:} is only required when you want to write italic text in code text.

@quotation

@example
:samp:`print 1+@{variable@}`
@end example
@end quotation

Now, variable becomes italic.

Please simplify all usages of @code{:samp:`code`} to @code{`@w{`}code`@w{`}} for readability. Here are the regular expressions for an editor like Notepad++:


@itemize -

@item 
Search pattern:: @code{(.+?)}

@item 
Replace pattern:: @code{\1}
@end itemize

@item 
Each backend has one folder and each platform/compiler has one file. Please note that page headlines are different from ToC headline:

@example
.. toctree::
   :hidden:

   ToC entry <file1>
   file2
@end example

@item 
Documentation should not use “you”, “we”, …, because it’s not an interactive conversation or informal letter. It’s like a thesis, everything is structured and formal. However, to make it more friendly to newcomers, we agree to allow informal language in the Quick Start Guide.

@item 
Please keep errors to a minimum.
@end enumerate
@end quotation

@menu
* Guidelines to edit section ‘Building’:: 

@end menu

@node Guidelines to edit section ‘Building’,,,Guidelines to edit the documentation
@anchor{development/CodingStyle guidelines-to-edit-section-building}@anchor{e07}
@subsection Guidelines to edit section ‘Building’


We prefer a text block, which explains how a compilation works, what we can configure for that backend, etc. After that, we prefer a code block with e.g. bash instructions on how to compile a backend. A list of instructions with embedded bash lines is not helpful. An experienced, as well as novice user, would like to copy a set of instructions into the shell. But it should be stated what these instructions will do. Complex flows like for GCC, can be split into multiple shell code blocks. Moreover, we find it essential to demonstrate when and where to change directories.

We would like to see a list like:


@itemize *

@item 
gcc (Gnu Compiler Collection)

@item 
gcc-gnat (Ada compiler for GCC)

@item 
llvm-del (LLVM development package)

@item 
…
@end itemize

The goal is also to explain what a user is installing and what the few lines in the build description do. Now they know the name, can search for similar names if they have another package manager or distro or can ask Google/Wikipedia. We often find many build receipts with cryptic shell code and to execute this unknown stuff with sudo is not comfortable. We would like to know what it does before hitting enter.

@node Documentation configuration,,Guidelines to edit the documentation,Coding Style
@anchor{development/CodingStyle documentation-configuration}@anchor{e08}
@section Documentation configuration



@itemize *

@item 
Python snippet for Sphinx’s @cite{conf.py} to extract the current version number from Git (latest tag name). [#200@footnote{https://github.com/ghdl/ghdl/issues/200}, #221@footnote{https://github.com/ghdl/ghdl/issues/221}]

@item 
Reference @code{genindex.html} from the navigation bar. [#200@footnote{https://github.com/ghdl/ghdl/issues/200}]

@item 
Create “parts” (LaTeX terminology / chapter headlines) in navigation bar. [#200@footnote{https://github.com/ghdl/ghdl/issues/200}]

@item 

@table @asis

@item Intersphinx files [#200@footnote{https://github.com/ghdl/ghdl/issues/200}]


@itemize *

@item 
To decompress the inventory file: @code{curl -s http://ghdl.github.io/ghdl/objects.inv | tail -n+5 | openssl zlib -d}. From how-to-uncompress-zlib-data-in-unix@footnote{http://unix.stackexchange.com/questions/22834/how-to-uncompress-zlib-data-in-unix}.

@item 
External ref and link to section:

@example
:ref:`GHDL Roadmap <ghdl:CHANGE:Roadmap>`
@end example

@item 
External ref to option (no link):

@example
:ghdl:option:`--ieee`
:option:`ghdl:--ieee`
@end example
@end itemize
@end table
@end itemize

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Scripts,Overview,Coding Style,Top
@anchor{development/Scripts doc}@anchor{e09}@anchor{development/Scripts dev-scripts}@anchor{e0a}@anchor{development/Scripts scripts}@anchor{e0b}
@chapter Scripts


@c #
@c This files requires a Python module called 'Frontend-AutoProgram' to be
@c located in the 'doc' root folder. It expects a variable 'parser' of type
@c ArgumentParser.

@menu
* pnodes:: 
* pnodespy:: 

@end menu

@node pnodes,pnodespy,,Scripts
@anchor{development/Scripts cmdref-pnodes}@anchor{e0c}@anchor{development/Scripts pnodes}@anchor{e0d}
@section pnodes


Meta-grammar processor

@example
usage: pnodes [-h] [--field-file FIELD_FILE] [--kind-file KIND_FILE]
              [--node-file NODE_FILE] [--template-file TEMPLATE_FILE]
              [--meta-basename META_BASENAME] [--kind-type KIND_TYPE]
              [--kind-prefix KIND_PREFIX]
              [--kind-range-prefix KIND_RANGE_PREFIX] [--node-type NODE_TYPE]
              [--keep-order]
              @{disp-nodes,disp-kinds,disp-formats,disp-funcs,disp-types,get_format,body,meta_specs,meta_body,class-kinds,libghdl-nodes,libghdl-meta,libghdl-names,libghdl-tokens,libghdl-elocs,libghdl-errorout@}
@end example

@menu
* positional arguments:: 
* optional arguments: optional arguments<2>. 

@end menu

@node positional arguments,optional arguments<2>,,pnodes
@anchor{development/Scripts positional-arguments}@anchor{e0e}
@subsection positional arguments


@geindex pnodes command line option; action
@anchor{development/Scripts cmdoption-pnodes-arg-action}@anchor{e0f}
@deffn {Option} action
@end deffn

@node optional arguments<2>,,positional arguments,pnodes
@anchor{development/Scripts optional-arguments}@anchor{e10}
@subsection optional arguments


@geindex pnodes command line option; -h
@geindex pnodes command line option; --help
@anchor{development/Scripts cmdoption-pnodes-h}@anchor{e11}@anchor{development/Scripts cmdoption-pnodes-help}@anchor{e12}
@deffn {Option} @w{-}h, @w{-}@w{-}help

show this help message and exit
@end deffn

@geindex pnodes command line option; --field-file
@anchor{development/Scripts cmdoption-pnodes-field-file}@anchor{e13}
@deffn {Option} @w{-}@w{-}field@w{-}file <field_file>

specify file which defines fields
@end deffn

@geindex pnodes command line option; --kind-file
@anchor{development/Scripts cmdoption-pnodes-kind-file}@anchor{e14}
@deffn {Option} @w{-}@w{-}kind@w{-}file <kind_file>

specify file which defines nodes kind
@end deffn

@geindex pnodes command line option; --node-file
@anchor{development/Scripts cmdoption-pnodes-node-file}@anchor{e15}
@deffn {Option} @w{-}@w{-}node@w{-}file <node_file>

specify file which defines nodes and methods
@end deffn

@geindex pnodes command line option; --template-file
@anchor{development/Scripts cmdoption-pnodes-template-file}@anchor{e16}
@deffn {Option} @w{-}@w{-}template@w{-}file <template_file>

specify template body file
@end deffn

@geindex pnodes command line option; --meta-basename
@anchor{development/Scripts cmdoption-pnodes-meta-basename}@anchor{e17}
@deffn {Option} @w{-}@w{-}meta@w{-}basename <meta_basename>

specify base name of meta files
@end deffn

@geindex pnodes command line option; --kind-type
@anchor{development/Scripts cmdoption-pnodes-kind-type}@anchor{e18}
@deffn {Option} @w{-}@w{-}kind@w{-}type <kind_type>

name of kind type
@end deffn

@geindex pnodes command line option; --kind-prefix
@anchor{development/Scripts cmdoption-pnodes-kind-prefix}@anchor{e19}
@deffn {Option} @w{-}@w{-}kind@w{-}prefix <kind_prefix>

prefix for kind literals
@end deffn

@geindex pnodes command line option; --kind-range-prefix
@anchor{development/Scripts cmdoption-pnodes-kind-range-prefix}@anchor{e1a}
@deffn {Option} @w{-}@w{-}kind@w{-}range@w{-}prefix <kind_range_prefix>

prefix for kind subtype (range)
@end deffn

@geindex pnodes command line option; --node-type
@anchor{development/Scripts cmdoption-pnodes-node-type}@anchor{e1b}
@deffn {Option} @w{-}@w{-}node@w{-}type <node_type>

name of the node type
@end deffn

@geindex pnodes command line option; --keep-order
@anchor{development/Scripts cmdoption-pnodes-keep-order}@anchor{e1c}
@deffn {Option} @w{-}@w{-}keep@w{-}order

keep field order of nodes
@end deffn

@node pnodespy,,pnodes,Scripts
@anchor{development/Scripts cmdref-pnodespy}@anchor{e1d}@anchor{development/Scripts pnodespy}@anchor{e1e}
@section pnodespy


Meta-grammar processor

@example
usage: pnodespy [-h] [--field-file FIELD_FILE] [--kind-file KIND_FILE]
                [--node-file NODE_FILE] [--template-file TEMPLATE_FILE]
                [--meta-basename META_BASENAME] [--kind-type KIND_TYPE]
                [--kind-prefix KIND_PREFIX]
                [--kind-range-prefix KIND_RANGE_PREFIX] [--node-type NODE_TYPE]
                [--keep-order]
                @{disp-nodes,disp-kinds,disp-formats,disp-funcs,disp-types,get_format,body,meta_specs,meta_body,class-kinds,libghdl-nodes,libghdl-meta,libghdl-names,libghdl-tokens,libghdl-elocs,libghdl-errorout@}
@end example

@menu
* positional arguments: positional arguments<2>. 
* optional arguments: optional arguments<3>. 

@end menu

@node positional arguments<2>,optional arguments<3>,,pnodespy
@anchor{development/Scripts id1}@anchor{e1f}
@subsection positional arguments


@geindex pnodespy command line option; action
@anchor{development/Scripts cmdoption-pnodespy-arg-action}@anchor{e20}
@deffn {Option} action
@end deffn

@node optional arguments<3>,,positional arguments<2>,pnodespy
@anchor{development/Scripts id2}@anchor{e21}
@subsection optional arguments


@geindex pnodespy command line option; -h
@geindex pnodespy command line option; --help
@anchor{development/Scripts cmdoption-pnodespy-h}@anchor{e22}@anchor{development/Scripts cmdoption-pnodespy-help}@anchor{e23}
@deffn {Option} @w{-}h, @w{-}@w{-}help

show this help message and exit
@end deffn

@geindex pnodespy command line option; --field-file
@anchor{development/Scripts cmdoption-pnodespy-field-file}@anchor{e24}
@deffn {Option} @w{-}@w{-}field@w{-}file <field_file>

specify file which defines fields
@end deffn

@geindex pnodespy command line option; --kind-file
@anchor{development/Scripts cmdoption-pnodespy-kind-file}@anchor{e25}
@deffn {Option} @w{-}@w{-}kind@w{-}file <kind_file>

specify file which defines nodes kind
@end deffn

@geindex pnodespy command line option; --node-file
@anchor{development/Scripts cmdoption-pnodespy-node-file}@anchor{e26}
@deffn {Option} @w{-}@w{-}node@w{-}file <node_file>

specify file which defines nodes and methods
@end deffn

@geindex pnodespy command line option; --template-file
@anchor{development/Scripts cmdoption-pnodespy-template-file}@anchor{e27}
@deffn {Option} @w{-}@w{-}template@w{-}file <template_file>

specify template body file
@end deffn

@geindex pnodespy command line option; --meta-basename
@anchor{development/Scripts cmdoption-pnodespy-meta-basename}@anchor{e28}
@deffn {Option} @w{-}@w{-}meta@w{-}basename <meta_basename>

specify base name of meta files
@end deffn

@geindex pnodespy command line option; --kind-type
@anchor{development/Scripts cmdoption-pnodespy-kind-type}@anchor{e29}
@deffn {Option} @w{-}@w{-}kind@w{-}type <kind_type>

name of kind type
@end deffn

@geindex pnodespy command line option; --kind-prefix
@anchor{development/Scripts cmdoption-pnodespy-kind-prefix}@anchor{e2a}
@deffn {Option} @w{-}@w{-}kind@w{-}prefix <kind_prefix>

prefix for kind literals
@end deffn

@geindex pnodespy command line option; --kind-range-prefix
@anchor{development/Scripts cmdoption-pnodespy-kind-range-prefix}@anchor{e2b}
@deffn {Option} @w{-}@w{-}kind@w{-}range@w{-}prefix <kind_range_prefix>

prefix for kind subtype (range)
@end deffn

@geindex pnodespy command line option; --node-type
@anchor{development/Scripts cmdoption-pnodespy-node-type}@anchor{e2c}
@deffn {Option} @w{-}@w{-}node@w{-}type <node_type>

name of the node type
@end deffn

@geindex pnodespy command line option; --keep-order
@anchor{development/Scripts cmdoption-pnodespy-keep-order}@anchor{e2d}
@deffn {Option} @w{-}@w{-}keep@w{-}order

keep field order of nodes
@end deffn

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Overview,Front-end,Scripts,Top
@anchor{internals/index doc}@anchor{e2e}@anchor{internals/index int-overview}@anchor{193}@anchor{internals/index overview}@anchor{e2f}
@chapter Overview



@float Figure

@image{GHDL-figures/internals,418.0pt,,,png}

@caption{Architecture overview of the GHDL toolkit (CLI, libghdl, pyGHDL and ghdl-yosys-plugin).}

@end float


@cite{GHDL} is architectured like a traditional compiler. It has:


@itemize *

@item 
a driver (sources in src/ghdldrv@footnote{https://github.com/ghdl/ghdl/blob/master/src/ghdldrv}) to call the programs (compiler, assembler, linker) if needed.

@item 
a runtime library named GRT (sources in src/grt@footnote{https://github.com/ghdl/ghdl/blob/master/src/grt}) to help execution at run-time.
This ensures that execution is cycle-accurate.

@item 
a front-end (sources in src/vhdl@footnote{https://github.com/ghdl/ghdl/blob/master/src/vhdl}) to parse and analyse VHDL.
See @ref{e30,,Front-end} and @ref{e31,,AST}.

@item 
multiple back-ends to generate either code or netlists.


@itemize *

@item 
Three for @ref{ce,,simulation} (sources are in src/ortho@footnote{https://github.com/ghdl/ghdl/blob/master/src/ortho}): mcode, LLVM and GCC.
See @ref{55,,Building GHDL from Sources}.

@item 
Two for @ref{4d,,synthesis} (sources in src/synth@footnote{https://github.com/ghdl/ghdl/blob/master/src/synth}):
@ref{18d,,–synth} and @ref{70,,Yosys plugin}.
@end itemize
@end itemize

The architecture is modular and some of the components are available through the shared library @code{libghdl}.
@code{libghdl} is used by the @ref{70,,Yosys plugin}, the Language Server Protocol (LSP) server, and to fill the data of
pyVHDLModel (see The pyVHDLModel Documentation@footnote{https://vhdl.github.io/pyVHDLModel/index.html}).

The main work with regard to understanding the VHDL language is performed by the front-end, which is documented in the
next section.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Front-end,AST,Overview,Top
@anchor{internals/Frontend doc}@anchor{e32}@anchor{internals/Frontend front-end}@anchor{e33}@anchor{internals/Frontend int-frontend}@anchor{e30}
@chapter Front-end


Input files (or source files) are read by @cite{files_map.ad[sb]}. Only regular files can be
read, because they are read entirely before being scanned. This simplifies the scanner,
but this also allows to have a unique index for each character in any file.
Therefore the source location is a simple 32-bit integer whose type is @cite{Location_Type}.
From the location, @cite{files_map} can deduce the source file (type is @cite{Source_File_Entry})
and then the offset in the source file.  There is a line table for each source file in
order to speed-up the conversion from file offset to line number and column number.

The scanner (file @code{vhdl-scanner.ad[sb]}) reads the source files and creates token
from them.  The tokens are defined in file @code{vhdl-tokens.ads}.  Tokens are scanned
one by one, so the scanner doesn’t keep in memory the previous token.  Integer or
floating point numbers are special tokens because beside the token itself there is
also a variable for the value of the number.

For identifiers there is a table containing all identifiers.  This is implemented by
file @code{name_table.ad[sb]}.  Each identifier is associated to a 32-bit number
(they are internalized).  So the number is used to reference an identifier.  About
one thousand identifiers are predefined (by @code{std_names.ad[sb]}).  Most of
them are reserved identifiers (or keywords).  When the scanner find an identifier, it
checks if it is a keyword.  In that case it changes the token to the keyword token.

The procedure @cite{scan} is called to get the next token.  The location of the token and
the location after the token are available to store it in the parser tree.

The main client of the scanner is the parser.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node AST,Run Time Information RTI,Front-end,Top
@anchor{internals/AST doc}@anchor{e34}@anchor{internals/AST ast}@anchor{e35}@anchor{internals/AST int-ast}@anchor{e31}
@chapter AST


@menu
* Introduction:: 
* The AST in GHDL:: 
* Why a meta-model ?:: 
* Dealing with ownership:: 
* Node Type:: 

@end menu

@node Introduction,The AST in GHDL,,AST
@anchor{internals/AST introduction}@anchor{e36}
@section Introduction


The AST is the main data structure of the front-end and is created by the parser.

AST stands for Abstract Syntax Tree.

This is a tree because it is a graph with nodes and links between nodes.  As the graph
is acyclic and each node but the root has only one parent (the link that points to it).
In the front-end there is only one root which represents the set of libraries.

The tree is a syntax tree because it follows the grammar of the VHDL language: there
is, for example, a node per operation (like @cite{or}, @cite{and} or @cite{+}), a node per declaration,
a node per statement, and a node per design unit (like entity or architecture).  The front-end needs to represent the source file using the grammar because most of the
VHDL rules are defined according to the grammar.

Finally, the tree is abstract because it is an abstraction of the source file.  Comments and layout aren’t kept in the syntax tree.  Furthermore, if you rename a
declaration or change the value of a literal, the tree will have exactly the same
shape.

But we can also say that the tree is neither abstract, nor syntaxic and nor a tree.

It is not abstract because it contains all the information from the source file
(except comments) are available in the AST, inclusing the location.  So the source
file can be reprinted (the name unparsed is also used) from the AST.  If a mechanism
is also added to deal with comments, the source file can even be pretty-printed from
the AST.

It is not purely syntactic because the semantic analysis pass decorates the tree
with semantic information.  For example, the type of each expression and sub-expression
is computed.  This is necessary to detect some semantic errors like assigning an array
to an integer.

Finally, it is not a tree anymore because new links are added during semantic
analysis.  Simple names are linked to their declaration.

@node The AST in GHDL,Why a meta-model ?,Introduction,AST
@anchor{internals/AST the-ast-in-ghdl}@anchor{e37}
@section The AST in GHDL


The GHDL AST is described in file @code{vhdl-nodes.ads}.

An interesting particularity about the AST is the presence of a
meta-model.

The meta-model is not formally described.  What the
meta-meta-model would be is very simple: there are elements and attributes.  An
element is composed of attributes, and an attribute is either a value
(a flag, an integer, an enumeration) or a link to an element.

(When someone wants to be clever, they often speak about meta-model in
order to confuse you.  Don’t let them impress you.  The trick is to
answer them with any sentence containing ‘meta-meta-model’).

In the GHDL meta-model, there are only 3 elements:


@itemize *

@item 
variable list of nodes (@cite{List}).  These are like vectors as the
length can be changed.

@item 
Fixed lists of nodes (@cite{Flist}).  The length of a fixed list is defined at creation.

@item 
Nodes.  A node has a kind (@cite{Iir_Kind} which is also defined in the file), and fields.
The kind is set at creation and cannot be changed, while fields can be.
@end itemize

Or without using the word “meta-model”, the AST is composed of nodes and
lists.

The meta-model describes the types of the attributes: most of them are
either a node reference, a boolean flag or a enumerated type (like
@cite{Iir_Staticness}).  But there are also links: a reference to another
node or to a list.

The accessors for the node are generated automatically by the python
script @code{src/scripts/pnodes.py}.

@node Why a meta-model ?,Dealing with ownership,The AST in GHDL,AST
@anchor{internals/AST why-a-meta-model}@anchor{e38}
@section Why a meta-model ?


All ASTs could have a meta-model, because the definition of elements
and attributes is very generic.  But there is a detail: the definition
of an element is static.  So for each node, the list of attributes and
their types is static and each list is a list of the same element type.
So there is no bag, nor dynamic typing.  This is per the definition of
the meta-meta-model.

But in GHDL there is an API at the meta-model level in file
@code{vhdl-nodes_meta.ads}.  There is the list of all attribute types
in enumeration @cite{Types_Enum}.  There is the list of all possible
attributes in enumeration @cite{Fields_Enum}.  For a particular kind of
node, you can get the list of fields with @cite{Get_Field} and for every
type, there is API to get or set any field of any node.

Having a meta-model API allows to build algorithm that deals with any
node.  The dumper (in file @code{vhdl-disp_tree.ad[sb]}) is used to
dump a node and possibly its sub-nodes.  This is very useful while
debugging GHDL.  It is written using the meta-model, so it knows how to display
a boolean and the various other enumerated types, and how to display a list.  To
display a node, it just gets the kind of the type, prints the kind name and queries
all the fields of the node.  There is nothing particular to a specific kind, so you
don’t need to modify the dumper if you add a node.

The dumper wouldn’t be a strong enough reason by itself to have a meta-model.  But
the pass to create instances is a good one.  When a vhdl-2008 package is instantiated,
at least the package declaration is created in the AST (this is needed because there
are possibly new types).  And creating an instance using the meta-model is much
simpler (and much more generic) that creating the instance using the nodes directly.
The code to create instances is in files @code{vhdl-sem_inst.ad[sb]}.

The meta-model API is mostly automatically generated by the python
script.

@node Dealing with ownership,Node Type,Why a meta-model ?,AST
@anchor{internals/AST dealing-with-ownership}@anchor{e39}
@section Dealing with ownership


The meta-model also structures the tree, because there is a notion of
ownership: every element (but the root) has only one parent that owns
it, and there are no cycle in the ownership.  So the tree is really a
tree.

That simplifies algorithms because it is easier to walk a tree than a
graph.  It is also easier to free a sub-tree than a sub-graph.

Getting a real tree from the parser might look obvious, but it is
not.  Consider the following VHDL declaration:

@example
variable v1, v2 : std_logic_vector (1 downto 0) := "00";
@end example

Both variables @code{v1} and @code{v2} share the same type and the same
initial value.  The GHDL AST uses two different strategies:


@itemize *

@item 
For the type, there are two fields in the node:
@code{subtype_indication} and @code{type}.  The @code{subtype_indication} is
owned and set only on the first variable to the output of the
parser.  The @code{type} field is a reference and set on all variables
to the result of analysis of @code{subtype_indication}.

@item 
For the initial value, there is only one field @code{default_value}
that is set on all variables.  But the ownership is controlled by a
flag in the node (an attribute) named @code{is_ref}.  It is set to
false on the first variable and true for the others.
@end itemize

The notion of ownership is highlighted by the Rust language, and
indeed this is an important notion.  The implementation of the Rust
AST has to be investigated.

@node Node Type,,Dealing with ownership,AST
@anchor{internals/AST node-type}@anchor{e3a}
@section Node Type


TBC: 32-bit, extensions.

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@node Run Time Information RTI,GNATdoc,AST,Top
@anchor{internals/RTI doc}@anchor{e3b}@anchor{internals/RTI run-time-information-rti}@anchor{e3c}
@chapter Run Time Information (RTI)


@cartouche
@quotation Warning 
This section was written while trying to understand how the RTI is
organized. It almost certainly contains errors, and it likely
won’t be updated with the codebase, so don’t believe any of the
information here. Nevertheless, it may be helpful for a developer new
to GHDL trying to understand the organization of the RTI.
@end quotation
@end cartouche

@menu
* Useful Definitions:: 
* RTI Nodes / RTII Nodes:: 

@end menu

@node Useful Definitions,RTI Nodes / RTII Nodes,,Run Time Information RTI
@anchor{internals/RTI useful-definitions}@anchor{e3d}
@section Useful Definitions


RTI

@quotation

Run Time Information. The information that is used when simulating the design.
@end quotation

RTIN

@quotation

Run Time Information Node. The design is organized into a directed
graph where the architectures, signals and statements are represented
as nodes on the graph. This graph can be cyclic since an architecture
may be instantiated many times, and could be recursively
instantiated.
@end quotation

Context

@quotation

The context of a node is the position in the elaborated design. For
example a architecture might be instantiated 4 times in a design, but
will have a single RTI node. The data related to that node but
specific to particular instantiation has an address in memory. A
context object (@cite{Rti_Context}) bundles an RTI node with an address for
it’s instantiation data.  If this RTI node references another RTI node we
can find the relevant instantiation data for that node by considering the
context.
@end quotation

RTII

@quotation

Run Time Instance Information. This is a record that groups an RTI
node with any other data necessary to specify a particular
instantiation. The RTII objects create a tree that represents the
elaborated design. Currently they are only implemented for RTIN nodes
of signals, ports, generics, constants and their subcomponents.
@end quotation

@node RTI Nodes / RTII Nodes,,Useful Definitions,Run Time Information RTI
@anchor{internals/RTI rti-nodes-rtii-nodes}@anchor{e3e}
@section RTI Nodes / RTII Nodes


All RTI node records have a @cite{Ghdl_Rtin_Common} record as their first
element. This record contains the following elements:

Kind : Ghdl_Rtik

@quotation

This specified what kind of node it is. For example a @cite{process} and
an @cite{entity} node are both represented by @cite{Ghdl_Rtin_Block} records
but they are distinguished by having a different Kind.
@end quotation

Depth : Ghdl_Rti_Depth

@quotation

The depth indicates the relationship between the RTI Node and the RTI
Context. Child nodes often just use the same Context as their parent,
and the depth indicates how far up in the hierarchy you go to find
where the Context is based.
@end quotation

Mode : Ghdl_Rti_U8

@quotation

??
@end quotation

Max_Depth : Ghdl_Rti_Depth

@quotation

??
@end quotation

It’s also useful to look at some of the other elements that commonly
appear in the different RTI Node records.

Loc : Ghdl_Rti_Loc

@quotation

This is an address offset. It tells us where the instantiation data
for this node is located relative to the data of it’s parent.
@end quotation

Linecol : Ghdl_Index_Type

@quotation

Refers back to a location in the source code.
@end quotation

Parent : Ghdl_Rti_Access

@quotation

Points to the parent. This isn’t necessarily the parent in the RTI
tree though. For example the @cite{Parent} of an architecture RTI node
points at the entity node, however the parent in the tree is the
instance RTI.
@end quotation

This document will now review that main classes of RTI Nodes.

@menu
* Architecture RTI (Ghdl_Rtin_Block): Architecture RTI Ghdl_Rtin_Block. 
* Entity RTI (Ghdl_Rtin_Block): Entity RTI Ghdl_Rtin_Block. 
* Other Blocks (Package/Process) (Ghdl_Rtin_Block): Other Blocks Package/Process Ghdl_Rtin_Block. 
* if_generate / case_generate (Ghdl_Rtin_Block): if_generate / case_generate Ghdl_Rtin_Block. 
* for_generate (Ghdl_Rtin_Generate): for_generate Ghdl_Rtin_Generate. 
* instance (Ghdl_Rtin_Instance): instance Ghdl_Rtin_Instance. 
* Port (Ghdl_Rtin_Object): Port Ghdl_Rtin_Object. 
* Array Kinds:: 
* Object_To_Base_Bound:: 
* Array_Type (Ghdl_Rtin_Type_Array): Array_Type Ghdl_Rtin_Type_Array. 
* Array Subtype (Ghdl_Rtin_Subtype_Array): Array Subtype Ghdl_Rtin_Subtype_Array. 
* Port / Signal / Generic / Constant / Variable (Ghdl_Rtin_Object): Port / Signal / Generic / Constant / Variable Ghdl_Rtin_Object. 
* Record Kinds:: 
* Record Type (Ghdl_Rtin_Type_Record): Record Type Ghdl_Rtin_Type_Record. 
* Record Type (Ghdl_Rtin_Type_Record): Record Type Ghdl_Rtin_Type_Record<2>. 
* Element Type (Ghdl_Rtin_Element): Element Type Ghdl_Rtin_Element. 
* Examples:: 

@end menu

@node Architecture RTI Ghdl_Rtin_Block,Entity RTI Ghdl_Rtin_Block,,RTI Nodes / RTII Nodes
@anchor{internals/RTI architecture-rti-ghdl-rtin-block}@anchor{e3f}
@subsection Architecture RTI (Ghdl_Rtin_Block)


The architecture acts as a simple container for it’s children. Create
the child tree nodes by looping through @cite{Ghdl_Rti_Block.Children} and
keeping the context unchanged.

The information about the generics and ports access the entity RTI
nodes through @cite{Ghdl_Rti_Block.Parent} using the same context.

The instantiation data of an architecture contains a single item, a
pointer to the RTI node. This is necessary because it is necessary to
store which of the possible architectures of this entity was
instantiated.

@node Entity RTI Ghdl_Rtin_Block,Other Blocks Package/Process Ghdl_Rtin_Block,Architecture RTI Ghdl_Rtin_Block,RTI Nodes / RTII Nodes
@anchor{internals/RTI entity-rti-ghdl-rtin-block}@anchor{e40}
@subsection Entity RTI (Ghdl_Rtin_Block)


The RTI of an entity is a @cite{Ghdl_Rti_Block} record (the same as the
architecture) and uses the same context as the architecture. It is
accessed via the architecture’s @cite{Parent} element. The generics and
ports can be accessed as the children of the entity.

@node Other Blocks Package/Process Ghdl_Rtin_Block,if_generate / case_generate Ghdl_Rtin_Block,Entity RTI Ghdl_Rtin_Block,RTI Nodes / RTII Nodes
@anchor{internals/RTI other-blocks-package-process-ghdl-rtin-block}@anchor{e41}
@subsection Other Blocks (Package/Process) (Ghdl_Rtin_Block)


The block just loops over it’s children.

@node if_generate / case_generate Ghdl_Rtin_Block,for_generate Ghdl_Rtin_Generate,Other Blocks Package/Process Ghdl_Rtin_Block,RTI Nodes / RTII Nodes
@anchor{internals/RTI if-generate-case-generate-ghdl-rtin-block}@anchor{e42}
@subsection if_generate / case_generate (Ghdl_Rtin_Block)


If-Generate and Case-Generate statements are represented with
@cite{Ghdl_Rtin_Block} records with Kind @cite{Ghdl_Rtik_If_Generate} and
@cite{Ghdl_Rtik_Case_Generate}.

Their children are all of Kind @cite{Ghdl_Rtik_Body}, and represent the
different possible blocks that could be selected.

The instantiation data of a if_generate or case_generate RTI contains two items:
1) A pointer to the context of the selected generate body (instance_pointer).
2) The index of the selected child (block_id)

The child node is then created from the RTI node
@cite{Ghdl_Rtik_Body.Children(block_id)} combined with the instantiation data given by
@cite{instance_pointer}.

@node for_generate Ghdl_Rtin_Generate,instance Ghdl_Rtin_Instance,if_generate / case_generate Ghdl_Rtin_Block,RTI Nodes / RTII Nodes
@anchor{internals/RTI for-generate-ghdl-rtin-generate}@anchor{e43}
@subsection for_generate (Ghdl_Rtin_Generate)


For-Generate statements are represented with @cite{Ghdl_Rtin_Generate}
records with Kind @cite{Ghdl_Rtik_For_Generate}.

Their RTI-node structure is different from the @cite{Ghdl_Rtin_Block}
record in that rather than having @cite{Nbr_Child} and @cite{Children} elements,
it has:

Child : Ghdl_Rti_Access

@quotation

A pointer to the generate body node that is their only child.
@end quotation

Size : Ghdl_Index_Type

@quotation

The amount of memory required for the context of their child.
@end quotation

The Child element is a generate body. There is only a single RTI-node
structure which Child points to, however a different context is used
each time we go around the for-generate loop.

The context of a for_generate RTI contains a single item: An address
which points at the contexts for it’s children.

Each time we go around the for generate loop we increment the address
of the context by @cite{Size} so we looking at the correct context for that
instantiation of the contexts of the loop.

One complexity of the for-generate is finding the number of times that
we go around the loop. The first element in the child generate body is
an iterator. That iterator has a type and we can get the bounds of
that type by passing it the local context. The type of the iterator
for the for-generate loop is implicitly created and placed directly
before the for_generate block, so using the local context will work.
There might be a bug if the for-generate loop uses a type that wasn’t
defined implicitly.

@node instance Ghdl_Rtin_Instance,Port Ghdl_Rtin_Object,for_generate Ghdl_Rtin_Generate,RTI Nodes / RTII Nodes
@anchor{internals/RTI instance-ghdl-rtin-instance}@anchor{e44}
@subsection instance (Ghdl_Rtin_Instance)


An instantiation of an entity is represented by a @cite{Ghdl_Rtin_Instance}
node with Kind @cite{Ghdl_Rtik_Instance}.

The context contains a single item, which is a pointer to the context
of the architecture. The architecture context also contains a single
item, which is a pointer to the architecture RTI Node.

@node Port Ghdl_Rtin_Object,Array Kinds,instance Ghdl_Rtin_Instance,RTI Nodes / RTII Nodes
@anchor{internals/RTI port-ghdl-rtin-object}@anchor{e45}
@subsection Port (Ghdl_Rtin_Object)


@node Array Kinds,Object_To_Base_Bound,Port Ghdl_Rtin_Object,RTI Nodes / RTII Nodes
@anchor{internals/RTI array-kinds}@anchor{e46}
@subsection Array Kinds



@table @asis

@item Ghdl_Rtik_Type_Array

A VHDL array where the range is not specified.

@item Ghdl_Rtik_Subtype_Array

A VHDL array where the range is specified.
A Type_Array together with the bounds.
@end table

@node Object_To_Base_Bound,Array_Type Ghdl_Rtin_Type_Array,Array Kinds,RTI Nodes / RTII Nodes
@anchor{internals/RTI object-to-base-bound}@anchor{e47}
@subsection Object_To_Base_Bound


This function takes an object type and an object’s static context
location and returns the complex context location and the bounds.

When the object is static the bounds is null (because the bounds
are held in the type definition) and the complex context is the
same as the static context.

When the object is complex the bounds is null, and the static
context location contains a pointer to the complex context
location.

When the object is unbound the static context contains a @cite{Ghdl_Uc_Array}
record. The contains @cite{Bounds} which points to the bounds, and @cite{Base}
which points to the complex context location.

@node Array_Type Ghdl_Rtin_Type_Array,Array Subtype Ghdl_Rtin_Subtype_Array,Object_To_Base_Bound,RTI Nodes / RTII Nodes
@anchor{internals/RTI array-type-ghdl-rtin-type-array}@anchor{e48}
@subsection Array_Type (Ghdl_Rtin_Type_Array)


Contains Common and Name fields followed by:


@table @asis

@item Element : Ghdl_Rti_Access

The type of the elements in the array.

@item Nbr_Dim : Ghdl_Index_Type

The number of dimensions in the array.
Multidimensional arrays are not stored as arrays of arrays,
but rather directly as multidimensional arrays.

@item Indexes : Ghdl_Rti_Arr_Acc

??? This is an array of the indices for each dimension, but I don’t
know what kind of object they are represented by yet.
@end table

Functions acting on types don’t seem to use context in the same way.
The functions are often pass the RTI object, a context (of a object
higher in the hierarchy, and a pointer to a local context (often called
layout)).

The context of an Array Type has a defined structure which is @cite{Ghdl_Uc_Array}.
This contains a @cite{Base} and a @cite{Bounds} field.


@table @asis

@item Base : Address

Points to the complex context of the object.

@item Bounds : Address

Points to the bounds of the array.
@end table

@node Array Subtype Ghdl_Rtin_Subtype_Array,Port / Signal / Generic / Constant / Variable Ghdl_Rtin_Object,Array_Type Ghdl_Rtin_Type_Array,RTI Nodes / RTII Nodes
@anchor{internals/RTI array-subtype-ghdl-rtin-subtype-array}@anchor{e49}
@subsection Array Subtype (Ghdl_Rtin_Subtype_Array)


Array subtypes are represented by the @cite{Ghdl_Rtin_Subtype_Composite}
RTI node.
The node contains the @cite{Common} and @cite{Name} fields, followed by


@table @asis

@item Basetype : Ghdl_Rti_Access

A pointer to the RTI array type which it is a subtype of.

@item Layout : Ghdl_Rti_Loc

A pointer to the context of the subtype relative to the parent context.
The layout contains:
a value size, a signal sizes, and the bounds.
@end table

@node Port / Signal / Generic / Constant / Variable Ghdl_Rtin_Object,Record Kinds,Array Subtype Ghdl_Rtin_Subtype_Array,RTI Nodes / RTII Nodes
@anchor{internals/RTI port-signal-generic-constant-variable-ghdl-rtin-object}@anchor{e4a}
@subsection Port / Signal / Generic / Constant / Variable (Ghdl_Rtin_Object)


The context of an object is found by taking offsetting the Context by
the @cite{Loc} field on the object. The implementation often uses the same
Context for a group of hierarhical signals, so that the determination
of the location of the context of objects in the hierarchy must be
found using a function such as @cite{Loc_To_Addr}.

The @cite{Obj_Type} field of an object points at the type of the object.

A signal definition can also include placing bounds on a unbounded
type.

The tree of an object can be created by pairing the hierarchy of types
with the hierarchy of contexts.


@table @asis

@item If the type is a scalar type then the value of the object is found at:


@table @asis

@item If the object is a port or signal then the only item in the context

is a pointer to the signal object.  The first item in the signal object
is a pointer to the value.

@item If the object is a constant, generic or variable then the context

contains a pointer to the value itself.
@end table

@item If the type is an unbound array:

We must be at the top level of a hierarchical object.
The context contains a pointer to the first element context,
and a pointer to the bounds.

@item If the type is a static array:

The context is the same as the context of the first element.
The bounds are given in the layout of the type (composite).

@item If the type is a complex array:

The context contains a pointer to the context of the first element.
Because the size of the context cannot be determined at compile time
this layer of indirection is necessary.
@end table

@node Record Kinds,Record Type Ghdl_Rtin_Type_Record,Port / Signal / Generic / Constant / Variable Ghdl_Rtin_Object,RTI Nodes / RTII Nodes
@anchor{internals/RTI record-kinds}@anchor{e4b}
@subsection Record Kinds


Ghdl_Rtik_Type_Record

@quotation

A standard VHDL record.
@end quotation

Ghdl_Rtik_Type_Unbounded_Record

@quotation

A vhdl record containing an unbounded array (directory or indirectly).
@end quotation

Ghdl_Rtik_Subtype_Record

@quotation

A subtype of an unbounded record where all arrays are not bounded.
@end quotation

Ghdl_Rtik_Subtype_Unbounded_Record

@quotation

A subtype of an unbounded record where some but not all of the previously
unbound arrays have been bound.
@end quotation

@node Record Type Ghdl_Rtin_Type_Record,Record Type Ghdl_Rtin_Type_Record<2>,Record Kinds,RTI Nodes / RTII Nodes
@anchor{internals/RTI record-type-ghdl-rtin-type-record}@anchor{e4c}
@subsection Record Type (Ghdl_Rtin_Type_Record)


Can have Kind of @cite{Ghdl_Rtik_Type_Record} or @cite{Ghdl_Rtik_Type_Unbounded_Record}.
The record elements after @cite{Common} and @cite{Name} are:

Nbrel : Ghdl_Index_Type

@quotation

Number elements in the record.
@end quotation

Elements : Ghdl_Rti_Arr_Acc;

@quotation

The RTI nodes of the element definitions.
@end quotation

Layout : Ghdl_Rti_Loc

@quotation

The layout is the relative address that the layout/bounds information
of the elements will be relative to.
@end quotation

@node Record Type Ghdl_Rtin_Type_Record<2>,Element Type Ghdl_Rtin_Element,Record Type Ghdl_Rtin_Type_Record,RTI Nodes / RTII Nodes
@anchor{internals/RTI id1}@anchor{e4d}
@subsection Record Type (Ghdl_Rtin_Type_Record)


For an unbounded record the Layout is not used, but rather a @cite{Bounds} must be
given.

@node Element Type Ghdl_Rtin_Element,Examples,Record Type Ghdl_Rtin_Type_Record<2>,RTI Nodes / RTII Nodes
@anchor{internals/RTI element-type-ghdl-rtin-element}@anchor{e4e}
@subsection Element Type (Ghdl_Rtin_Element)


The record elements after @cite{Common} and @cite{Name} are:


@table @asis

@item Eltype : Ghdl_Rti_Access

The RTI node representing the type of the element.

@item Val_Off : Ghdl_Index_Type

For static element the offset is in the record.
For complex element the offset is in the type layout or object layout.
This is the offset for the value for generics or constants.

@item Sig_Off : Ghdl_Index_Type

This is the offset for the value wrapper in signals or ports.

@item Layout_Off : Ghdl_Index_Type;

For unbounded records: element layout offset in the layout.
The layout is stores all the bounds for the various elements
when the unbounded record is given bounds.
@end table

@node Examples,,Element Type Ghdl_Rtin_Element,RTI Nodes / RTII Nodes
@anchor{internals/RTI examples}@anchor{e4f}
@subsection Examples


@example
library ieee ;
use ieee.std_logic_1164.all;

package mypkg is

  type mytype is record
    a: std_logic;
    b: std_logic;
  end record;

end package;

library ieee ;
use ieee.std_logic_1164.all;
use work.mypkg.all;

entity myentity is
  port(
    x: in mytype
    );
end myentity;

architecture arch of myentity is
begin
end arch;
@end example

What will be the structure of the RTI for the port @cite{myentity.x}?

The architecture has a context.
Address of the architecture is A

The entity has the same context.
Address of the entity is A.

The child on the entity is the port.
Address of the port is A + 16.

A port is a record ‘x’
Address of the record value is A + 16.

The record contains ‘a’ a std_logic vector.
Address is A + 16.

The record contains ‘b’ a std_logic_vector.
Address is A + 24

@example
library ieee ;
use ieee.std_logic_1164.all;

package mypkg is

  type mytype is record
    a: std_logic_vector(1 downto 0);
    b: std_logic_vector(1 downto 0);
  end record;

end package;

library ieee ;
use ieee.std_logic_1164.all;
use work.mypkg.all;

entity myentity is
  port(
    x: in mytype
    );
end myentity;

architecture arch of myentity is
begin
end arch;
@end example

@example
- Architecture (A)
  - Entity (A)
    - port x (A+16)
      - x.a (A+16)
      - x.a(?) (A+16)
      - x.a(?) (A+24)
      - x.b (A+32)
      - x.b(?) (A+40)
      - x.b(?) (A+48)
@end example

@example
library ieee ;
use ieee.std_logic_1164.all;

entity myentity is
  generic (
    WIDTH: natural := 2
    );
  port(
    x: in std_logic_vector(WIDTH-1 downto 0)
    );
end myentity;

architecture arch of myentity is
begin
end arch;
@end example

@example
- Architecture (A)
  - Entity (A)
    - generic WIDTH (A+16)
    - port x (A+48) content of address (A+48) is B
      - type information
        analyze a type with context (address=A, rti=entity)
        layout is located at A+20
        so bounds is located at A+28
      - x subtype array (B)
        - x(?) (B)
        - x(?) (B+8)
@end example

@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # This file is a placeholder and will be replaced

@node GNATdoc,Index<2>,Run Time Information RTI,Top
@anchor{gnatdoc/index doc}@anchor{e50}@anchor{gnatdoc/index gnatdoc}@anchor{e51}
@chapter GNATdoc


@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c # This file is a placeholder and will be replaced

@node Index<2>,Python Module Index<2>,GNATdoc,Top
@anchor{genindex doc}@anchor{e52}@anchor{genindex index}@anchor{e53}
@chapter Index


@c # Load pre-defined aliases and graphical characters like © from docutils
@c # <file> is used to denote the special path
@c # <Python>\Lib\site-packages\docutils\parsers\rst\include

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c This data file has been placed in the public domain.

@c Derived from the Unicode character mappings available from
@c <http://www.w3.org/2003/entities/xml/>.
@c Processed by unicode2rstsubs.py, part of Docutils:
@c <https://docutils.sourceforge.io>.

@c # define a hard line break for HTML

@c This file is a placeholder and will be replaced

@node Python Module Index<2>,[Next] 4 0,Index<2>,Top
@anchor{py-modindex doc}@anchor{e54}@anchor{py-modindex python-module-index}@anchor{e55}
@chapter Python Module Index


@node [Next] 4 0,[2023-03-08] 3 0 0,Python Module Index<2>,Top
@anchor{index next-4-0}@anchor{e56}
@chapter [Next] 4.0


@node [2023-03-08] 3 0 0,[2022-02-28] 2 0,[Next] 4 0,Top
@anchor{index id1}@anchor{e57}
@chapter [2023-03-08] 3.0.0


Milestone v3.0 ➚@footnote{https://github.com/ghdl/ghdl/milestone/11?closed=1}


@itemize -

@item 
Handle IEEE operators for static expressions.

@item 
Improved support of VHDL 2008 (still!).

@item 
Start support of VHDL 2019 (@code{--std=19}).

@item 
pyGHDL:


@itemize -

@item 
Experimental support to preserve VHDL code comments for documentation
extraction.

@item 
Experimental packaging with a platform-specific shared library for
standalone installation using PIP.

@item 
DOM: dependency graphs, instantiation graphs (design hierarchy),
file dependencies (compile order).
@end itemize

@item 
Pre-releases are published to GitHub Releases and assets are uploaded to
pre-releases and releases.
@end itemize

@node [2022-02-28] 2 0,[2021-02-02] 1 0,[2023-03-08] 3 0 0,Top
@anchor{index id2}@anchor{e58}
@chapter [2022-02-28] 2.0


Milestone v2.0 ➚@footnote{https://github.com/ghdl/ghdl/milestone/10?closed=1}


@itemize -

@item 
Improvements to VHDL 2008 supports and synthesis.
@end itemize

@node [2021-02-02] 1 0,[2021-01-31] 1 0 0rc1,[2022-02-28] 2 0,Top
@anchor{index id3}@anchor{e59}
@chapter [2021-02-02] 1.0


Milestone v1.0 ➚@footnote{https://github.com/ghdl/ghdl/milestone/9?closed=1}


@itemize -

@item 
Repository ghdl/ghdl-cosim@footnote{https://github.com/ghdl/ghdl-cosim} created.
It contains documentation and code examples related to VHPIDIRECT, VPI and SystemC.

@item 
GitHub Action ghdl/setup-ghdl-ci@footnote{https://github.com/ghdl/setup-ghdl-ci}
created, to allow easy installation of nightly GHDL assets in GitHub Actions
workflows.

@item 
Main documentation site(s) moved to ghdl.github.io/ghdl@footnote{https://ghdl.github.io/ghdl/}
and ghdl.github.io/ghdl-cosim@footnote{https://ghdl.github.io/ghdl-cosim/}.
@end itemize

@node [2021-01-31] 1 0 0rc1,[2020-05-21] Nightly build assets,[2021-02-02] 1 0,Top
@anchor{index rc1}@anchor{e5a}
@chapter [2021-01-31] 1.0.0rc1



@itemize -

@item 
Python bindings overhauled and renamed to @code{pyGHDL}. Three modules are included:
@code{libghdl}, @code{lsp} and @code{dom}.

@item 
Utility scripts in the codebase moved into subdir @code{scripts}: CI, binding
generation, vendors, etc.

@item 
Repository ghdl/extended-tests@footnote{https://github.com/ghdl/extended-tests}
created for testing @code{vendors} build scripts.

@item 
Logo updated (org, ghdl/ghdl, ghdl/docker and ghdl/ghdl-cosim).

@item 
Assets not added to releases or pre-releases anymore.
Users should use package managers or nightly assets (updated after each
successful CI run of branch @code{master}):
nightly@footnote{https://github.com/ghdl/ghdl/releases/tag/nightly}.
@end itemize

@node [2020-05-21] Nightly build assets,[2020-05-09] New repositories and a wiki,[2021-01-31] 1 0 0rc1,Top
@anchor{index nightly-build-assets}@anchor{e5b}
@chapter [2020-05-21] Nightly build assets



@itemize -

@item 
After each successful CI run of branch @code{master}, packages are published as assets of pre-release nightly@footnote{https://github.com/ghdl/ghdl/releases/tag/nightly}.

@item 
GitHub Action ghdl/setup-ghdl-ci@footnote{https://github.com/ghdl/setup-ghdl-ci} was created, to allow easy installation of nightly GHDL assets in GitHub Actions workflows.
@end itemize

@node [2020-05-09] New repositories and a wiki,[2020-02-28] 0 37,[2020-05-21] Nightly build assets,Top
@anchor{index new-repositories-and-a-wiki}@anchor{e5c}
@chapter [2020-05-09] New repositories and a wiki



@itemize -

@item 
The plugin for Yosys was moved from tgingold/ghdlsynth-beta@footnote{https://github.com/tgingold/ghdlsynth-beta}
to ghdl/ghdl-yosys-plugin@footnote{https://github.com/ghdl/ghdl-yosys-plugin}.

@item 
Repository ghdl/ghdl-cosim@footnote{https://github.com/ghdl/ghdl-cosim} was created.
It contains documentation and code examples related to VHPIDIRECT, VPI and SystemC.
See Co-simulation with GHDL@footnote{https://ghdl.github.io/ghdl-cosim/index.html#cosim} and Previous work and future ideas@footnote{https://github.com/ghdl/ghdl-cosim/issues/1}.

@item 
A Wiki@footnote{https://github.com/ghdl/ghdl/wiki} was created.
The roadmap and ideas for documentation and internship programs were moved there.
If you want to contribute anyhow, have a look@footnote{https://github.com/ghdl/ghdl/wiki}!
@end itemize

@node [2020-02-28] 0 37,[2019-03-03] 0 36,[2020-05-09] New repositories and a wiki,Top
@anchor{index id4}@anchor{e5d}
@chapter [2020-02-28] 0.37


Milestone v0.37 ➚@footnote{https://github.com/ghdl/ghdl/milestone/8?closed=1}


@itemize -

@item 
Python binding added

@item 
Experimental support of synthesis (either with –synth or with the Yosys plugin)

@item 
Fixes and improved support of VHDL 2008


@itemize -

@item 
PSL keywords are directly handled in VHDL 2008
@end itemize

@item 
Add support for assume.

@item 
Last version that supports the Mentor variation of @code{std_logic_arith}.
The Synopsys one is still available.
@end itemize

@node [2019-03-03] 0 36,[2019-02-23] 0 36-rc1,[2020-02-28] 0 37,Top
@anchor{index id5}@anchor{e5e}
@chapter [2019-03-03] 0.36


Milestone v0.36 ➚@footnote{https://github.com/ghdl/ghdl/milestone/7?closed=1}


@itemize -

@item 
Add support for unbounded arrays.
@end itemize

@node [2019-02-23] 0 36-rc1,[2018-11-29] 20181129,[2019-03-03] 0 36,Top
@anchor{index id6}@anchor{e5f}
@chapter [2019-02-23] 0.36-rc1



@itemize -

@item 
More support of unbounded arrays and records.

@item 
Support of UVVM and VUnit.
@end itemize

@node [2018-11-29] 20181129,[2017-12-20] GitHub organization,[2019-02-23] 0 36-rc1,Top
@anchor{index id7}@anchor{e60}
@chapter [2018-11-29] 20181129


@node [2017-12-20] GitHub organization,[2017-12-14] 0 35,[2018-11-29] 20181129,Top
@anchor{index github-organization}@anchor{e61}
@chapter [2017-12-20] GitHub organization


A new GitHub organization is created and the main repo is moved from
github.com/tgingold/ghdl@footnote{https://github.com/tgingold/ghdl} to github.com/ghdl/ghdl@footnote{https://github.com/ghdl/ghdl}.
Old refs will continue working, because permanent redirects are set up.
However, we suggest every contributor to update the remote URLs in their local clones.

@node [2017-12-14] 0 35,[2017-08-15] 0 34,[2017-12-20] GitHub organization,Top
@anchor{index id8}@anchor{e62}
@chapter [2017-12-14] 0.35


Milestone v0.35 ➚@footnote{https://github.com/ghdl/ghdl/milestone/3?closed=1}


@itemize -

@item 
Assert and report messages are sent to stdout (#394)

@item 
Improve support for unbounded records

@item 
Bugs fixed
@end itemize

@node [2017-08-15] 0 34,[2015-10-23] 0 33,[2017-12-14] 0 35,Top
@anchor{index id9}@anchor{e63}
@chapter [2017-08-15] 0.34


Milestone v0.34 ➚@footnote{https://github.com/ghdl/ghdl/milestone/1?closed=1}


@itemize -

@item 
Display stack backtraces on errors or assert failures

@item 
Compile scripts for vendor libraries (Xilinx, Altera, osvvm, vunit)

@item 
Use SSE2 for mcode backend

@item 
mcode backend ported to @code{x86_64}

@item 
Support cocotb potentialventures/cocotb@footnote{https://github.com/potentialventures/cocotb}

@item 
Main repository is now on github: github.com/tgingold/ghdl@footnote{https://github.com/tgingold/ghdl}

@item 
Docs available on rtd: ghdl.readthedocks.org@footnote{https://ghdl.readthedocs.org/en/latest/}

@item 
Speed improved.

@item 
New option @code{--psl-report}, to report status of PSL assert and cover.

@item 
VHDL2008: support nested package
@end itemize

@node [2015-10-23] 0 33,[2014-11-XX] 0 32,[2017-08-15] 0 34,Top
@anchor{index id10}@anchor{e64}
@chapter [2015-10-23] 0.33



@itemize -

@item 
Improve support of VHDL2008

@item 
Support OSVVM@footnote{http://osvvm.org} 2015

@item 
Support VUnit: LarsAsplund/vunit@footnote{https://github.com/LarsAsplund/vunit}

@item 
Many bugs fixed
@end itemize

@node [2014-11-XX] 0 32,[2014-01-XX] 0 31,[2015-10-23] 0 33,Top
@anchor{index xx-0-32}@anchor{e65}
@chapter [2014-11-XX] 0.32



@itemize -

@item 
Updated to build with @code{gcc-4.9.2}.

@item 
support:
- partial of VHDL2008 (available with @code{--std=08}):
- new @code{std.env} package.
- added features in @code{std.textio} package
- all standard IEEE packages.
- new operations (relation operators, maximum and minimum, unary reduction operators)
- @code{boolean_vector}, @code{integer_vector}, @code{real_vector}.
- process(all).
- generic packages and interface package declarations.
- block comments (aka delimited comments)
- implicitely defined to_string functions.
- OSVVM 2014_01

@item 
Bugs fixed
@end itemize

@node [2014-01-XX] 0 31,0 30,[2014-11-XX] 0 32,Top
@anchor{index xx-0-31}@anchor{e66}
@chapter [2014-01-XX] 0.31



@itemize -

@item 
Updated to build with @code{gcc-4.8.2}.

@item 
Supports OSVVM (Open-Source VHDL Verification Methodology) (see osvvm.org@footnote{http://osvvm.org}) in its VHDL-2002 form.

@item 
Adds @code{'image} and @code{'value} attributes for all required datatypes

@item 
Many bugs and support issues fixed.

@item 
New home on @code{https://sourceforge.net/projects/ghdl-updates/}
@end itemize

@node 0 30,[2010-01-09] 0 29,[2014-01-XX] 0 31,Top
@anchor{index id11}@anchor{e67}
@chapter 0.30


Never released, swith to Dunoon Edition.

@node [2010-01-09] 0 29,[2009-09-17] 0 28,0 30,Top
@anchor{index id12}@anchor{e68}
@chapter [2010-01-09] 0.29



@itemize -

@item 
Initial implementation of embedded PSL assertions.

@item 
Improve:
- speed of non-sensitized processes.
- speed of string case statement (dichotomy instead of linear search).

@item 
bug fix:
- and improvements in SDF annotator.
- when the bound of a string literal type is not locally static.
- gcov crash
@end itemize

@node [2009-09-17] 0 28,[2008-07-01] 0 27,[2010-01-09] 0 29,Top
@anchor{index id13}@anchor{e69}
@chapter [2009-09-17] 0.28



@itemize -

@item 
Add @code{--std=08} to enable VHDL2008 features.

@item 
Support all-sensitized processes from VHDL2008.

@item 
Documentation typos (thanks to Peter Huewe).

@item 
bug fix:


@itemize -

@item 
handle @code{'pos/'leftof/'rightof/'succ/'pred} in concurrent statements.

@item 
overloaded resolution functions.

@item 
direct drivers elaboration for unconstrained array signals.

@item 
many minor bugs.
@end itemize
@end itemize

@node [2008-07-01] 0 27,[2007-04-08] 0 26,[2009-09-17] 0 28,Top
@anchor{index id14}@anchor{e6a}
@chapter [2008-07-01] 0.27



@itemize -

@item 
Improve SDF annotation (handles much more annotations)

@item 
Add @code{--ieee-asserts=} option to control assert messages from ieee packages.

@item 
bug fix:


@itemize -

@item 
aliases in port map

@item 
crash during elaboration for top entities with ports/generic

@item 
crash when string literal in aggregate.

@item 
concatenation with an array subtype element.

@item 
non-static subtype used by type conversions in associations.

@item 
clear timeout in wait for.

@item 
minor bugs.
@end itemize
@end itemize

@node [2007-04-08] 0 26,[2006-08-11] 0 25,[2008-07-01] 0 27,Top
@anchor{index id15}@anchor{e6b}
@chapter [2007-04-08] 0.26



@itemize -

@item 
@code{GHDL_PREFIX} environment variable overrides default installation prefix.

@item 
simulation speed improved with ‘direct drivers’.

@item 
windows version:
- exceptions are caught
- use executable path instead of registry for prefix

@item 
bug fix:
- individual association by expression (was not working)
- individual association of string
- within windows code generator
- [windows] large local variables crashed
- crash when overloaded aggregate target.
- forbid individual association with open
- crash when bad array prefix
- correctly extract sensitivity of record aggregate
@end itemize

@node [2006-08-11] 0 25,[2006-06-25] 0 24,[2007-04-08] 0 26,Top
@anchor{index id16}@anchor{e6c}
@chapter [2006-08-11] 0.25



@itemize -

@item 
VPI functions to schedules values.

@item 
@code{math_real} now works under windows.

@item 
documentation updated for windows.

@item 
filename/line number displayed for range error during signal update.

@item 
bug fix:
- ieee math libraries available when @code{--ieee=synopsys}.
- @code{'image} in package bodies.
- scan of fp literals.
- interface identifier is checked for conformance rules.
- avoid a crash in case of error in configuration specification.
- non-static choice in unidim case are now correctly checked.
- do not crash in case of bad use of incomplete type.
- @code{'range} are not expressions.
- handle file declaration in concurrent procedure calls.
- correctly handle static @code{'image} attribute.
- handle in-conversion for signal associated with an expression.
- emit an error when a function tries to exit without a return.
@end itemize

@node [2006-06-25] 0 24,[2006-05-16] 0 23,[2006-08-11] 0 25,Top
@anchor{index id17}@anchor{e6d}
@chapter [2006-06-25] 0.24



@itemize -

@item 
Handle enums with more than 256 elements.

@item 
Relax expr static rules in 93c to analyze Xilinx core lib from 8.1

@item 
man page, @code{ghdl.1}, added.

@item 
windows installer improved

@item 
bug fix:
- correctly handle empty file name.
- correctly handle unused subprograms of protected types.
- avoid a crash if unused library are used.
- avoid crashes during error reports.
- add a missing case array conversion.
- build on @code{x86_64}.
- code generated for conversion after mod/rem (windows version).
- @code{-fexplicit} crashed with @code{std.standard} functions.
- handle recursion of pure/wait checks.
- correctly handle error cases of user attributes
- time and character read procedure of std.textio.
- initialize by value parameters (instead of copy-in).
@end itemize

@node [2006-05-16] 0 23,[2006-03-28] 0 22,[2006-06-25] 0 24,Top
@anchor{index id18}@anchor{e6e}
@chapter [2006-05-16] 0.23



@itemize -

@item 
bug fix:
- handle implicit conversion in resolution functions.
- missing implicit conversion added.
- avoid a crash in error.
@end itemize

@node [2006-03-28] 0 22,[2005-12-18] 0 21,[2006-05-16] 0 23,Top
@anchor{index id19}@anchor{e6f}
@chapter [2006-03-28] 0.22



@itemize -

@item 
direntry added in @code{ghdl.texi}

@item 
updated:
- Documentation (explain bug in Xilinx unisim library).
- to @code{gcc 4.1}
- math_real

@item 
bug fix:
- avoid crash if type conversion is indexed/sliced
- do not allow anymore uncomplete individual association
- missing check on array association
- check bounds for val attribute on enumerated type
- array inequality of locally static expressions evaluated
- configuration issue
- @code{--warn-no-vital-generic} is now working
@end itemize

@node [2005-12-18] 0 21,0 20 [2005-10-15],[2006-03-28] 0 22,Top
@anchor{index id20}@anchor{e70}
@chapter [2005-12-18] 0.21



@itemize -

@item 
local optimizations (loops, indexed name).

@item 
simulation speed improved by 20% due to processes mngt optimizations.

@item 
stack-switching code ported to @code{x86_64} (@code{amd64/em64t}).

@item 
stack-switching code ported to @code{ia64}.

@item 
@code{--syn-binding} option extended (see documentation).

@item 
bug fix:
- line number for some bound violation messages.
- improved message error for deferred constants.
- file parameter for functions.
- universal real divided by integer handled in locally static expr.
- @code{std_ulogic} types and arrays are known by VPI.
- missing space added in VCDs for integers.
- @code{CR+LF} is also end of line for @code{std.textio.readline}.
- avoid a crash if parse error on choice.
- handle @code{'image} in nested subprograms.
- handle @code{'image} for floating point types.
- do not use varargs C calls.
- handle missing @code{EOL} for @code{readline}.
- for @code{x86_64}
@end itemize

@node 0 20 [2005-10-15],[2005-08-17] 0 19,[2005-12-18] 0 21,Top
@anchor{index id21}@anchor{e71}
@chapter 0.20 [2005-10-15]



@itemize -

@item 
stack memory usage improved for shortcurt operations.

@item 
gtkwave now displays nice waves for bit and std_ulogic signals.

@item 
time unit is displayed in assert/report message.

@item 
@code{-fexplicit} option added.

@item 
integers are now written in VCD files.

@item 
hash table added for design_units (speed optimization).

@item 
range checks slightly optimized.

@item 
@code{--vcdz} run time option added.

@item 
improved error message for invalid expressions.

@item 
grt now compiles with GNAT-GPL-2005 (use a GNAT bug work-around).

@item 
bug fix:
- handle more types for @code{--dump-rti} and @code{--wave}.
- @code{'last_event} and @code{'last_active} (bad value returned when no previous event or activity).
- @code{'image} attribute for physical types (was bad unit).
- @code{'image} attribute for locally static integers.
- for reading @code{.ghw} files.
- in @code{--xref}.
@end itemize

@node [2005-08-17] 0 19,[2005-03-12] 0 18,0 20 [2005-10-15],Top
@anchor{index id22}@anchor{e72}
@chapter [2005-08-17] 0.19



@itemize -

@item 
@code{ADAFLAGS} has been replaced by @code{GHDL_ADAFLAGS} to ease compilation.

@item 
@code{ieee.math_real} and @code{ieee.math_complex} added (only partially, based on a
draft).

@item 
current time is printed with assert/report messages.

@item 
stack switch assembly code ported to powerpc-linux.

@item 
documentation on how to use grt from Ada added.

@item 
allow indexes of indexed names to be non-static in case statements (93c only)
(this is not standard, but I can’t see why it should be required).

@item 
unbound ports of entities are now reported with @code{--warn-binding}.

@item 
some error or warning messages improved.

@item 
@code{--wave} option added to dump waveforms (using ghw file format).

@item 
bug fix:
- internal error (missing close_temp for implicit read)
- @code{--xref-html}: avoid to reanalyze unit.
- handle implicit conversion for @code{'image}.
- aggregate assigned to an aggregate: avoid crash.
- array attributes on unconstrained array: avoid crash.
- @code{'last_event} returns @code{time'high} if no event.
- @code{'last_event} on array (uninitialized variable).
- allow calling @code{rising_edge} with a port of mode buffer.
- allow aliases of unconstrained arrays.
- bound error on aggregate with an unused other association.
- catch indexed/sliced component (was crashing).
- catch index/slice of a type conversion (was crashing).
- handle bad component specification in conf (was crashing).
- missing ports in component (was crashing).
- component configurations were dicarded by bug in some cases.
- no more unused warnings for subprograms in architectures (they may be used in configuration).
- allow conversion in component configuration.
- conversion in associations with not statically defined array signals.
@end itemize

@node [2005-03-12] 0 18,[2005-02-26] 0 17,[2005-08-17] 0 19,Top
@anchor{index id23}@anchor{e73}
@chapter [2005-03-12] 0.18



@itemize -

@item 
Keep last line number to speed-up line number look-up (improvement).

@item 
@code{--warn-default-binding} added, @code{--warn-binding} rewritten.

@item 
@code{'value} implemented for integer numbers.

@item 
bug fix:
- in @code{textio.read} for time.
- @code{file_close} does not crash if file was already closed.
- spurious unused warnings for protected types.
- allow subtype names in slice during sensitivity extraction.
- correctly set the default value of collapsed ports.
- handling of stack2 (aka large concatenation bug).
@end itemize

@node [2005-02-26] 0 17,[2005-01-02] 0 16,[2005-03-12] 0 18,Top
@anchor{index id24}@anchor{e74}
@chapter [2005-02-26] 0.17



@itemize -

@item 
command @code{--elab-run} added.

@item 
Code generation for aggregate improved.

@item 
Library name of option @code{--work=} is checked.

@item 
@code{--no-run} option added to prevent simulation (may be used to disp tree only).

@item 
disp signal name in error when multiple sources drive an unresolved signal.

@item 
@code{-m}/@code{--gen-makefile} now handle several libraries.

@item 
dependences are not stored anymore in libraries (shorter/faster).

@item 
mentor version of ieee library is now provided.

@item 
handling of universal types is more consistent with LRM (almost corner cases).

@item 
iterator and indexes whose bounds were universal expressions are now of type integer or erroneous, according to the weird LRM rules.

@item 
handle selected name as entity name in architecture/configuration.

@item 
bug fix:
- port map with expression (corner case ?).
- forbid empty extended identifiers.
- enumeration literal xrefs.
- non-object name in sensitivity list crashed.
- correctly handle alias of signals in processes.
@end itemize

@node [2005-01-02] 0 16,[2004-10-13] 0 15,[2005-02-26] 0 17,Top
@anchor{index id25}@anchor{e75}
@chapter [2005-01-02] 0.16



@itemize -

@item 
@code{std.textio}: readline has no limits on line length.

@item 
command @code{-r} (run) added.

@item 
bug fix:
- better handling of errors in type conversion.
- few uninitialized variables in ghdl itself caught.
- parse error: @code{begin} in aggregates.
- bad @code{unused subprogram} warnings.
@end itemize

@node [2004-10-13] 0 15,[2004-08-29] 0 14,[2005-01-02] 0 16,Top
@anchor{index id26}@anchor{e76}
@chapter [2004-10-13] 0.15



@itemize -

@item 
library file format modified to handle relative pathes.

@item 
install fixed to use relative pathes.

@item 
internal change: ortho API modified (constant are not anymore expressions).
@end itemize

@node [2004-08-29] 0 14,[2004-06-26] 0 13,[2004-10-13] 0 15,Top
@anchor{index id27}@anchor{e77}
@chapter [2004-08-29] 0.14



@itemize -

@item 
pretty printing in HTML command, @code{--pp-html}, added.

@item 
xref generation in HTML command, @code{--xref-html}, added.

@item 
syntax checking command, @code{-s}, added.

@item 
Code generation in whole command, @code{-c files -e unit}, added.

@item 
warns for unused subprograms.

@item 
bug box added to help bug reports.

@item 
@code{-s} (syntax check) command added.

@item 
Missing grt subprogram to close non-text file added.

@item 
maximum line length of @code{std.textio.readline} extended to 512 characters.

@item 
@code{std.textio.readline} assert error on truncated lines.

@item 
Handle P32 and P64 in @code{--trace-signals}

@item 
sequentials statements are not canonicalized (should be faster).

@item 
@code{DESTDIR} added in Makefile to ease packaging.

@item 
for @code{-m} command, re-parse modified files of the work library.

@item 
Many checks added on interfaces.

@item 
Many checks added on associations, better handling of conversions.

@item 
Checks for unassociated entity ports at elaboration.

@item 
bug fix:
- resolution function can be an expanded name.
- missing type check in a corner case.
- emit an error when @code{EOF} is reached while a text file is read.
- @code{std.textio.read} for negative number.
- @code{std.textio.read} [integer]: correctly handle end of line.
- parameters of protected type: handled and checked.
- @code{gen_tree.c} modified to work with sparc.
@end itemize

@node [2004-06-26] 0 13,[2004-05-30] 0 12,[2004-08-29] 0 14,Top
@anchor{index id28}@anchor{e78}
@chapter [2004-06-26] 0.13



@itemize -

@item 
support of 64bits integers and 32bits time (not yet user available)

@item 
handle @code{'high} and @code{'low} attributes on non-locally static types and subtypes.

@item 
Many warning switches added (to control output of warnings).

@item 
@code{--gen-makefile} mode added to ghdl (to generate a Makefile)

@item 
alias identifier restrictions of vhdl-02 implemented.

@item 
declarative region for architecture from vhdl-02 implemented.

@item 
buffer port association rules of vhdl-02 implemented.

@item 
method operator restrictions of vhdl-02 implemented.

@item 
@code{'driving} and @code{'driving_value} implemented.

@item 
run-time bound check error message now contains file name and line number.

@item 
strings are not stored anymore with the identifiers.

@item 
parser does not back-track anymore.

@item 
bug fix:
- name clash in generated @code{.s} files (arch and port/generic names).
- implicit conversion of signal parameters.
- handle locally static type conversion of arrays.
- stabilize during elaboration of an unconstrained signal.
- revert previous @code{vhdl87} conf spec bug fix, according to INT-1991 issue 27.
- multiple visibility of declarations (eg: direct and alias).
- names attribute of non-object aliases.
@end itemize

@node [2004-05-30] 0 12,[2004-04-24] 0 11 1,[2004-06-26] 0 13,Top
@anchor{index id29}@anchor{e79}
@chapter [2004-05-30] 0.12



@itemize -

@item 
simulation speed improved (2 fold) due to reduced activity optimization.

@item 
type conversion handled in associations

@item 
make mode of ghdl improved.

@item 
bug fix:
- attribute specification
- allow discrete type marks in choices
- handling of generate statement for VCD
- allow dereference in variable associations
- allow function conversion in block port map
- vhdl87: apply configuration specification inside generate stmts.
- catch non-passive concurrent procedure calls in entity.
- association of an unconstrained port with an expression.
- declaring an uncons. array subtype of an uncons. array subtype.
@end itemize

@node [2004-04-24] 0 11 1,[2004-04-17] 0 11,[2004-05-30] 0 12,Top
@anchor{index id30}@anchor{e7a}
@chapter [2004-04-24] 0.11.1



@itemize -

@item 
bug fix:
- corner case of signal not updated
- handle @code{'stable}, @code{'quiet} with a paramater > 0
- typos (missing @code{+ }) in sparc.S
@end itemize

@node [2004-04-17] 0 11,[2004-02-28] 0 10,[2004-04-24] 0 11 1,Top
@anchor{index id31}@anchor{e7b}
@chapter [2004-04-17] 0.11



@itemize -

@item 
signal collapsing improved.

@item 
simulation kernel speed improved (maybe 5x faster).

@item 
@code{--lines} mode of ghdldrv added.

@item 
boolean signals are now dumped in vcd files.

@item 
bug fix:
- in code generation for an aggregate.
- run-time check of ascending order of projected transactions.
- empty sequence of stmts in case alternatives (unidim array).
- evaluation of locally static ‘range attribute.
- implicit conversion in formal function convertor.
- return type is a type mark.
@end itemize

@node [2004-02-28] 0 10,[2004-02-01] 0 9,[2004-04-17] 0 11,Top
@anchor{index id32}@anchor{e7c}
@chapter [2004-02-28] 0.10



@itemize -

@item 
architecture with many instances can be compiled with less memory.

@item 
@code{--stats} option added to the simulator, to evaluate performance.

@item 
signals are now collapsed between instances, if possible.

@item 
simulation is about 3x faster.

@item 
sparc port available (source only).

@item 
more checks added for attribute specification.

@item 
chop command added (split files by design unit).

@item 
bug fix:
- absolute source files.
- empty sequence of statements in case alternatives.
@end itemize

@node [2004-02-01] 0 9,[2003-11-05] 0 8,[2004-02-28] 0 10,Top
@anchor{index id33}@anchor{e7d}
@chapter [2004-02-01] 0.9



@itemize -

@item 
VITAL level 0 restrictions checks added.

@item 
VITAL 2000 packages provided.

@item 
run-time information (such as signal names) rewritten.

@item 
SDF support added (partial and experimental).

@item 
bug fix:
- allow elaboration even if no package body if the package is present in a file but not used by the hierarchy.
- @code{delay_length} range is pre-elaborated (was not in v93).
- crashed when a design unit is not found at elaboration.
- allow association of @code{'stable}, @code{'quiet}… with signal interfaces.
- concurrent procedure call creates a non-sensitized process.
- effective value of non-scalar resolved signal might not be set.
@end itemize

@node [2003-11-05] 0 8,[2003-08-02] 0 7,[2004-02-01] 0 9,Top
@anchor{index id34}@anchor{e7e}
@chapter [2003-11-05] 0.8



@itemize -

@item 
protected types (from 1076a/1076-2000) implemented.

@item 
file declarations are finalized in subprograms.

@item 
an exit call-back has been added in the run-time library.

@item 
internal modifications (nodes are stored in a table).

@item 
name of generated executable can be set with @code{-o} option.

@item 
IVI (ivi.sourceforge.org) support through a few VPI subprograms.

@item 
pure and wait checks added.

@item 
out ports are correctly dumped in VCD files.

@item 
bug fix:
- signal declaration not allowed in processes.
- several bugs fixed.
@end itemize

@node [2003-08-02] 0 7,[2003-06-09] 0 6,[2003-11-05] 0 8,Top
@anchor{index id35}@anchor{e7f}
@chapter [2003-08-02] 0.7



@itemize -

@item 
layout of internal nodes improved.

@item 
incremental binding (vhdl93).

@item 
association of in port with expressions (vhdl93).

@item 
@code{--disp-time} option added.

@item 
make mode (@code{ghdl -m}) rewritten.

@item 
@code{'simple_name}, @code{'path_name} and @code{'instance_name} added (vhdl93).

@item 
bug fix:
- instantiation added in hierarchy.
- individual association of subelements by expression.
- @code{--stop-delta} option is working.
- correctly handle operators names at function call.
- several small bugs fixed.
@end itemize

@node [2003-06-09] 0 6,[2003-05-10] 0 5,[2003-08-02] 0 7,Top
@anchor{index id36}@anchor{e80}
@chapter [2003-06-09] 0.6



@itemize -

@item 
internal modifications (single linked list used instead of arrays).

@item 
Mentor version of std_logic_arith is provided.

@item 
postponed handled (vhdl 93).

@item 
declarations allowed in a generate statement (vhdl 93).

@item 
non object aliases handled (vhdl93).

@item 
signatures handled (vhdl93).

@item 
bug fix:
- @code{xnor} on @code{bit} and @code{boolean} is working.
- @code{selected_name} list in use clauses.
- many other small bug fixes.
@end itemize

@node [2003-05-10] 0 5,[2003-04-07] 0 4 1,[2003-06-09] 0 6,Top
@anchor{index id37}@anchor{e81}
@chapter [2003-05-10] 0.5



@itemize -

@item 
foreign attribute handled.  You can now call subprograms defined in a foreign
language (such as C or Ada).

@item 
ghdl entry point added: you can start the VHDL simulation from your own
program.

@item 
bug fix:
- triple use.
- incomplete types
@end itemize

@node [2003-04-07] 0 4 1,[2003-04-02] 0 4,[2003-05-10] 0 5,Top
@anchor{index id38}@anchor{e82}
@chapter [2003-04-07] 0.4.1



@itemize -

@item 
bug fix: in the vcd output.
@end itemize

@node [2003-04-02] 0 4,Python Module Index,[2003-04-07] 0 4 1,Top
@anchor{index id39}@anchor{e83}
@chapter [2003-04-02] 0.4



@itemize -

@item 
@code{libgrt} does not depend on GNAT library anymore.
Installation requirements are reduced.

@item 
@code{'delayed} attribute implemented.

@item 
@code{'transaction} attribute implemented.

@item 
unaffected (from vhdl-93) implemented.

@item 
ghdl action @code{--disp-standard} prints the std.standard package.

@item 
exponentiation operator, @code{**}, implemented for all integer and floating
point types.

@item 
many other small bug fixes.

@item 
bug fix: subprogram interfaces are now elaborated.
@end itemize

@node Python Module Index,Index,[2003-04-02] 0 4,Top
@unnumbered Python Module Index


@menu
* pyGHDL: 0. 
* pyGHDL.cli: 1. 
* pyGHDL.cli.dom: 2. 
* pyGHDL.cli.lsp: 3. 
* pyGHDL.dom: 4. 
* pyGHDL.dom._Translate: 5. 
* pyGHDL.dom._Utils: 6. 
* pyGHDL.dom.Aggregates: 7. 
* pyGHDL.dom.Attribute: 8. 
* pyGHDL.dom.Concurrent: 9. 
* pyGHDL.dom.DesignUnit: a. 
* pyGHDL.dom.Expression: b. 
* pyGHDL.dom.formatting: c. 
* pyGHDL.dom.formatting.GraphML: d. 
* pyGHDL.dom.formatting.prettyprint: e. 
* pyGHDL.dom.InterfaceItem: f. 
* pyGHDL.dom.Literal: 10. 
* pyGHDL.dom.Misc: 11. 
* pyGHDL.dom.Names: 12. 
* pyGHDL.dom.NonStandard: 13. 
* pyGHDL.dom.Object: 14. 
* pyGHDL.dom.PSL: 15. 
* pyGHDL.dom.Range: 16. 
* pyGHDL.dom.Sequential: 17. 
* pyGHDL.dom.Subprogram: 18. 
* pyGHDL.dom.Symbol: 19. 
* pyGHDL.dom.Type: 1a. 
* pyGHDL.libghdl: 1b. 
* pyGHDL.libghdl._decorator: 1c. 
* pyGHDL.libghdl._types: 1d. 
* pyGHDL.libghdl.errorout: 1e. 
* pyGHDL.libghdl.errorout_console: 1f. 
* pyGHDL.libghdl.errorout_memory: 20. 
* pyGHDL.libghdl.file_comments: 21. 
* pyGHDL.libghdl.files_map: 22. 
* pyGHDL.libghdl.files_map_editor: 23. 
* pyGHDL.libghdl.flags: 24. 
* pyGHDL.libghdl.libraries: 25. 
* pyGHDL.libghdl.name_table: 26. 
* pyGHDL.libghdl.std_names: 27. 
* pyGHDL.libghdl.str_table: 28. 
* pyGHDL.libghdl.utils: 29. 
* pyGHDL.libghdl.vhdl: 2a. 
* pyGHDL.libghdl.vhdl.canon: 2b. 
* pyGHDL.libghdl.vhdl.elocations: 2c. 
* pyGHDL.libghdl.vhdl.flists: 2d. 
* pyGHDL.libghdl.vhdl.formatters: 2e. 
* pyGHDL.libghdl.vhdl.ieee: 2f. 
* pyGHDL.libghdl.vhdl.lists: 30. 
* pyGHDL.libghdl.vhdl.nodes: 31. 
* pyGHDL.libghdl.vhdl.nodes_meta: 32. 
* pyGHDL.libghdl.vhdl.nodes_utils: 33. 
* pyGHDL.libghdl.vhdl.parse: 34. 
* pyGHDL.libghdl.vhdl.prints: 35. 
* pyGHDL.libghdl.vhdl.scanner: 36. 
* pyGHDL.libghdl.vhdl.sem: 37. 
* pyGHDL.libghdl.vhdl.sem_lib: 38. 
* pyGHDL.libghdl.vhdl.std_package: 39. 
* pyGHDL.libghdl.vhdl.tokens: 3a. 
* pyGHDL.libghdl.vhdl.utils: 3b. 
* pyGHDL.lsp: 3c. 
* pyGHDL.lsp.document: 3d. 
* pyGHDL.lsp.lsp: 3e. 
* pyGHDL.lsp.lsptools: 3f. 
* pyGHDL.lsp.references: 40. 
* pyGHDL.lsp.symbols: 41. 
* pyGHDL.lsp.version: 42. 
* pyGHDL.lsp.vhdl_ls: 43. 
* pyGHDL.lsp.workspace: 44. 
@end menu


@node Index,,Python Module Index,Top
@unnumbered Index


@printindex ge


@c %**end of body
@bye
